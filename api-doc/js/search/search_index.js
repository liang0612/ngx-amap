var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AMapClass.html",[0,0.247,1,1.54]],["body/interfaces/AMapClass.html",[0,0.108,1,1.118,2,0.16,3,0.02,4,0.019,5,0.019,6,0.024,7,2.145,8,0.093,9,0.356,10,4.594,11,3.888,12,4.166,13,2.772,14,3.007,15,4.166,16,4.519,17,4.794,18,4.35,19,3.658,20,4.166,21,1.679,22,4.794,23,3.768,24,3.375,25,4.519,26,1.538,27,1.325,28,2.999,29,4.739,30,4.519,31,2.884,32,4.594,33,4.019,34,3.007,35,3.375,36,3.375,37,4.166,38,4.794,39,2.827,40,3.888,41,4.519,42,4.594,43,4.519,44,4.794,45,0.624,46,1.354,47,3.205,48,0.347,49,0.005,50,2.017,51,0.004,52,1.373,53,0.369,54,2.145,55,0.39,56,0.551,57,0.409,58,0.254,59,1.152,60,0.374,61,4.167,62,4.167,63,3.607,64,4.167,65,4.167,66,3.607,67,4.167,68,4.167,69,4.167,70,4.167,71,3.607,72,4.443,73,4.167,74,3.607,75,4.167,76,4.167,77,4.167,78,4.443,79,4.443,80,4.167,81,4.167,82,4.167,83,3.947,84,3.607,85,4.167,86,4.167,87,4.167,88,3.607,89,4.167,90,4.167,91,4.167,92,4.167,93,4.167,94,4.167,95,4.167,96,0.257,97,0.759,98,0.66,99,0.533,100,1.293,101,1.337,102,1.503,103,2.145,104,2.145,105,1.337,106,1.922,107,2.507,108,1.503,109,1.503,110,2.145,111,2.145,112,5.029,113,1.664,114,1.772,115,2.408,116,1.774,117,2.145,118,1.385,119,1.022,120,1.774,121,1.503,122,1.337,123,2.507,124,2.145,125,1.922,126,1.774,127,1.503,128,1.183,129,1.503,130,1.503,131,5.971,132,3.578,133,3.578,134,3.578,135,3.578,136,3.578,137,3.578,138,0.077,139,2.145,140,1.44,141,2.145,142,1.922,143,2.145,144,3.578,145,2.145,146,4.603,147,2.774,148,1.183,149,2.145,150,2.145,151,2.145,152,2.145,153,1.922,154,2.145,155,2.145,156,2.145,157,2.145,158,2.145,159,2.507,160,1.922,161,2.145,162,1.922,163,2.402,164,1.774,165,3.578,166,3.57,167,3.57,168,2.145,169,3.578,170,1.922,171,2.145,172,3.578,173,2.145,174,3.578,175,2.145,176,0.002,177,0.001]],["title/interfaces/AMapEvent.html",[0,0.247,72,4.075]],["body/interfaces/AMapEvent.html",[0,0.257,2,0.382,3,0.029,4,0.045,5,0.045,6,0.061,8,0.222,21,2.844,45,1.212,48,0.53,49,0.005,51,0.003,52,2.48,53,1.52,55,1.605,56,1.36,57,0.372,58,1.046,59,4.229,60,1.541,72,5.743,138,0.04,176,0.004,177,0.003,178,5.123,179,6.945,180,6.945,181,6.945,182,6.945,183,6.945,184,6.945,185,8.161,186,6.725,187,6.725,188,5.123,189,8.446,190,2.882,191,9.599,192,6.945,193,5.123,194,6.945,195,5.123,196,6.945,197,5.123,198,4.589,199,6.945,200,7.878,201,5.123]],["title/interfaces/AddressComponent.html",[0,0.247,202,3.822]],["body/interfaces/AddressComponent.html",[0,0.276,2,0.411,3,0.031,4,0.049,5,0.049,6,0.037,8,0.239,9,0.725,48,0.564,49,0.005,51,0.003,57,0.423,96,0.146,115,4.552,138,0.043,142,4.939,176,0.004,177,0.003,202,5.658,203,5.514,204,5.514,205,5.421,206,8.7,207,8.7,208,8.7,209,4.055,210,5.841,211,8.7,212,8.7,213,5.841,214,8.7,215,8.7,216,8.7,217,6.748,218,5.514]],["title/directives/AmapAutocompleteDirective.html",[219,2.97,220,3.452]],["body/directives/AmapAutocompleteDirective.html",[3,0.016,4,0.025,5,0.025,6,0.064,8,0.123,9,0.446,10,3.009,45,0.782,48,0.476,49,0.005,51,0.001,52,1.617,53,1.627,55,1.334,56,1.131,57,0.405,58,0.87,60,1.342,96,0.204,138,0.022,148,2.471,176,0.002,177,0.001,209,3.216,219,2.701,220,3.14,221,1.982,222,6.983,223,7.02,224,2.534,225,3.293,226,4.089,227,4.317,228,4.089,229,2.078,230,3.293,231,4.481,232,2.61,233,2.391,234,4.602,235,1.592,236,3.293,237,3.293,238,4.651,239,4.91,240,2.792,241,3.293,242,3.293,243,3.293,244,4.91,245,5.235,246,3.293,247,5.565,248,3.899,249,4.602,250,4.317,251,5.565,252,1.301,253,1.378,254,1.811,255,5.565,256,4.435,257,4.602,258,5.67,259,4.481,260,1.339,261,2.829,262,1.516,263,2.829,264,2.829,265,2.829,266,6.306,267,2.829,268,4.481,269,2.829,270,4.481,271,2.829,272,4.481,273,2.829,274,2.829,275,4.481,276,4.481,277,4.651,278,2.829,279,2.34,280,3.293,281,4.435,282,2.829,283,1.899,284,2.829,285,2.829,286,2.134,287,2.829,288,2.701,289,2.829,290,2.078,291,2.701,292,2.829,293,1.4,294,3.736,295,2.829,296,0.955,297,0.911,298,1.264,299,2.829,300,4.834,301,5.392,302,0.765,303,1.089,304,1.982,305,1.899,306,0.884,307,2.534,308,2.534,309,1.899,310,2.078,311,1.899,312,2.078,313,3.293,314,1.547,315,3.14,316,0.558,317,0.869,318,1.926,319,2.078,320,2.829,321,2.829,322,2.829,323,2.829,324,2.829,325,2.829,326,1.149,327,2.078,328,2.829,329,2.829,330,2.829,331,6.33,332,2.829,333,2.829,334,3.706,335,2.34,336,2.829,337,2.829,338,2.829,339,2.829,340,2.829,341,2.829,342,2.829,343,2.829,344,2.078,345,1.483,346,2.829,347,2.829,348,2.829]],["title/injectables/AmapAutocompleteService.html",[256,3.452,349,0.933]],["body/injectables/AmapAutocompleteService.html",[1,1.972,3,0.025,4,0.039,5,0.039,6,0.056,8,0.194,9,0.628,10,5.639,21,1.972,45,1.101,46,1.689,48,0.451,49,0.005,51,0.004,53,1.37,55,1.147,56,0.973,57,0.336,58,0.748,60,1.101,96,0.238,138,0.049,148,3.48,176,0.003,177,0.002,190,1.633,223,6.171,232,2.51,233,3.147,235,2.095,252,1.295,253,2.174,254,2.277,256,4.422,260,1.886,262,0.981,277,3.279,286,2.126,288,2.69,291,2.69,293,2.625,296,1.506,297,1.437,298,2.065,302,1.206,303,1.718,305,5.639,306,1.395,314,1.241,316,1.245,317,0.922,318,2.712,345,2.121,349,1.195,350,1.58,351,3.833,352,3.691,353,2.174,354,2.869,355,2.961,356,6.311,357,3.074,358,4.463,359,0.942,360,4.463,361,2.198,362,1.374,363,1.437,364,1.66,365,1.66,366,2.198,367,1.606,368,1.606,369,1.46,370,1.846,371,3.997,372,2.461,373,3.997,374,3.997,375,1.46,376,3.997,377,2.174,378,1.606,379,5.653,380,3.997,381,2.08,382,3.997,383,2.174,384,2.08,385,3.997,386,3.127,387,1.995,388,3.997,389,2.037,390,3.127,391,3.997,392,3.997,393,3.997]],["title/classes/AmapAutocompleteWrapper.html",[277,3.62,316,0.972]],["body/classes/AmapAutocompleteWrapper.html",[1,1.742,3,0.021,4,0.033,5,0.033,6,0.06,8,0.163,9,0.554,10,5.268,21,2.452,45,0.973,46,1.423,48,0.511,49,0.005,51,0.003,52,1.698,53,1.536,55,1.589,56,1.311,57,0.383,58,1.008,60,1.485,96,0.226,114,2.146,138,0.043,148,2.073,176,0.003,177,0.002,190,1.375,209,1.752,223,6.557,232,2.345,233,1.616,235,1.076,240,3.474,241,4.096,242,4.096,252,1.091,254,1.595,256,2.634,260,1.124,262,1.46,277,4.096,286,2.655,288,3.36,290,2.762,291,3.36,293,2.568,298,1.572,302,1.016,303,1.447,305,5.268,306,1.175,314,1.045,316,1.099,317,0.836,318,2.395,345,1.958,349,1.056,351,4.073,352,3.109,353,1.831,354,1.473,355,2.074,357,1.831,359,0.793,361,2.559,362,1.157,363,1.211,364,1.399,365,1.399,366,2.559,367,1.353,368,1.353,369,1.23,370,1.555,371,3.368,372,2.073,373,3.368,374,4.993,375,1.823,376,5.951,377,2.715,378,1.353,379,4.993,380,3.368,381,3.096,382,4.993,383,1.831,384,2.598,385,3.368,386,3.906,387,1.681,388,3.368,389,1.716,390,2.634,391,3.368,392,3.368,393,3.368,394,1.967,395,2.306,396,2.778,397,5.575,398,3.76,399,3.76,400,2.266,401,3.76,402,3.76,403,3.76,404,1.585,405,2.39,406,1.616,407,1.616,408,1.447,409,2.266,410,3.76]],["title/directives/AmapCircleMarkerDirective.html",[219,2.97,411,3.62]],["body/directives/AmapCircleMarkerDirective.html",[3,0.01,4,0.015,5,0.015,6,0.065,8,0.075,9,0.392,14,4.769,16,1.218,21,0.935,26,1.117,27,0.357,28,2.315,45,0.688,48,0.381,49,0.005,51,0.001,52,1.007,53,1.663,55,1.124,56,0.953,57,0.397,58,0.733,60,1.371,96,0.173,138,0.013,176,0.002,177,0.001,219,1.804,221,1.218,222,7.113,225,2.199,226,2.896,228,2.896,229,1.277,230,2.199,232,2.348,235,1.128,236,3.442,237,2.199,238,3.442,243,2.199,246,2.199,250,3.058,252,0.869,253,0.846,254,1.34,260,0.895,262,0.658,266,6.713,280,2.199,281,3.282,283,1.167,293,2.723,294,2.647,296,1.01,297,0.964,298,1.49,300,5.505,301,5.879,302,0.47,303,0.669,304,1.218,306,0.543,309,1.167,310,1.277,311,1.167,312,1.277,313,2.199,314,1.096,315,2.097,316,0.343,317,0.989,319,1.277,326,2.145,327,1.277,344,1.277,345,1.95,362,0.535,395,1.238,411,2.199,412,8.006,413,1.557,414,3.942,415,3.058,416,2.823,417,2.282,418,2.183,419,3.442,420,1.903,421,2.322,422,1.865,423,1.804,424,2.475,425,1.903,426,2.736,427,2.515,428,2.657,429,2.823,430,3.145,431,3.145,432,3.26,433,2.632,434,2.919,435,2.919,436,2.919,437,2.736,438,3.942,439,3.942,440,3.942,441,3.942,442,3.942,443,3.942,444,3.942,445,3.942,446,3.942,447,3.942,448,3.942,449,3.942,450,3.942,451,3.942,452,3.874,453,2.993,454,1.738,455,1.811,456,1.738,457,1.738,458,1.738,459,1.738,460,1.105,461,1.738,462,1.933,463,1.738,464,4.331,465,1.738,466,1.738,467,1.738,468,1.738,469,1.738,470,1.738,471,1.738,472,1.738,473,1.738,474,1.738,475,1.738,476,1.738,477,1.738,478,1.738,479,1.738,480,1.738,481,1.738,482,1.738,483,1.738,484,1.738,485,2.993,486,1.738,487,1.738,488,1.738,489,1.738,490,1.738,491,1.738,492,1.738,493,1.738,494,1.738,495,2.199,496,1.738,497,1.458,498,1.738,499,1.083,500,1.366,501,1.738,502,0.909,503,2.199,504,1.738,505,1.738,506,1.738,507,1.738,508,1.738,509,1.437,510,1.738,511,1.277,512,1.348,513,2.896,514,1.557,515,1.348,516,1.348,517,2.993,518,1.557,519,1.738,520,1.348,521,1.738,522,1.738,523,1.557,524,1.557,525,1.738,526,1.738,527,1.738,528,1.738,529,1.738,530,1.738,531,1.437,532,1.277,533,1.437,534,1.437,535,1.437,536,1.738,537,1.437,538,1.738,539,1.738,540,1.738,541,1.738,542,1.738,543,1.738,544,1.738,545,1.738,546,1.738,547,1.738,548,1.738,549,1.738,550,1.738,551,1.738,552,1.738,553,1.738,554,1.738,555,1.738,556,1.738,557,1.738,558,1.738,559,1.738,560,1.738,561,1.738,562,1.738,563,1.738,564,1.738,565,1.348,566,7.089,567,1.738,568,1.738,569,1.167,570,1.738,571,1.738,572,1.738,573,1.738,574,1.348,575,1.738,576,1.738,577,1.738,578,1.738]],["title/injectables/AmapDistrictSearchService.html",[349,0.933,579,3.62]],["body/injectables/AmapDistrictSearchService.html",[1,1.919,3,0.024,4,0.038,5,0.038,6,0.056,8,0.186,9,0.611,17,5.022,21,1.919,45,1.072,46,1.625,48,0.42,49,0.005,51,0.004,53,1.347,55,1.117,56,0.946,57,0.33,58,0.728,60,1.072,96,0.241,114,2.76,115,5.008,138,0.048,163,2.883,176,0.003,177,0.002,190,1.571,232,2.474,233,3.08,235,2.051,252,1.246,253,2.091,254,2.238,260,1.835,293,2.586,296,1.449,297,1.383,298,2.022,302,1.16,303,1.653,306,1.342,314,1.194,316,1.211,317,0.902,318,2.639,345,2.085,349,1.163,350,1.52,351,3.777,353,2.091,354,2.809,355,2.91,357,2.991,359,1.513,361,2.139,362,1.322,363,1.383,364,1.597,365,1.597,366,2.139,367,1.545,368,1.545,369,1.405,370,1.776,372,2.368,375,1.405,377,2.091,378,1.545,381,2.001,383,2.091,384,2.001,386,3.008,387,1.92,389,2.803,460,0.616,579,4.512,580,5.799,581,3.155,582,6.141,583,6.032,584,4.294,585,4.294,586,3.008,587,3.846,588,3.846,589,3.846,590,3.846,591,3.331,592,3.846,593,5.5,594,3.846,595,3.846,596,3.846,597,3.846,598,2.192,599,3.331,600,3.846,601,3.331,602,3.846]],["title/classes/AmapDistrictSearchWrapper.html",[316,0.972,591,3.822]],["body/classes/AmapDistrictSearchWrapper.html",[1,1.718,3,0.021,4,0.033,5,0.033,6,0.058,8,0.16,9,0.547,17,5.101,21,2.433,45,0.959,46,1.396,48,0.493,49,0.005,51,0.004,52,1.405,53,1.496,55,1.537,56,1.258,57,0.366,58,0.967,60,1.425,96,0.231,114,2.803,115,5.094,138,0.043,163,2.478,176,0.003,177,0.002,190,2.011,232,2.327,233,1.586,235,1.056,252,1.071,254,1.573,260,1.103,293,2.551,298,1.55,302,0.997,303,1.421,306,1.153,314,1.026,316,1.084,317,0.827,318,2.362,345,1.94,349,1.041,351,3.966,353,1.797,354,1.446,355,2.045,357,1.797,359,1.643,361,2.536,362,1.136,363,1.189,364,1.373,365,1.373,366,2.536,367,1.328,368,1.328,369,1.207,370,1.527,372,2.035,375,1.798,377,2.678,378,1.328,381,3.062,383,1.797,384,2.562,386,3.852,387,1.65,389,2.509,394,1.931,395,2.274,396,2.74,400,2.224,404,1.556,405,2.364,406,1.586,407,1.586,408,1.421,409,2.224,460,0.943,579,2.711,580,6.088,581,2.711,583,6.088,586,2.585,587,3.305,588,3.305,589,3.305,590,4.924,591,4.264,592,5.885,593,4.924,594,3.305,595,4.924,596,3.305,597,3.305,598,1.884,599,4.264,600,3.305,601,4.264,602,3.305,603,4.924,604,4.924,605,5.498,606,3.69,607,3.69,608,3.69,609,2.478,610,3.305,611,3.69]],["title/injectables/AmapDrivingService.html",[349,0.933,612,3.452]],["body/injectables/AmapDrivingService.html",[1,1.767,3,0.022,4,0.034,5,0.034,6,0.056,8,0.166,9,0.562,18,4.62,21,1.767,26,1.348,45,0.987,46,1.45,48,0.445,49,0.005,51,0.004,53,1.362,55,1.028,56,0.871,57,0.313,58,0.67,60,0.987,96,0.233,138,0.044,176,0.003,177,0.002,190,1.402,232,2.364,233,2.887,235,1.922,252,1.112,253,1.867,254,2.122,260,1.69,293,2.586,296,1.293,297,1.234,298,1.895,302,1.036,303,1.475,306,1.198,314,1.065,316,1.115,317,0.934,318,2.887,345,2.341,349,1.071,350,1.357,351,3.777,353,1.867,354,2.632,355,2.759,357,2.754,359,1.418,361,1.969,362,1.18,363,1.234,364,1.426,365,1.426,366,1.969,367,1.379,368,1.379,369,1.253,370,1.585,375,1.253,377,1.867,378,1.379,381,1.786,383,1.867,384,1.786,387,2.528,389,3.385,396,2.818,455,2.303,460,0.812,598,2.886,612,3.961,613,5.798,614,2.816,615,4.049,616,5.064,617,5.541,618,3.433,619,3.433,620,2.816,621,3.433,622,2.31,623,2.973,624,3.433,625,2.31,626,3.433,627,3.433,628,2.973,629,2.973,630,4.386,631,3.433,632,3.433,633,2.973,634,2.173,635,3.131,636,2.239,637,1.956,638,5.064,639,2.475,640,3.433,641,2.973,642,3.433,643,2.973,644,3.433,645,2.973,646,3.433,647,2.973,648,3.433,649,1.501,650,2.973,651,2.973,652,3.433,653,2.973,654,3.433,655,2.475,656,2.973,657,2.173,658,3.433]],["title/classes/AmapDrivingWrapper.html",[316,0.972,628,3.822]],["body/classes/AmapDrivingWrapper.html",[1,1.444,3,0.017,4,0.026,5,0.026,6,0.062,8,0.128,9,0.459,18,4.106,21,2.197,26,1.361,45,0.806,46,1.113,48,0.496,49,0.005,51,0.004,52,2.065,53,1.59,55,1.547,56,1.281,57,0.366,58,0.985,60,1.58,96,0.215,114,1.779,138,0.036,176,0.002,177,0.001,190,2.088,213,1.974,232,2.101,233,1.264,235,0.841,252,0.854,254,1.322,260,0.879,293,2.439,298,1.303,302,0.795,303,1.132,306,0.919,314,0.818,316,0.911,317,0.814,318,2.452,345,2.154,349,0.875,351,4.216,353,1.432,354,1.152,355,1.719,357,1.432,359,1.483,361,2.253,362,0.905,363,0.947,364,1.094,365,1.094,366,2.253,367,1.058,368,1.058,369,0.962,370,1.216,375,1.511,377,2.25,378,1.058,381,2.66,383,1.432,384,2.153,387,2.066,389,2.951,394,1.538,395,1.911,396,2.303,404,1.239,405,2.053,406,1.264,407,1.264,408,1.132,409,1.772,455,2.675,460,0.928,598,2.358,612,2.06,613,6.472,614,2.16,615,1.772,617,4.925,622,1.772,623,2.281,624,2.634,625,1.772,626,2.634,627,4.138,628,3.584,629,4.427,630,3.584,631,2.634,632,4.138,633,2.281,634,2.62,635,3.276,636,1.718,637,1.501,638,4.138,639,2.984,640,2.634,641,3.584,642,2.634,643,3.584,644,2.634,645,5.017,646,2.634,647,5.017,648,2.634,649,2.534,650,2.281,651,5.017,652,2.634,653,5.017,654,2.634,655,2.984,656,2.281,657,2.62,658,2.634,659,3.237,660,4.138,661,4.138,662,3.584,663,3.584,664,4.138,665,2.94,666,2.94,667,2.94,668,2.94,669,2.94,670,2.634,671,2.634,672,1.501,673,2.94,674,1.718,675,2.94,676,1.401,677,2.94,678,1.772,679,2.94,680,1.832,681,2.94,682,2.634]],["title/injectables/AmapGeocoderService.html",[349,0.933,683,3.62]],["body/injectables/AmapGeocoderService.html",[1,1.605,3,0.019,4,0.03,5,0.03,6,0.05,8,0.146,9,0.511,21,1.605,22,5.246,45,0.897,46,1.276,48,0.374,49,0.005,51,0.004,52,0.862,53,1.198,55,0.934,56,0.792,57,0.293,58,0.609,60,0.897,96,0.23,138,0.04,176,0.003,177,0.002,190,1.234,209,2.394,232,2.452,233,2.674,235,1.78,248,3.599,252,0.979,253,1.642,254,1.991,260,1.535,279,5.754,286,1.606,293,2.761,296,1.138,297,1.086,298,2.112,302,0.911,303,1.298,306,1.054,314,0.938,316,1.013,317,0.876,318,2.207,345,1.995,349,0.973,350,1.194,351,3.417,353,1.642,354,2.438,355,2.588,357,2.502,359,0.712,361,1.789,362,1.038,363,1.086,364,1.255,365,1.255,366,1.789,367,1.213,368,1.213,369,1.103,370,2.574,372,1.859,375,1.103,377,1.642,378,1.213,381,1.572,383,1.642,384,1.572,387,2.297,389,2.344,390,3.599,400,3.096,433,2.56,455,1.156,683,6.212,684,5.808,685,2.789,686,4.601,687,4.248,688,4.601,689,4.826,690,3.599,691,4.601,692,4.601,693,4.601,694,4.601,695,4.601,696,4.601,697,4.601,698,4.601,699,4.601,700,4.601,701,4.601,702,4.601,703,4.601,704,2.832,705,4.601,706,4.601,707,6.231,708,4.601,709,4.601,710,4.601,711,4.601,712,4.601,713,4.601,714,5.137,715,5.246,716,3.372,717,3.372,718,3.021,719,3.021,720,4.601,721,3.021,722,3.021,723,3.021,724,2.616,725,3.021,726,3.021,727,2.616,728,2.616,729,3.021,730,3.021,731,3.021]],["title/classes/AmapGeocoderWrapper.html",[316,0.972,689,3.822]],["body/classes/AmapGeocoderWrapper.html",[1,1.575,3,0.019,4,0.029,5,0.029,6,0.056,8,0.143,9,0.501,21,2.314,22,5.187,45,0.879,46,1.244,48,0.48,49,0.005,51,0.004,52,1.288,53,1.444,55,1.478,56,1.204,57,0.354,58,0.926,60,1.363,96,0.223,138,0.039,176,0.003,177,0.002,190,1.203,209,2.349,232,2.335,233,1.413,235,0.941,240,3.14,248,2.304,252,0.955,254,1.442,260,0.983,279,4.168,286,2.4,293,2.743,298,1.728,302,0.889,303,1.266,306,1.028,314,0.914,316,0.994,317,0.864,318,2.165,345,1.973,349,0.954,351,3.828,353,1.602,354,1.288,355,1.875,357,1.602,359,0.694,361,2.392,362,1.012,363,1.059,364,1.223,365,1.223,366,2.392,367,1.183,368,1.183,369,1.076,370,2.085,372,1.813,375,1.648,377,2.454,378,1.183,381,2.856,383,1.602,384,2.349,387,2.253,389,2.3,390,3.531,394,1.721,395,2.085,396,2.512,400,3.037,404,1.386,405,2.204,406,1.413,407,1.413,408,1.266,409,1.982,433,1.639,455,2.538,683,5.045,684,6.507,685,2.72,686,2.946,687,2.72,688,2.946,689,4.752,690,2.304,691,2.946,692,2.946,693,2.946,694,2.946,695,2.946,696,2.946,697,2.946,698,2.946,699,2.946,700,2.946,701,2.946,702,2.946,703,2.946,704,2.779,705,2.946,706,2.946,707,4.514,708,2.946,709,2.946,710,2.946,711,2.946,712,2.946,713,2.946,715,5.187,718,4.514,719,5.487,720,4.514,721,2.946,722,4.514,723,2.946,724,3.909,725,2.946,726,2.946,727,3.909,728,2.551,729,2.946,730,2.946,731,2.946,732,4.514,733,3.702,734,5.039,735,3.289,736,3.289,737,3.289,738,3.289,739,3.289]],["title/directives/AmapHeatmapDirective.html",[219,2.97,740,3.62]],["body/directives/AmapHeatmapDirective.html",[3,0.015,4,0.024,5,0.024,6,0.065,8,0.116,9,0.533,21,1.34,23,4.184,27,0.55,45,0.936,48,0.33,49,0.005,51,0.001,52,1.715,53,1.647,55,1.221,56,1.034,57,0.378,58,0.795,60,1.502,96,0.207,118,1.729,138,0.021,176,0.002,177,0.001,219,2.584,221,1.875,222,7.062,225,3.151,226,3.942,227,4.161,228,3.942,229,1.967,230,3.151,232,2.734,235,1.535,236,4.507,237,3.151,238,4.507,239,4.759,243,3.151,246,3.151,250,4.161,252,1.245,253,1.304,254,1.755,260,1.282,266,3.942,280,3.151,281,4.298,283,1.797,293,2.769,294,3.602,296,1.447,297,1.381,298,1.893,300,5.478,301,3.151,302,0.723,303,1.03,304,1.875,306,0.836,309,1.797,310,1.967,311,1.797,312,1.967,313,3.151,314,1.492,315,3.004,316,0.528,317,0.337,319,1.967,326,2.726,327,1.967,344,1.967,345,2.005,362,0.824,415,4.161,420,2.492,423,2.584,425,2.492,432,4.437,433,3.058,460,1.028,462,2.769,500,1.957,502,1.4,511,1.967,512,2.076,513,3.942,514,2.398,515,2.076,516,2.076,518,2.398,520,2.076,523,2.398,524,2.398,531,2.214,532,1.967,533,3.546,534,3.546,565,2.076,574,2.076,740,3.151,741,7.949,742,2.398,743,5.365,744,4.288,745,4.298,746,3.479,747,3.841,748,6.135,749,4.805,750,5.074,751,5.074,752,4.759,753,5.365,754,5.074,755,4.288,756,4.809,757,2.677,758,2.677,759,2.677,760,2.677,761,4.688,762,2.677,763,2.677,764,2.677,765,2.677,766,2.677,767,4.288,768,2.677,769,2.677,770,2.677,771,2.677,772,2.677,773,2.677,774,2.677,775,4.288,776,2.677,777,1.613,778,2.677,779,2.677,780,2.677,781,2.677,782,2.677,783,2.677,784,1.967,785,4.288,786,2.677,787,6.713,788,2.398,789,2.398,790,2.677,791,2.677,792,2.677,793,2.677,794,2.677,795,2.398,796,2.398,797,4.288,798,2.677,799,2.677,800,2.677,801,2.677]],["title/components/AmapInfoWindowComponent.html",[140,3.308,802,3.822]],["body/components/AmapInfoWindowComponent.html",[3,0.058,4,0.016,5,0.016,6,0.063,8,0.08,9,0.411,14,0.861,25,1.295,26,0.441,28,1.383,39,2.794,40,1.114,45,0.72,48,0.099,49,0.005,51,0.001,52,1.4,53,1.612,55,1.085,56,1.08,57,0.372,58,0.707,60,1.398,96,0.186,105,4.369,118,1.194,138,0.014,140,2.772,176,0.002,177,0.001,190,0.676,219,1.114,220,1.295,221,1.295,225,2.318,226,3.033,227,3.202,228,3.033,229,1.358,230,6.165,232,2.348,235,1.181,236,3.586,237,2.318,238,3.586,239,3.786,243,2.318,246,2.318,252,0.916,254,1.396,257,2.609,258,4.372,260,1.234,262,1.477,266,5.152,280,2.318,281,3.42,283,1.241,293,2.761,294,2.772,296,1.065,297,1.33,298,2.53,300,4.913,301,4.027,302,0.499,303,0.711,304,1.295,306,0.578,309,1.241,310,1.358,311,1.241,312,1.358,313,2.318,314,1.357,315,2.21,316,0.364,317,0.614,319,1.358,326,1.677,327,1.358,344,1.358,345,2.135,362,0.569,411,1.358,415,3.202,455,2.404,462,2.038,511,2.318,512,1.434,513,1.358,515,1.434,516,1.434,520,1.434,535,1.528,537,1.528,565,1.434,574,1.434,690,1.295,740,1.358,784,1.358,802,3.786,803,2.826,804,1.848,805,1.358,806,1.848,807,1.848,808,8.419,809,7.773,810,1.655,811,3.155,812,4.128,813,3.155,814,3.155,815,4.128,816,4.008,817,4.128,818,2.942,819,3.786,820,4.037,821,3.42,822,3.586,823,2.666,824,2.826,825,2.609,826,2.826,827,4.881,828,4.037,829,4.037,830,4.037,831,4.128,832,2.325,833,4.339,834,4.037,835,4.128,836,4.128,837,4.128,838,4.128,839,1.848,840,4.128,841,4.037,842,4.128,843,3.277,844,3.155,845,1.848,846,1.848,847,1.848,848,1.848,849,2.107,850,1.848,851,1.848,852,1.848,853,3.72,854,1.848,855,1.848,856,1.848,857,1.848,858,1.848,859,1.848,860,1.848,861,1.848,862,1.848,863,1.848,864,1.848,865,1.848,866,1.848,867,1.848,868,3.155,869,1.848,870,2.609,871,1.848,872,3.155,873,1.848,874,2.609,875,1.848,876,1.848,877,1.848,878,1.848,879,1.848,880,1.848,881,2.21,882,1.848,883,1.528,884,1.848,885,1.655,886,1.848,887,1.848,888,2.318,889,3.155,890,1.848,891,3.155,892,1.848,893,1.848,894,1.848,895,1.848,896,1.848,897,1.848,898,1.848,899,1.848,900,1.848,901,1.848,902,1.848,903,3.155,904,1.848,905,1.848,906,4.128,907,1.848,908,1.848,909,1.848,910,1.848,911,1.848,912,1.848,913,1.528,914,7.012,915,1.848,916,1.848,917,4.881,918,1.848,919,3.155,920,1.848,921,1.848,922,1.848,923,1.848,924,1.848,925,1.848,926,1.848,927,1.848,928,1.848,929,1.528,930,2.609,931,3.155,932,4.881,933,1.848,934,1.848,935,1.528,936,1.848,937,1.528,938,1.295,939,1.848,940,1.528,941,1.848,942,3.155,943,1.528,944,1.848,945,1.848,946,1.528,947,1.848,948,1.528,949,1.528,950,1.848,951,1.528,952,1.848,953,1.528,954,1.848,955,1.528,956,1.848,957,1.358,958,1.848]],["title/injectables/AmapMouseToolService.html",[349,0.933,959,3.62]],["body/injectables/AmapMouseToolService.html",[1,1.73,3,0.021,4,0.033,5,0.033,6,0.052,8,0.162,9,0.551,14,1.736,21,1.164,27,1.742,28,1.632,30,4.629,34,1.736,35,1.949,36,1.949,45,0.966,46,1.409,48,0.355,49,0.005,51,0.002,53,1.259,55,1.007,56,0.853,57,0.33,58,0.656,60,0.65,96,0.231,118,3.575,138,0.043,176,0.003,177,0.002,232,2.535,233,2.839,234,3.08,235,1.89,252,1.081,253,1.814,254,2.093,260,1.655,262,0.819,293,2.723,294,3.717,296,1.257,297,1.2,298,1.863,302,1.007,303,2.131,306,1.164,314,1.036,316,1.303,317,0.832,318,2.379,326,3.616,334,5.464,335,3.08,345,2.529,349,1.048,350,1.318,351,3.567,354,2.588,355,2.721,359,0.786,361,1.928,362,1.147,363,1.2,364,1.386,365,1.386,366,1.928,367,1.34,368,1.34,369,1.218,370,1.541,372,2.054,375,1.218,378,1.34,381,1.736,384,1.736,387,1.665,462,2.406,674,2.176,913,3.08,959,4.067,960,7.219,961,6.063,962,3.08,963,5.536,964,4.958,965,3.725,966,3.725,967,3.45,968,3.45,969,5.104,970,4.117,971,3.336,972,3.336,973,2.889,974,3.336,975,3.336,976,3.08,977,3.336,978,3.336,979,3.336,980,3.336,981,3.336,982,3.336,983,3.336,984,3.336,985,3.336,986,3.336,987,1.949,988,4.958,989,3.336,990,3.336,991,2.889,992,3.336,993,2.889,994,3.336,995,2.889,996,3.336,997,2.889,998,3.336,999,2.501,1000,3.08,1001,2.889,1002,3.336,1003,2.889,1004,3.336,1005,2.889,1006,3.336,1007,2.889,1008,3.336,1009,2.889,1010,3.336,1011,2.889,1012,2.501,1013,3.336,1014,3.336,1015,3.336,1016,3.336,1017,3.336,1018,3.336]],["title/classes/AmapMouseToolWrapper.html",[316,0.972,973,3.822]],["body/classes/AmapMouseToolWrapper.html",[1,1.305,3,0.015,4,0.023,5,0.023,6,0.061,8,0.112,9,0.415,14,2.446,21,1.881,27,1.356,28,2.299,30,4.217,34,2.446,35,2.745,36,2.745,45,0.729,46,0.98,48,0.415,49,0.005,51,0.001,53,1.564,55,1.636,56,1.355,57,0.389,58,1.042,60,1.513,96,0.205,118,1.672,138,0.032,176,0.002,177,0.001,190,2.917,232,2.502,233,1.113,234,4.339,235,0.741,252,0.752,254,1.195,260,0.774,262,1.153,293,2.781,294,3.523,296,0.874,297,0.834,298,1.178,302,0.7,303,1.608,306,0.809,314,0.72,316,1.035,317,0.66,318,1.794,326,3.722,334,4.339,335,2.142,345,2.342,349,0.791,351,4.147,354,1.015,355,1.553,359,1.107,361,2.096,362,0.797,363,0.834,364,0.963,365,0.963,366,2.096,367,0.932,368,0.932,369,0.847,370,1.071,372,1.428,375,1.366,378,0.932,381,2.446,384,1.946,387,1.158,394,1.355,395,1.727,396,2.081,404,1.092,405,2.166,406,1.113,407,1.113,408,0.997,409,1.561,462,2.697,649,1.015,674,1.513,818,2.517,913,2.142,959,1.903,960,7.666,961,7.048,962,2.142,964,2.32,967,3.751,968,3.751,969,5.607,970,4.626,971,2.32,972,2.32,973,3.239,974,4.7,975,2.32,976,2.142,977,2.32,978,2.32,979,2.32,980,2.32,981,2.32,982,2.32,983,2.32,984,2.32,985,2.32,986,2.32,987,2.185,988,3.74,989,2.32,990,2.32,991,3.239,992,2.32,993,3.239,994,2.32,995,3.239,996,2.32,997,3.239,998,2.32,999,1.739,1000,2.142,1001,3.239,1002,2.32,1003,3.239,1004,2.32,1005,3.239,1006,2.32,1007,3.239,1008,2.32,1009,3.239,1010,2.32,1011,3.239,1012,1.739,1013,2.32,1014,3.74,1015,2.32,1016,2.32,1017,2.32,1018,2.32,1019,4.176,1020,3.74,1021,3.74,1022,3.74,1023,3.74,1024,4.176,1025,2.59,1026,2.59,1027,2.59,1028,2.59,1029,2.59,1030,2.59,1031,2.59,1032,2.59,1033,2.59,1034,2.59,1035,2.59,1036,2.59,1037,2.59,1038,2.59,1039,2.59]],["title/injectables/AmapPlaceSearchService.html",[349,0.933,1040,3.62]],["body/injectables/AmapPlaceSearchService.html",[1,1.728,3,0.021,4,0.033,5,0.033,6,0.052,8,0.161,9,0.55,13,2.836,21,1.728,32,4.432,34,1.733,45,0.965,46,1.407,48,0.478,49,0.005,51,0.005,53,1.258,55,1.005,56,0.852,57,0.308,58,0.655,60,0.965,96,0.225,112,5.798,114,2.129,138,0.043,176,0.003,177,0.002,190,1.36,232,2.335,233,2.836,235,1.888,252,1.08,253,1.811,254,2.091,260,1.653,262,0.817,286,1.771,288,2.241,291,2.241,293,2.722,296,1.255,297,1.198,298,1.862,302,1.005,303,1.432,306,1.162,314,1.034,316,1.091,317,1.031,318,2.376,345,2.321,349,1.047,350,1.316,351,3.565,353,1.811,354,2.586,355,2.719,357,2.693,359,0.785,361,1.926,362,1.145,363,1.198,364,1.383,365,1.383,366,1.926,367,1.338,368,1.338,369,1.216,370,1.538,372,2.051,375,1.216,377,1.811,378,1.338,381,1.733,383,1.811,384,1.733,386,2.606,387,3.268,389,3.335,390,5.12,427,2.968,433,2.756,455,1.895,460,0.948,580,5.473,581,2.732,649,1.457,1040,4.063,1041,5.529,1042,5.244,1043,3.719,1044,3.719,1045,3.331,1046,3.331,1047,3.331,1048,2.885,1049,3.331,1050,4.953,1051,3.331,1052,3.331,1053,3.331,1054,3.331,1055,2.732,1056,3.331,1057,2.732,1058,2.732,1059,3.331,1060,2.732,1061,3.331,1062,2.732,1063,3.331,1064,3.331,1065,3.331,1066,2.606,1067,3.331,1068,2.606,1069,3.331,1070,3.331,1071,2.732,1072,4.953,1073,3.331,1074,3.331,1075,3.331,1076,2.732]],["title/classes/AmapPlaceSearchWrapper.html",[316,0.972,1048,3.822]],["body/classes/AmapPlaceSearchWrapper.html",[1,1.269,3,0.014,4,0.022,5,0.022,6,0.062,8,0.109,9,0.404,13,3.145,21,2.027,32,3.961,34,2.39,45,0.709,46,0.947,48,0.514,49,0.005,51,0.004,52,2.014,53,1.58,55,1.624,56,1.361,57,0.384,58,1.046,60,1.574,96,0.194,112,6.19,114,1.974,138,0.032,176,0.002,177,0.001,190,0.916,209,1.167,232,1.939,233,1.075,235,0.716,240,2.531,241,2.984,242,2.984,252,0.727,254,1.162,260,0.748,262,1.127,286,1.935,288,2.448,290,1.839,291,2.448,293,2.64,298,1.146,302,0.676,303,0.964,306,0.782,314,0.696,316,0.801,317,0.875,318,1.745,345,2.032,349,0.769,351,4.189,353,1.219,354,0.981,355,1.511,357,1.219,359,0.528,361,2.055,362,0.77,363,0.806,364,0.931,365,0.931,366,2.055,367,0.901,368,0.901,369,0.819,370,1.035,372,1.38,375,1.329,377,1.978,378,0.901,381,2.39,383,1.219,384,1.893,386,2.846,387,2.638,389,2.693,390,4.134,394,1.309,395,1.68,396,2.025,400,1.508,404,1.055,405,1.845,406,1.075,407,1.075,408,0.964,409,1.508,427,3.167,433,2.941,455,2.022,460,1.131,580,6.431,581,1.839,610,2.242,649,2.312,674,2.373,1040,1.839,1042,4.355,1045,2.242,1046,2.242,1047,3.638,1048,3.151,1049,4.592,1050,3.638,1051,2.242,1052,3.638,1053,2.242,1054,2.242,1055,2.984,1056,2.242,1057,2.984,1058,1.839,1059,2.242,1060,2.984,1061,2.242,1062,2.984,1063,2.242,1064,3.638,1065,2.242,1066,2.846,1067,2.242,1068,4.134,1069,2.242,1070,2.242,1071,2.984,1072,3.638,1073,2.242,1074,2.242,1075,2.242,1076,2.984,1077,3.638,1078,3.638,1079,3.638,1080,3.638,1081,3.638,1082,3.638,1083,3.638,1084,3.638,1085,4.062,1086,2.503,1087,2.503,1088,2.503,1089,2.242,1090,2.503,1091,2.503,1092,2.503,1093,2.503,1094,2.984,1095,2.503,1096,2.503,1097,2.503,1098,2.503,1099,1.839,1100,2.503,1101,1.941,1102,2.503,1103,2.07,1104,2.503,1105,2.503]],["title/injectables/AmapRidingService.html",[349,0.933,1106,3.452]],["body/injectables/AmapRidingService.html",[1,1.876,3,0.024,4,0.037,5,0.037,6,0.057,8,0.181,9,0.597,21,1.876,38,5.727,45,1.047,46,1.574,48,0.322,49,0.005,51,0.004,53,1.407,55,1.091,56,0.925,57,0.325,58,0.711,60,1.047,96,0.239,138,0.047,176,0.003,177,0.002,190,1.522,232,2.443,233,3.026,235,2.015,252,1.207,253,2.026,254,2.206,260,1.794,293,2.662,296,1.403,297,1.34,298,1.986,302,1.124,303,1.601,306,1.3,314,1.156,316,1.184,317,0.971,318,3.026,345,2.27,349,1.137,350,1.472,351,3.887,353,2.026,354,2.759,355,2.868,357,2.923,359,0.878,361,2.091,362,1.28,363,1.34,364,1.547,365,1.547,366,2.091,367,1.497,368,1.497,369,1.36,370,1.721,375,1.36,377,2.026,378,1.497,381,1.939,383,2.026,384,1.939,387,2.683,389,3.518,396,2.991,455,2.057,598,3.064,615,4.244,620,3.056,625,2.507,634,2.359,635,3.282,636,2.43,637,2.123,649,1.63,1106,4.205,1107,6.607,1108,3.44,1109,6.002,1110,5.727,1111,4.159,1112,4.159,1113,4.159,1114,2.914,1115,3.726,1116,3.726,1117,3.726,1118,3.726,1119,3.226,1120,3.726,1121,5.376,1122,3.726,1123,3.726,1124,3.726,1125,5.376,1126,3.726]],["title/classes/AmapRidingWrapper.html",[316,0.972,1119,3.822]],["body/classes/AmapRidingWrapper.html",[1,1.771,3,0.022,4,0.034,5,0.034,6,0.058,8,0.167,9,0.564,21,2.475,38,5.549,45,0.989,46,1.455,48,0.425,49,0.005,51,0.004,52,0.982,53,1.475,55,1.44,56,1.145,57,0.349,58,0.88,60,1.382,96,0.233,114,2.182,138,0.044,176,0.003,177,0.002,190,2.073,232,2.367,233,1.652,235,1.1,252,1.116,254,1.621,260,1.149,293,2.678,298,1.598,302,1.039,303,1.48,306,1.201,314,1.069,316,1.118,317,0.935,318,2.892,345,2.208,349,1.073,351,3.911,353,1.873,354,1.506,355,2.108,357,1.873,359,0.811,361,2.587,362,1.184,363,1.238,364,1.43,365,1.43,366,2.587,367,1.383,368,1.383,369,1.258,370,1.59,375,1.854,377,2.76,378,1.383,381,3.137,383,1.873,384,2.641,387,2.534,389,3.39,394,2.011,395,2.344,396,2.825,404,1.621,405,2.422,406,1.652,407,1.652,408,1.48,409,2.317,455,2.546,598,2.893,615,2.317,625,2.317,634,3.214,635,3.691,636,2.246,637,1.962,649,2.91,672,1.962,1106,2.694,1107,6.647,1108,3.18,1110,5.549,1114,2.694,1115,3.444,1116,3.444,1117,3.444,1118,5.076,1119,4.396,1120,6.029,1121,5.076,1122,3.444,1123,5.076,1124,3.444,1125,5.076,1126,3.444,1127,5.667,1128,3.845,1129,3.845,1130,3.845,1131,3.845]],["title/directives/AmapToolBarDirective.html",[219,2.97,957,3.62]],["body/directives/AmapToolBarDirective.html",[3,0.012,4,0.018,5,0.018,6,0.065,8,0.09,9,0.447,21,1.088,26,0.495,28,1.97,31,2.353,41,2.439,45,0.785,48,0.341,49,0.005,51,0.001,52,1.345,53,1.666,55,0.957,56,0.811,57,0.382,58,0.624,60,1.509,96,0.195,118,3.786,138,0.016,176,0.002,177,0.001,219,2.098,221,1.455,222,7.131,225,2.558,226,3.303,227,3.488,228,3.303,229,1.525,230,2.558,232,2.517,235,1.286,236,3.867,237,2.558,238,3.867,239,4.082,243,2.558,246,2.558,250,3.488,252,1.011,253,1.011,254,1.506,260,1.041,262,1.823,266,5.733,280,2.558,281,3.687,283,1.394,293,2.9,294,3.019,296,1.175,297,1.695,298,1.653,300,5.596,301,4.662,302,0.561,303,0.799,304,1.455,306,0.649,309,1.394,310,1.525,311,1.394,312,1.525,313,2.558,314,1.463,315,2.439,316,0.41,317,0.738,319,1.525,326,0.843,327,1.525,344,1.525,345,2.21,362,0.639,415,3.488,420,2.137,425,2.137,432,3.718,462,2.249,511,1.525,512,1.611,513,1.525,515,1.611,516,1.611,520,1.611,531,1.717,532,3.867,533,2.879,534,2.879,535,1.717,537,1.717,565,1.611,574,1.611,704,2.479,733,3.867,784,4.307,788,1.86,789,1.86,795,1.86,796,1.86,832,3.022,833,3.399,849,3.238,957,2.558,1132,8.026,1133,1.86,1134,4.496,1135,3.482,1136,4.352,1137,3.687,1138,4.352,1139,4.352,1140,4.352,1141,2.879,1142,4.352,1143,4.352,1144,4.352,1145,4.352,1146,3.687,1147,4.352,1148,4.352,1149,4.352,1150,4.352,1151,4.352,1152,4.352,1153,4.496,1154,4.496,1155,4.496,1156,4.496,1157,4.352,1158,3.074,1159,3.482,1160,2.076,1161,2.076,1162,2.076,1163,2.076,1164,2.076,1165,2.076,1166,2.076,1167,2.076,1168,2.076,1169,2.076,1170,2.076,1171,2.076,1172,2.076,1173,2.076,1174,2.076,1175,2.076,1176,2.076,1177,3.482,1178,2.076,1179,2.076,1180,2.076,1181,2.076,1182,2.076,1183,2.076,1184,2.076,1185,2.076,1186,2.076,1187,2.076,1188,2.076,1189,2.439,1190,2.076,1191,2.076,1192,2.076,1193,2.076,1194,2.076,1195,2.076,1196,2.076,1197,2.439,1198,2.076,1199,1.86,1200,3.482,1201,2.076,1202,8.149,1203,2.076,1204,2.076,1205,2.076,1206,2.076,1207,2.076,1208,2.076,1209,2.076,1210,2.076,1211,2.076,1212,2.076,1213,2.076,1214,2.076,1215,2.076,1216,2.076,1217,2.076,1218,2.076,1219,2.076,1220,2.076,1221,2.076,1222,2.076,1223,2.076,1224,2.076,1225,2.076,1226,2.076,1227,2.076,1228,2.076,1229,2.076,1230,2.076,1231,2.076,1232,2.076,1233,2.076,1234,2.076]],["title/injectables/AmapTransferService.html",[349,0.933,1235,3.452]],["body/injectables/AmapTransferService.html",[1,1.816,3,0.023,4,0.035,5,0.035,6,0.056,8,0.173,9,0.578,21,1.816,42,5.393,45,1.014,46,1.506,48,0.451,49,0.005,51,0.004,53,1.383,55,1.057,56,0.896,57,0.318,58,0.689,60,1.014,96,0.236,138,0.045,176,0.003,177,0.002,190,1.456,232,2.401,233,2.95,235,1.965,252,1.155,253,1.938,254,2.16,260,1.737,286,1.895,293,2.621,296,1.343,297,1.282,298,1.936,302,1.075,303,1.532,306,1.243,314,1.106,316,1.146,317,0.951,318,2.95,345,2.235,349,1.101,350,1.409,351,3.828,353,1.938,354,2.69,355,2.809,357,2.831,359,0.84,361,2.024,362,1.225,363,1.282,364,1.48,365,1.48,366,2.024,367,1.432,368,1.432,369,1.302,370,1.646,375,1.302,377,1.938,378,1.432,381,1.855,383,1.938,384,1.855,387,2.599,389,3.446,396,2.897,455,1.992,598,2.967,615,4.138,620,2.924,625,2.398,634,2.257,635,3.2,636,2.324,637,2.031,639,2.57,649,1.559,657,2.257,777,3.503,1235,4.072,1236,6.506,1237,3.291,1238,5.812,1239,5.627,1240,3.979,1241,3.979,1242,3.979,1243,2.788,1244,3.564,1245,3.564,1246,3.564,1247,3.564,1248,3.087,1249,3.564,1250,5.206,1251,3.564,1252,3.564,1253,3.564,1254,5.206,1255,3.564,1256,3.564,1257,3.087,1258,3.564,1259,3.087,1260,3.564,1261,3.564,1262,3.564]],["title/classes/AmapTransferWrapper.html",[316,0.972,1248,3.822]],["body/classes/AmapTransferWrapper.html",[1,1.549,3,0.018,4,0.028,5,0.028,6,0.06,8,0.14,9,0.493,21,2.291,42,4.922,45,0.865,46,1.218,48,0.509,49,0.005,51,0.004,52,1.979,53,1.551,55,1.586,56,1.317,57,0.374,58,1.013,60,1.523,96,0.221,114,1.908,138,0.038,176,0.003,177,0.002,190,1.813,209,2.31,232,2.191,233,1.383,235,0.921,240,3.088,252,0.934,254,1.418,260,0.962,286,2.36,293,2.521,298,1.398,302,0.87,303,1.239,306,1.006,314,0.895,316,0.977,317,0.855,318,2.597,345,2.063,349,0.938,351,4.113,353,1.567,354,1.261,355,1.844,357,1.567,359,0.679,361,2.365,362,0.991,363,1.036,364,1.197,365,1.197,366,2.365,367,1.158,368,1.158,369,1.052,370,1.331,375,1.621,377,2.414,378,1.158,381,2.817,383,1.567,384,2.31,387,2.216,389,3.098,394,1.683,395,2.05,396,2.47,404,1.356,405,2.175,406,1.383,407,1.383,408,1.239,409,1.939,455,2.327,598,2.529,615,1.939,625,1.939,634,2.81,635,3.417,636,1.88,637,1.642,639,3.201,649,2.66,657,2.81,659,3.472,662,3.844,672,1.642,674,1.88,680,2.005,777,4.092,1235,2.254,1236,6.99,1237,2.661,1239,5.137,1243,2.254,1244,2.882,1245,2.882,1246,2.882,1247,4.439,1248,3.844,1249,5.413,1250,4.439,1251,2.882,1252,4.439,1253,2.882,1254,4.439,1255,2.882,1256,2.882,1257,3.844,1258,2.882,1259,3.844,1260,2.882,1261,2.882,1262,2.882,1263,4.439,1264,4.439,1265,4.956,1266,3.218,1267,3.218,1268,1.825,1269,3.218,1270,3.218,1271,3.218,1272,3.218,1273,3.218,1274,3.218,1275,3.218]],["title/injectables/AmapTruckDrivingService.html",[349,0.933,1276,3.452]],["body/injectables/AmapTruckDrivingService.html",[1,1.885,3,0.024,4,0.037,5,0.037,6,0.057,8,0.182,9,0.6,18,3.524,21,1.885,43,4.953,45,1.053,46,1.585,48,0.415,49,0.005,51,0.004,53,1.411,55,1.097,56,0.93,57,0.326,58,0.715,60,1.053,96,0.239,138,0.047,176,0.003,177,0.002,190,1.532,232,2.45,233,3.038,235,2.023,252,1.216,253,2.04,254,2.213,260,1.803,293,2.668,296,1.413,297,1.349,298,1.994,302,1.132,303,1.613,306,1.309,314,1.165,316,1.19,317,0.89,318,3.038,345,2.184,349,1.142,350,1.483,351,3.896,353,2.04,354,2.77,355,2.877,357,2.938,359,0.884,361,2.101,362,1.289,363,1.349,364,1.558,365,1.558,366,2.101,367,1.507,368,1.507,369,1.37,370,1.733,375,1.37,377,2.04,378,1.507,381,1.952,383,2.04,384,1.952,387,1.873,389,2.753,396,3.007,460,0.866,598,2.138,613,5.982,614,3.077,615,4.261,616,5.403,618,3.752,619,3.752,620,3.077,621,3.752,622,2.524,623,3.249,625,2.524,629,3.249,630,4.679,633,3.249,649,1.641,650,3.249,655,2.705,656,3.249,1276,4.226,1277,7.514,1278,5.743,1279,3.752,1280,3.752,1281,3.752,1282,3.249,1283,3.752,1284,3.752,1285,3.464,1286,3.752]],["title/classes/AmapTruckDrivingWrapper.html",[316,0.972,1282,3.822]],["body/classes/AmapTruckDrivingWrapper.html",[1,1.736,3,0.021,4,0.033,5,0.033,6,0.059,8,0.162,9,0.552,18,2.186,21,2.447,43,5.136,45,0.97,46,1.416,48,0.494,49,0.005,51,0.004,52,1.419,53,1.502,55,1.492,56,1.207,57,0.358,58,0.928,60,1.432,96,0.232,114,2.139,138,0.043,176,0.003,177,0.002,190,1.369,213,2.513,232,2.341,233,1.608,235,1.071,252,1.086,254,1.589,260,1.118,293,2.655,298,1.567,302,1.011,303,1.441,306,1.169,314,1.04,316,1.096,317,0.834,318,2.847,345,2.087,349,1.052,351,3.982,353,1.823,354,1.466,355,2.067,357,1.823,359,0.79,361,2.553,362,1.152,363,1.205,364,1.392,365,1.392,366,2.553,367,1.347,368,1.347,369,1.224,370,1.548,375,1.817,377,2.706,378,1.347,381,3.088,383,1.823,384,2.589,387,1.673,389,2.535,394,1.958,395,2.298,396,2.769,404,1.577,405,2.384,406,1.608,407,1.608,408,1.441,409,2.255,460,1.052,598,1.91,613,6.113,614,2.749,615,2.255,622,2.255,623,2.903,625,2.255,629,5.139,630,4.309,633,2.903,649,2.872,650,2.903,655,3.588,656,2.903,663,4.309,664,4.976,670,3.352,671,3.352,676,1.782,682,3.352,1276,2.622,1277,7.526,1278,5.487,1279,3.352,1280,3.352,1281,4.976,1282,4.309,1283,3.352,1284,4.976,1285,4.594,1286,3.352,1287,3.742,1288,3.742]],["title/injectables/AmapWalkingService.html",[349,0.933,1289,3.452]],["body/injectables/AmapWalkingService.html",[1,1.866,3,0.023,4,0.036,5,0.036,6,0.057,8,0.179,9,0.594,21,1.866,44,5.712,45,1.042,46,1.563,48,0.321,49,0.005,51,0.004,53,1.403,55,1.086,56,0.92,57,0.324,58,0.708,60,1.042,96,0.238,138,0.046,176,0.003,177,0.002,190,1.511,232,2.437,233,3.014,235,2.007,252,1.199,253,2.012,254,2.199,260,1.785,293,2.655,296,1.394,297,1.33,298,1.978,302,1.116,303,1.59,306,1.291,314,1.148,316,1.178,317,0.967,318,3.014,345,2.264,349,1.131,350,1.462,351,3.878,353,2.012,354,2.748,355,2.859,357,2.909,359,0.872,361,2.08,362,1.272,363,1.33,364,1.537,365,1.537,366,2.08,367,1.486,368,1.486,369,1.351,370,1.709,375,1.351,377,2.012,378,1.486,381,1.925,383,2.012,384,1.925,387,2.67,389,3.507,396,2.976,455,2.047,598,3.048,615,4.227,620,3.035,625,2.49,634,2.342,635,3.269,636,2.413,637,2.108,649,1.618,657,2.342,1289,4.184,1290,6.591,1291,3.416,1292,5.972,1293,5.712,1294,4.131,1295,4.131,1296,4.131,1297,2.894,1298,3.7,1299,3.7,1300,3.7,1301,3.7,1302,3.204,1303,3.7,1304,5.349,1305,3.7,1306,3.7,1307,3.7,1308,5.349,1309,3.7,1310,3.7]],["title/classes/AmapWalkingWrapper.html",[316,0.972,1302,3.822]],["body/classes/AmapWalkingWrapper.html",[1,1.728,3,0.021,4,0.033,5,0.033,6,0.058,8,0.161,9,0.55,21,2.441,44,5.473,45,0.965,46,1.407,48,0.42,49,0.005,51,0.004,52,1.413,53,1.499,55,1.488,56,1.204,57,0.357,58,0.926,60,1.429,96,0.231,114,2.129,138,0.043,176,0.003,177,0.002,190,2.023,232,2.335,233,1.598,235,1.064,252,1.08,254,1.582,260,1.111,293,2.649,298,1.559,302,1.005,303,1.432,306,1.162,314,1.034,316,1.091,317,0.92,318,2.836,345,2.181,349,1.047,351,3.975,353,1.811,354,1.457,355,2.057,357,1.811,359,0.785,361,2.546,362,1.145,363,1.198,364,1.383,365,1.383,366,2.546,367,1.338,368,1.338,369,1.216,370,1.538,375,1.809,377,2.693,378,1.338,381,3.077,383,1.811,384,2.577,387,2.472,389,3.335,394,1.946,395,2.287,396,2.756,404,1.568,405,2.375,406,1.598,407,1.598,408,1.432,409,2.241,455,2.505,598,2.822,615,2.241,625,2.241,634,3.136,635,3.641,636,2.172,637,1.898,649,2.863,657,3.136,659,3.874,672,1.898,674,2.172,1289,2.606,1290,6.756,1291,3.076,1293,5.473,1297,2.606,1298,3.331,1299,3.331,1300,3.331,1301,4.953,1302,4.289,1303,5.912,1304,4.953,1305,3.331,1306,4.953,1307,3.331,1308,4.953,1309,3.331,1310,3.331,1311,5.529,1312,3.719,1313,3.719,1314,3.719,1315,3.719,1316,3.719]],["title/interfaces/Autocomplete.html",[0,0.247,10,3.308]],["body/interfaces/Autocomplete.html",[0,0.377,2,0.431,3,0.033,4,0.051,5,0.051,6,0.062,8,0.251,10,5.949,45,1.313,48,0.528,49,0.005,50,3.666,51,0.004,53,1.525,55,1.611,56,1.365,57,0.387,58,1.05,60,1.546,61,4.484,96,0.222,114,2.897,138,0.058,176,0.004,177,0.003,209,2.694,240,4.689,241,5.528,242,5.528,262,1.839,286,3.584,288,4.535,290,4.247,291,4.535,305,5.052,317,0.728,359,1.22,1094,4.247,1317,5.178,1318,5.272,1319,4.13,1320,5.781,1321,5.781,1322,5.781,1323,5.781,1324,5.178,1325,1.678,1326,2.753,1327,4.484]],["title/interfaces/AutocompleteOptions.html",[0,0.247,305,3.308]],["body/interfaces/AutocompleteOptions.html",[0,0.328,2,0.488,3,0.037,4,0.058,5,0.058,6,0.044,8,0.284,9,0.809,48,0.549,49,0.005,51,0.003,57,0.424,58,1.199,138,0.051,176,0.004,177,0.003,209,4.323,244,7.194,245,7.67,262,1.948,300,6.498,305,5.465,1328,6.541,1329,2.757]],["title/interfaces/AutocompleteResult.html",[0,0.247,1327,3.822]],["body/interfaces/AutocompleteResult.html",[0,0.35,2,0.521,3,0.055,4,0.062,5,0.062,6,0.047,8,0.303,9,0.843,48,0.49,49,0.005,51,0.004,57,0.385,96,0.185,138,0.054,176,0.004,177,0.004,460,1.31,1327,6.572,1330,6.98,1331,4.207,1332,5.23,1333,9.486,1334,8.037]],["title/interfaces/BezierCurve.html",[0,0.247,11,2.97]],["body/interfaces/BezierCurve.html",[0,0.335,2,0.362,3,0.027,4,0.043,5,0.043,6,0.066,8,0.211,11,4.616,13,3.291,27,1.779,45,1.168,49,0.005,51,0.002,52,2.288,53,1.67,55,1.501,56,1.272,57,0.348,58,0.978,60,1.693,62,3.764,96,0.203,97,1.718,119,2.311,128,2.676,138,0.052,176,0.003,177,0.002,317,0.611,359,1.024,417,4.021,418,3.848,420,3.353,422,4.17,423,4.033,425,3.353,460,0.961,497,3.259,499,3.024,500,3.054,502,2.539,676,2.311,1325,1.409,1335,8.76,1336,4.346,1337,4.552,1338,6.404,1339,5.784,1340,4.033,1341,5.534,1342,4.853,1343,4.853,1344,4.853,1345,4.853,1346,6.741,1347,4.853,1348,4.853,1349,4.853,1350,2.875,1351,4.853,1352,4.853,1353,4.688,1354,6.404,1355,4.853,1356,4.853,1357,4.346]],["title/interfaces/BezierCurveEditor.html",[0,0.247,12,3.182]],["body/interfaces/BezierCurveEditor.html",[0,0.425,2,0.34,3,0.026,4,0.04,5,0.04,6,0.057,8,0.198,11,4.468,12,4.788,14,2.128,15,2.948,19,2.589,20,2.948,27,1.74,33,2.845,34,2.128,35,2.388,36,2.388,37,2.948,45,1.119,48,0.503,49,0.005,51,0.002,52,2.473,53,1.384,55,1.166,56,0.988,57,0.404,58,0.76,60,1.403,63,3.065,66,3.065,71,3.065,84,3.065,88,3.065,96,0.239,97,1.616,121,3.198,122,2.845,123,3.198,127,3.198,128,2.517,129,3.198,130,3.198,138,0.076,176,0.003,177,0.002,185,5.304,186,6.452,187,6.452,190,2.346,316,1.265,317,0.807,405,1.643,408,2.469,502,2.388,818,5.105,823,5.471,1358,3.198,1359,4.565,1360,5.447,1361,4.565,1362,5.447,1363,4.565,1364,4.565,1365,3.354,1366,6.183,1367,5.687,1368,4.306,1369,3.354,1370,3.354,1371,3.354,1372,3.354]],["title/interfaces/BezierCurveEditorOptions.html",[0,0.247,1368,3.308]],["body/interfaces/BezierCurveEditorOptions.html",[0,0.437,2,0.369,3,0.028,4,0.044,5,0.044,6,0.033,8,0.215,9,0.674,11,4.661,12,4.377,14,2.304,15,3.192,19,2.803,20,3.192,27,1.791,33,3.08,34,2.304,35,2.586,36,2.586,37,3.192,48,0.468,49,0.005,51,0.003,52,2.399,57,0.41,58,0.986,59,4.467,63,3.319,66,3.319,71,3.319,84,3.319,88,3.319,96,0.245,97,1.75,121,3.463,122,3.08,123,3.463,127,3.463,128,2.725,129,3.463,130,3.463,138,0.077,176,0.003,177,0.003,186,5.83,187,5.83,316,1.337,317,0.853,405,1.779,408,2.609,502,2.586,818,4.085,823,4.377,1358,3.463,1360,4.979,1362,4.979,1365,3.632,1366,6.305,1367,5.853,1368,5.192,1369,6.113,1370,6.113,1371,3.632,1372,3.632]],["title/interfaces/BezierCurveOptions.html",[0,0.247,1346,3.62]],["body/interfaces/BezierCurveOptions.html",[0,0.252,2,0.375,3,0.028,4,0.044,5,0.044,6,0.034,8,0.218,9,0.682,27,1.936,48,0.528,49,0.005,51,0.003,57,0.422,58,1.227,96,0.133,128,2.771,138,0.053,176,0.003,177,0.003,262,2.101,426,4.894,428,4.752,434,5.221,435,5.221,436,5.221,437,4.894,460,1.437,676,3.991,1329,2.119,1346,5.036,1354,6.5,1373,4.502,1374,6.93,1375,5.412,1376,5.412,1377,6.93,1378,5.626,1379,5.626,1380,2.565,1381,5.026]],["title/injectables/BezierCurveService.html",[349,0.933,1382,4.414]],["body/injectables/BezierCurveService.html",[1,1.782,3,0.022,4,0.034,5,0.034,6,0.06,8,0.168,9,0.567,11,4.789,12,2.503,21,1.782,27,1.632,45,0.995,46,1.467,48,0.363,49,0.005,51,0.002,53,1.549,55,1.511,56,1.224,57,0.379,58,0.942,60,1.387,96,0.234,128,3.143,138,0.03,176,0.003,177,0.002,232,2.689,235,1.935,252,1.655,254,2.133,260,2.021,293,3.048,296,1.308,297,1.248,298,1.093,302,1.047,306,1.211,314,1.078,316,0.764,317,0.718,326,1.574,345,2.117,349,1.08,350,1.372,354,2.649,355,2.774,359,1.574,361,1.35,362,1.193,363,1.248,364,1.442,365,1.442,366,2.597,367,1.395,368,1.395,369,1.268,375,1.865,378,1.395,395,2.358,404,1.634,405,2.433,406,1.665,407,1.665,408,1.492,938,3.994,987,2.028,1346,5.479,1368,5.006,1382,5.106,1383,8.058,1384,8.058,1385,3.472,1386,4.738,1387,3.452,1388,2.841,1389,3.994,1390,3.06,1391,5.224,1392,3.901,1393,5.701,1394,2.841,1395,3.876,1396,5.106,1397,3.876,1398,4.715,1399,5.701,1400,3.876,1401,3.876,1402,3.876,1403,2.777,1404,3.876,1405,2.028,1406,2.137,1407,3.876,1408,1.978,1409,2.137,1410,3.33,1411,2.415,1412,3.876,1413,3.876,1414,2.415,1415,4.738,1416,3.876,1417,3.876]],["title/interfaces/Bounds.html",[0,0.247,13,2.117]],["body/interfaces/Bounds.html",[0,0.378,2,0.432,3,0.033,4,0.051,5,0.051,6,0.063,8,0.252,9,0.749,13,3.599,26,2.453,45,1.315,48,0.405,49,0.005,51,0.003,53,1.583,55,1.054,56,0.893,57,0.353,58,0.687,60,1.605,64,4.495,96,0.154,98,1.784,99,1.44,119,2.76,138,0.059,176,0.004,177,0.003,262,1.656,317,0.729,416,5.346,1418,5.19,1419,8.236,1420,8.236,1421,5.537,1422,7.944,1423,7.944,1424,5.728,1425,4.542,1426,5.795,1427,4.06,1428,5.795,1429,5.795,1430,5.795,1431,5.795]],["title/interfaces/BusinessArea.html",[0,0.247,217,3.822]],["body/interfaces/BusinessArea.html",[0,0.355,2,0.528,3,0.04,4,0.062,5,0.062,6,0.048,8,0.308,9,0.85,48,0.547,49,0.005,51,0.004,56,1.469,57,0.387,138,0.055,176,0.004,177,0.004,217,6.631,704,5.257,1432,7.084,1433,7.084,1434,6.401]],["title/interfaces/CAutocomplete.html",[0,0.247,61,3.822]],["body/interfaces/CAutocomplete.html",[0,0.425,2,0.521,3,0.04,4,0.062,5,0.062,6,0.047,10,6.125,48,0.49,49,0.005,50,3.059,51,0.004,61,6.572,96,0.242,138,0.066,176,0.004,177,0.004,262,1.534,286,3.325,288,4.207,291,4.207,305,5.688,317,0.879,359,1.473,1317,6.252,1318,4.89,1319,3.949,1324,6.252,1325,2.026,1326,3.325,1327,5.415]],["title/interfaces/CBezierCurve.html",[0,0.247,62,3.822]],["body/interfaces/CBezierCurve.html",[0,0.416,2,0.503,3,0.038,4,0.059,5,0.059,6,0.045,11,5,13,3.565,27,1.704,49,0.005,51,0.003,52,2.296,62,6.435,96,0.238,97,2.387,119,3.212,128,3.718,138,0.064,176,0.004,177,0.003,317,0.849,359,1.423,417,3.285,418,3.143,420,2.739,425,2.739,460,0.968,497,3.285,500,3.078,1325,1.958,1335,6.04,1336,6.04,1337,3.718,1338,5.231,1339,4.725,1346,6.887,1350,2.898,1353,4.725,1354,6.435,1357,6.04]],["title/interfaces/CBezierCurveEditor.html",[0,0.247,63,3.308]],["body/interfaces/CBezierCurveEditor.html",[0,0.444,2,0.385,3,0.029,4,0.046,5,0.046,6,0.035,11,4.769,12,4.511,14,2.409,15,3.337,19,2.931,20,3.337,27,1.819,33,3.22,34,2.409,35,2.704,36,2.704,37,3.337,48,0.476,49,0.005,51,0.003,52,2.424,57,0.405,63,4.69,66,3.469,71,3.469,84,3.469,88,3.469,96,0.248,97,1.829,121,3.62,122,3.22,123,3.62,127,3.62,128,2.849,129,3.62,130,3.62,138,0.077,176,0.004,177,0.003,186,5.938,187,5.938,316,1.378,317,0.879,405,1.859,408,2.689,502,2.704,818,4.21,823,4.511,1358,3.62,1360,5.132,1362,5.132,1365,3.797,1366,6.37,1367,5.944,1368,4.69,1369,3.797,1370,3.797,1371,3.797,1372,3.797]],["title/interfaces/CBounds.html",[0,0.247,64,3.822]],["body/interfaces/CBounds.html",[0,0.426,2,0.524,3,0.04,4,0.062,5,0.062,6,0.047,13,3.654,26,2.426,48,0.377,49,0.005,51,0.004,64,6.595,96,0.186,98,2.162,99,1.745,119,3.344,138,0.066,176,0.004,177,0.004,262,1.543,317,0.884,416,4.232,1418,6.289,1419,7.616,1420,7.616,1422,6.289,1423,6.289,1424,4.535,1425,4.232]],["title/interfaces/CCircle.html",[0,0.247,65,3.822]],["body/interfaces/CCircle.html",[0,0.407,2,0.485,3,0.037,4,0.057,5,0.057,6,0.044,13,3.486,14,3.781,26,1.935,27,1.666,49,0.005,51,0.003,52,2.517,65,6.293,96,0.246,97,2.303,98,2.003,99,1.617,119,3.098,138,0.063,176,0.004,177,0.003,262,1.43,317,0.819,359,1.373,416,3.92,417,3.168,418,3.032,419,4.779,420,2.642,425,2.642,460,1.165,495,4.779,497,3.168,500,2.969,503,4.779,967,5.768,1325,1.888,1337,3.587,1350,2.795,1425,3.92,1435,5.826,1436,4.557,1437,4.889]],["title/interfaces/CCircleMarker.html",[0,0.247,67,3.822]],["body/interfaces/CCircleMarker.html",[0,0.412,2,0.496,3,0.038,4,0.059,5,0.059,6,0.045,16,5.762,26,1.961,27,1.689,28,2.914,49,0.005,51,0.003,52,2.529,67,6.379,96,0.237,97,2.354,98,2.047,99,1.653,138,0.064,176,0.004,177,0.003,317,0.837,359,1.403,416,4.008,417,3.239,418,3.099,419,4.886,420,2.701,425,2.701,460,1.181,464,6.536,495,4.886,497,3.239,500,3.035,503,4.886,1325,1.93,1350,2.857,1436,4.659,1437,4.008,1438,5.956,1439,5.956]],["title/interfaces/CDistrictSearch.html",[0,0.247,68,3.822]],["body/interfaces/CDistrictSearch.html",[0,0.42,2,0.512,3,0.039,4,0.061,5,0.061,6,0.046,17,5.873,48,0.45,49,0.005,50,3.006,51,0.004,68,6.503,96,0.24,114,3.485,115,3.589,116,5.673,138,0.065,176,0.004,177,0.003,317,0.864,359,1.769,460,0.985,583,6.343,586,4.806,599,5.321,601,5.321,1094,5.04,1319,3.907,1325,1.991,1326,3.267,1440,5.321,1441,5.04,1442,6.144]],["title/interfaces/CDriving.html",[0,0.247,69,3.822]],["body/interfaces/CDriving.html",[0,0.401,2,0.475,3,0.036,4,0.056,5,0.056,6,0.043,18,5.114,26,1.909,48,0.493,49,0.005,50,3.507,51,0.004,69,6.208,96,0.251,98,1.96,99,1.582,114,3.081,138,0.062,176,0.004,177,0.003,317,0.801,359,1.689,455,3.149,460,0.914,617,5.607,622,3.837,635,2.967,639,4.112,641,4.938,643,4.938,645,4.938,647,4.938,649,2.494,651,4.938,653,4.938,655,4.112,657,3.61,672,3.249,1319,4.08,1325,1.848,1326,3.032,1443,5.702,1444,3.032,1445,3.032,1446,5.702,1447,4.112]],["title/interfaces/CEditor.html",[0,0.247,1367,3.308]],["body/interfaces/CEditor.html",[0,0.444,2,0.385,3,0.029,4,0.046,5,0.046,6,0.035,11,4.769,12,4.511,14,2.409,15,3.337,19,2.931,20,3.337,27,1.819,33,3.22,34,2.409,35,2.704,36,2.704,37,3.337,48,0.476,49,0.005,51,0.003,52,2.424,57,0.405,63,3.469,66,3.469,71,3.469,84,3.469,88,3.469,96,0.248,97,1.829,121,3.62,122,3.22,123,3.62,127,3.62,128,2.849,129,3.62,130,3.62,138,0.077,176,0.004,177,0.003,186,5.938,187,5.938,316,1.378,317,0.879,405,1.859,408,2.689,502,2.704,818,4.21,823,4.511,1358,3.62,1360,5.132,1362,5.132,1365,3.797,1366,6.37,1367,6.126,1368,4.69,1369,3.797,1370,3.797,1371,3.797,1372,3.797]],["title/interfaces/CEllipse.html",[0,0.247,70,3.822]],["body/interfaces/CEllipse.html",[0,0.407,2,0.486,3,0.037,4,0.058,5,0.058,6,0.044,13,3.492,19,4.608,26,1.938,27,1.669,49,0.005,51,0.003,52,2.367,70,6.303,96,0.253,97,2.309,98,2.008,99,1.621,119,3.107,138,0.063,176,0.004,177,0.003,262,1.434,317,0.821,359,1.376,416,3.931,417,3.177,418,3.04,420,2.649,425,2.649,455,2.236,497,3.177,500,2.977,569,5.456,1325,1.893,1337,3.597,1350,2.803,1425,3.931,1444,3.107,1445,3.107,1448,5.842,1449,6.807,1450,5.842,1451,5.842]],["title/interfaces/CGeocoder.html",[0,0.247,73,3.822]],["body/interfaces/CGeocoder.html",[0,0.415,2,0.501,3,0.038,4,0.059,5,0.059,6,0.045,22,5.802,48,0.445,49,0.005,50,3.629,51,0.005,73,6.424,96,0.255,138,0.064,147,4.991,176,0.004,177,0.003,286,3.203,317,0.847,359,1.419,455,2.305,715,5.802,724,5.216,727,5.216,728,5.216,1319,4.183,1325,1.952,1326,3.203,1444,3.203,1445,3.203,1452,6.023,1453,6.023,1454,5.216,1455,5.216,1456,4.941]],["title/interfaces/CHeatmap.html",[0,0.247,74,3.308]],["body/interfaces/CHeatmap.html",[0,0.466,2,0.448,3,0.034,4,0.053,5,0.053,6,0.04,23,4.509,27,1.848,48,0.323,49,0.005,51,0.003,52,1.972,57,0.254,59,3.228,74,5.183,96,0.205,97,2.129,99,1.919,138,0.074,176,0.004,177,0.003,359,1.269,418,2.803,420,2.442,425,2.442,460,1.39,500,2.744,745,4.213,746,3.41,756,5.183,761,5.605,777,5.138,1325,1.746,1332,4.701,1350,2.584,1457,4.213,1458,4.418,1459,4.418,1460,4.418,1461,4.418,1462,5.973,1463,4.037,1464,5.183,1465,4.418,1466,5.183,1467,4.418,1468,4.418,1469,4.418]],["title/interfaces/CIcon.html",[0,0.247,75,3.822]],["body/interfaces/CIcon.html",[0,0.432,2,0.536,3,0.041,4,0.063,5,0.063,6,0.048,24,4.513,39,4.049,49,0.005,51,0.004,52,1.837,75,6.691,96,0.229,101,4.481,102,5.038,138,0.067,176,0.004,177,0.004,317,0.905,359,1.517,1470,6.441,1471,6.043,1472,6.441,1473,6.441,1474,6.441]],["title/interfaces/CInfoWindow.html",[0,0.247,76,3.822]],["body/interfaces/CInfoWindow.html",[0,0.41,2,0.492,3,0.037,4,0.058,5,0.058,6,0.044,25,5.732,26,1.951,27,1.681,39,3.898,48,0.354,49,0.005,51,0.003,52,2.444,76,6.347,96,0.247,97,2.334,98,2.03,99,1.639,101,4.109,105,4.109,138,0.064,176,0.004,177,0.003,262,1.449,317,0.83,359,1.392,818,3.975,819,5.115,820,5.454,821,4.62,822,4.845,870,5.454,874,5.454,881,5.732,1325,1.914,1437,4.931,1475,5.907,1476,5.907,1477,5.907,1478,5.907,1479,5.907,1480,4.845]],["title/interfaces/CLngLat.html",[0,0.247,77,3.822]],["body/interfaces/CLngLat.html",[0,0.428,2,0.528,3,0.04,4,0.062,5,0.062,6,0.048,26,2.274,48,0.381,49,0.005,51,0.004,77,6.631,99,1.761,138,0.066,176,0.004,177,0.004,262,1.557,317,0.892,375,2.317,460,1.44,1424,4.575,1463,4.756,1481,6.345,1482,6.345,1483,4.963,1484,6.345,1485,6.345,1486,6.345,1487,6.345,1488,6.345,1489,6.345,1490,6.345]],["title/interfaces/CMap.html",[0,0.247,78,4.075]],["body/interfaces/CMap.html",[0,0.33,2,0.354,3,0.027,4,0.042,5,0.042,6,0.032,13,3.692,26,1.951,27,1.354,31,3.842,39,2.888,47,4.251,48,0.507,49,0.005,50,2.888,51,0.004,52,2.642,78,5.45,96,0.228,98,1.461,99,1.18,100,2.861,101,2.958,119,2.261,138,0.051,176,0.003,177,0.002,209,2.212,286,2.261,317,0.597,359,1.002,416,2.861,427,2.548,460,1.426,513,3.487,609,4.425,822,3.487,999,5.769,1066,3.325,1068,3.325,1325,1.378,1337,2.617,1390,2.548,1437,5.36,1483,6.39,1491,4.746,1492,5.112,1493,4.746,1494,4.746,1495,4.746,1496,4.746,1497,4.746,1498,7.325,1499,4.746,1500,4.251,1501,4.746,1502,4.746,1503,4.746,1504,4.746,1505,4.746,1506,4.746,1507,4.746,1508,4.746,1509,4.746,1510,4.746,1511,4.746,1512,4.746,1513,4.746,1514,4.746,1515,4.746,1516,4.746,1517,4.746,1518,4.746,1519,4.746,1520,4.746,1521,4.746,1522,4.746,1523,4.746,1524,4.746,1525,4.746,1526,4.746,1527,3.487,1528,4.746,1529,4.746,1530,4.746,1531,4.746,1532,4.746,1533,4.746,1534,4.746,1535,4.746,1536,4.746,1537,4.746,1538,4.746,1539,4.746,1540,4.746,1541,4.746]],["title/interfaces/CMarker.html",[0,0.247,79,4.075]],["body/interfaces/CMarker.html",[0,0.355,2,0.394,3,0.03,4,0.047,5,0.047,6,0.035,24,4.186,26,1.691,27,1.643,28,3.106,31,3.577,48,0.493,49,0.005,51,0.003,52,2.634,79,5.863,96,0.237,97,1.87,98,1.626,99,1.313,100,3.183,102,3.701,138,0.055,176,0.004,177,0.003,262,2.062,317,0.665,359,1.115,417,2.573,420,2.145,425,2.145,460,1.318,497,2.573,746,2.995,819,4.097,821,3.701,968,4.417,999,4.759,1137,3.701,1189,3.701,1325,1.533,1350,2.27,1437,4.272,1480,3.881,1542,5.282,1543,4.368,1544,4.368,1545,4.368,1546,4.368,1547,4.368,1548,4.368,1549,5.282,1550,5.282,1551,4.368,1552,4.368,1553,4.368,1554,5.282,1555,5.863,1556,5.282,1557,4.368,1558,4.368,1559,4.368,1560,5.282,1561,4.731,1562,4.368,1563,4.368,1564,5.863,1565,5.863,1566,5.208,1567,4.368,1568,4.368,1569,4.368,1570,4.368,1571,4.368,1572,4.368,1573,4.368,1574,4.368,1575,4.368,1576,4.368,1577,4.368,1578,5.282,1579,6.35,1580,5.282]],["title/interfaces/CMarkerClusterer.html",[0,0.247,80,3.822]],["body/interfaces/CMarkerClusterer.html",[0,0.397,2,0.466,3,0.035,4,0.055,5,0.055,6,0.042,27,1.933,28,4.33,29,5.812,49,0.005,51,0.003,80,6.136,96,0.242,97,2.212,107,6.081,108,5.542,109,4.378,120,5.168,138,0.061,176,0.004,177,0.003,262,1.739,317,0.787,359,1.319,460,1.402,746,3.544,1325,1.814,1350,2.685,1581,5.598,1582,5.598,1583,5.542,1584,5.598,1585,4.848,1586,5.598,1587,5.598,1588,5.598,1589,5.598,1590,5.598,1591,5.598,1592,5.598,1593,5.598,1594,5.598,1595,5.598,1596,5.598,1597,5.598,1598,5.598,1599,5.598,1600,5.598,1601,5.598,1602,5.598,1603,5.598]],["title/interfaces/CMouseTool.html",[0,0.247,81,3.822]],["body/interfaces/CMouseTool.html",[0,0.408,2,0.488,3,0.037,4,0.058,5,0.058,6,0.044,27,1.82,30,5.703,49,0.005,51,0.003,81,6.314,96,0.253,97,2.315,138,0.063,176,0.004,177,0.003,262,1.438,317,0.823,967,5.072,968,5.072,969,6.06,970,5.523,991,5.073,993,5.073,995,5.073,997,5.073,1001,5.073,1003,5.073,1005,5.073,1007,5.073,1009,5.073,1011,5.073,1325,2.692,1436,4.582,1543,5.409,1604,5.858,1605,5.858,1606,5.858,1607,5.073]],["title/interfaces/CPixel.html",[0,0.247,82,3.822]],["body/interfaces/CPixel.html",[0,0.43,2,0.531,3,0.04,4,0.063,5,0.063,6,0.048,31,4.115,48,0.383,49,0.005,51,0.004,82,6.654,96,0.189,100,4.295,138,0.067,176,0.004,177,0.004,262,1.566,317,0.897,375,2.331,460,1.371,849,4.379,1424,4.602,1527,5.236,1608,6.383,1609,5.893,1610,6.383,1611,6.383,1612,6.383,1613,5.528]],["title/interfaces/CPlaceSearch.html",[0,0.247,83,3.62]],["body/interfaces/CPlaceSearch.html",[0,0.424,2,0.442,3,0.034,4,0.052,5,0.052,6,0.04,13,3.285,32,5.133,34,2.761,48,0.535,49,0.005,50,3.919,51,0.004,56,0.913,83,5.617,96,0.252,113,4.595,114,2.943,119,2.822,122,3.691,138,0.066,176,0.004,177,0.003,262,1.302,286,2.822,288,3.57,291,3.57,317,0.746,359,1.25,427,3.18,433,2.953,455,2.902,460,1.215,649,2.321,704,3.266,1042,5.133,1055,4.352,1057,4.352,1058,4.352,1060,4.352,1062,4.352,1066,4.15,1068,4.15,1071,4.352,1076,4.352,1318,4.15,1319,4.316,1325,1.72,1326,2.822,1434,3.977,1441,4.352,1444,2.822,1445,2.822,1614,3.18,1615,4.899,1616,4.352,1617,4.899,1618,6.566]],["title/interfaces/CPolygon.html",[0,0.247,85,3.822]],["body/interfaces/CPolygon.html",[0,0.442,2,0.482,3,0.037,4,0.057,5,0.057,6,0.043,13,3.474,26,1.543,27,1.661,34,3.768,49,0.005,51,0.003,52,2.478,57,0.273,85,6.271,96,0.245,97,2.29,98,1.992,99,1.608,119,3.082,138,0.068,176,0.004,177,0.003,262,1.422,317,0.814,359,1.365,417,3.151,418,3.015,420,2.627,425,2.627,455,2.218,460,1.161,497,3.151,500,2.953,569,4.344,969,5.757,1337,3.567,1339,4.533,1350,2.78,1353,4.533,1425,3.899,1619,5.35,1620,6.271,1621,5.795,1622,5.018]],["title/interfaces/CPolyline.html",[0,0.247,86,3.822]],["body/interfaces/CPolyline.html",[0,0.415,2,0.501,3,0.038,4,0.059,5,0.059,6,0.045,13,3.558,27,1.701,35,4.333,49,0.005,51,0.003,52,2.502,86,6.424,96,0.238,97,2.38,119,3.203,138,0.064,176,0.004,177,0.003,317,0.847,359,1.419,417,3.275,418,3.134,420,2.731,425,2.731,460,1.288,497,3.275,500,3.069,970,5.836,1325,1.952,1337,3.708,1338,5.216,1339,4.711,1350,2.89,1353,4.711,1607,5.216,1623,6.023]],["title/interfaces/CRectangle.html",[0,0.247,87,3.822]],["body/interfaces/CRectangle.html",[0,0.406,2,0.484,3,0.037,4,0.057,5,0.057,6,0.044,13,3.794,26,1.547,27,1.663,36,4.237,49,0.005,51,0.003,52,2.48,87,6.282,96,0.253,97,2.296,98,1.997,99,1.612,119,3.09,138,0.063,176,0.004,177,0.003,262,1.426,317,0.817,359,1.369,417,3.16,418,3.024,420,2.635,425,2.635,455,2.224,460,0.931,497,3.16,500,2.961,569,4.355,1325,1.883,1337,3.577,1350,2.788,1425,3.91,1444,3.09,1445,3.09,1622,5.032,1624,5.811,1625,6.794,1626,5.811,1627,5.811]],["title/interfaces/CRiding.html",[0,0.247,89,3.822]],["body/interfaces/CRiding.html",[0,0.417,2,0.506,3,0.038,4,0.06,5,0.06,6,0.046,38,6.311,49,0.005,50,3.648,51,0.004,89,6.457,96,0.249,114,3.205,138,0.065,176,0.004,177,0.003,317,0.854,359,1.431,455,3.088,635,3.161,649,2.657,672,3.462,1110,5.832,1114,4.752,1319,4.198,1325,1.969,1326,3.23,1444,3.23,1445,3.23,1447,4.38,1628,6.075,1629,6.075]],["title/interfaces/CSize.html",[0,0.247,90,3.822]],["body/interfaces/CSize.html",[0,0.432,2,0.536,3,0.041,4,0.063,5,0.063,6,0.048,39,3.78,48,0.386,49,0.005,51,0.004,90,6.691,96,0.191,101,4.481,138,0.067,176,0.004,177,0.004,317,0.905,375,2.352,460,1.375,853,5.375,1424,4.644,1630,6.441,1631,6.441,1632,6.441,1633,6.441,1634,5.283,1635,5.038]],["title/interfaces/CText.html",[0,0.247,91,3.822]],["body/interfaces/CText.html",[0,0.363,2,0.406,3,0.031,4,0.048,5,0.048,6,0.037,24,4.253,26,1.727,27,1.67,31,3.634,40,4.363,48,0.508,49,0.005,51,0.003,52,2.636,91,5.615,96,0.239,97,1.929,98,1.678,99,1.355,100,3.285,102,3.819,138,0.056,176,0.004,177,0.003,262,2.078,317,0.686,359,1.15,417,2.655,420,2.214,425,2.214,460,1.33,497,2.655,746,3.091,821,3.819,1137,3.819,1189,3.819,1325,1.582,1350,2.342,1437,4.363,1480,4.005,1544,4.508,1545,4.508,1546,4.508,1547,4.508,1548,4.508,1551,4.508,1552,4.508,1553,4.508,1557,4.508,1558,4.508,1559,4.508,1562,4.508,1563,4.508,1564,5.987,1565,5.987,1566,5.319,1567,4.508,1568,4.508,1569,4.508,1570,4.508,1571,4.508,1572,4.508,1573,4.508,1574,4.508,1575,4.508,1576,4.508,1577,4.508,1636,4.882,1637,5.319,1638,4.882,1639,4.882,1640,4.882,1641,4.882]],["title/interfaces/CToolBar.html",[0,0.247,92,3.822]],["body/interfaces/CToolBar.html",[0,0.414,2,0.499,3,0.038,4,0.059,5,0.059,6,0.045,26,1.968,31,4.002,41,5.782,49,0.005,51,0.003,52,2.595,92,6.401,96,0.238,98,2.059,99,1.662,100,4.03,138,0.064,176,0.004,177,0.003,317,0.842,359,1.411,420,2.716,425,2.716,733,4.913,1136,5.53,1137,4.685,1138,5.53,1139,5.53,1140,5.53,1142,5.53,1143,5.53,1144,5.53,1189,4.685,1197,5.782,1325,1.941,1642,5.99,1643,5.99]],["title/interfaces/CTransfer.html",[0,0.247,93,3.822]],["body/interfaces/CTransfer.html",[0,0.41,2,0.492,3,0.037,4,0.058,5,0.058,6,0.044,42,5.972,48,0.5,49,0.005,50,3.585,51,0.004,93,6.347,96,0.247,114,3.15,138,0.064,176,0.004,177,0.003,286,3.141,317,0.83,359,1.392,455,3.049,635,3.074,639,4.259,649,2.584,657,3.74,672,3.366,777,3.975,1239,5.732,1243,4.62,1257,5.115,1259,5.115,1319,4.146,1325,1.914,1326,3.141,1444,3.141,1445,3.141,1447,4.259,1644,5.907,1645,5.907]],["title/interfaces/CTruckDriving.html",[0,0.247,94,3.822]],["body/interfaces/CTruckDriving.html",[0,0.414,2,0.5,3,0.038,4,0.059,5,0.059,6,0.045,18,4.829,26,1.599,43,5.792,48,0.444,49,0.005,50,2.939,51,0.004,94,6.413,96,0.255,98,2.064,99,1.667,114,2.582,138,0.064,176,0.004,177,0.003,317,0.844,359,1.415,455,2.299,460,0.963,622,4.042,649,2.627,655,4.331,676,3.194,1278,5.792,1319,3.853,1325,1.947,1326,3.194,1444,3.194,1445,3.194,1646,6.006,1647,6.006,1648,6.006]],["title/interfaces/CWalking.html",[0,0.247,95,3.822]],["body/interfaces/CWalking.html",[0,0.412,2,0.496,3,0.038,4,0.059,5,0.059,6,0.045,26,1.586,44,6.256,49,0.005,50,3.604,51,0.004,95,6.379,96,0.254,98,2.047,99,1.653,114,3.166,138,0.064,176,0.004,177,0.003,317,0.837,359,1.403,455,3.061,635,3.099,649,2.605,657,3.771,672,3.394,1293,5.762,1297,4.659,1319,4.162,1325,1.93,1326,3.167,1444,3.167,1445,3.167,1447,4.295,1649,5.956,1650,5.956]],["title/classes/ChangeFilter.html",[311,3.308,316,0.972]],["body/classes/ChangeFilter.html",[3,0.03,4,0.047,5,0.047,6,0.06,8,0.23,45,1.239,48,0.494,49,0.005,51,0.003,53,1.473,55,1.671,56,1.319,57,0.387,58,1.014,60,1.398,96,0.188,138,0.041,176,0.004,177,0.003,252,1.537,281,6.576,283,3.554,297,2.757,302,1.431,303,2.038,311,5.378,314,1.974,316,1.044,317,0.666,345,2.379,361,3.109,370,2.19,394,2.769,405,3.08,637,2.702,1012,3.554,1651,8.926,1652,5.294,1653,7.099,1654,6.625,1655,5.294,1656,5.294,1657,7.099,1658,5.871,1659,5.294,1660,4.974,1661,7.099,1662,5.294,1663,7.099,1664,5.294,1665,6.625,1666,5.294,1667,7.099,1668,7.099,1669,7.099]],["title/interfaces/Cinema.html",[0,0.247,1670,4.075]],["body/interfaces/Cinema.html",[0,0.317,2,0.471,3,0.036,4,0.056,5,0.056,6,0.042,8,0.274,9,0.792,48,0.557,49,0.005,51,0.003,57,0.413,96,0.168,138,0.049,176,0.004,177,0.003,1614,3.39,1670,6.586,1671,6.316,1672,7.104,1673,7.104,1674,9.158,1675,7.574,1676,9.158,1677,6.417,1678,7.104,1679,6.098]],["title/interfaces/Circle.html",[0,0.247,14,2.297]],["body/interfaces/Circle.html",[0,0.314,2,0.33,3,0.025,4,0.039,5,0.039,6,0.066,8,0.192,13,3.131,14,3.396,26,2.179,27,1.719,45,1.094,49,0.005,51,0.002,52,2.497,53,1.67,55,1.581,56,1.34,57,0.366,58,1.03,60,1.693,65,3.43,96,0.21,97,1.565,98,1.361,99,1.099,119,2.106,138,0.049,176,0.003,177,0.002,262,1.378,317,0.557,359,0.933,416,4.778,417,3.861,418,3.695,419,5.824,420,3.219,421,4.863,422,3.907,423,3.779,424,5.185,425,3.219,433,2.204,460,1.334,495,4.607,497,3.054,499,2.755,500,2.861,502,2.313,503,4.607,967,5.571,1325,1.283,1337,4.371,1340,3.779,1350,2.694,1421,4.607,1425,3.779,1427,3.098,1435,3.96,1436,3.098,1437,3.779,1680,4.421,1681,4.421,1682,4.421,1683,4.421,1684,4.421,1685,4.421,1686,4.421,1687,4.421,1688,4.421,1689,4.421,1690,4.421,1691,4.421,1692,4.421]],["title/interfaces/CircleMarker.html",[0,0.247,16,3.452]],["body/interfaces/CircleMarker.html",[0,0.326,2,0.347,3,0.026,4,0.041,5,0.041,6,0.065,8,0.202,16,5.248,26,2.108,27,1.752,28,2.039,45,1.134,49,0.005,51,0.002,52,2.517,53,1.657,55,1.551,56,1.315,57,0.36,58,1.011,60,1.68,67,3.61,96,0.199,97,1.647,98,1.433,99,1.157,138,0.05,176,0.003,177,0.002,317,0.586,359,0.982,416,4.887,417,3.949,418,3.78,419,5.958,420,3.293,421,5.042,422,4.051,423,3.918,424,5.376,425,3.293,433,2.32,460,1.302,464,6.355,495,4.776,497,3.166,499,2.9,500,2.967,502,2.435,503,4.776,1325,1.351,1340,3.918,1350,2.793,1436,3.261,1437,2.805,1438,8.698,1439,4.169,1693,4.654,1694,4.654,1695,4.654,1696,4.654,1697,4.654,1698,4.654,1699,4.654,1700,4.654,1701,4.654,1702,4.654,1703,4.654]],["title/interfaces/CircleMarkerOptions.html",[0,0.247,464,3.452]],["body/interfaces/CircleMarkerOptions.html",[0,0.265,2,0.395,3,0.03,4,0.047,5,0.047,6,0.036,8,0.23,9,0.706,26,2.041,27,1.96,28,2.32,48,0.519,49,0.005,51,0.003,57,0.418,58,1.224,96,0.188,99,1.316,138,0.041,176,0.004,177,0.003,262,1.761,426,5,427,4.595,428,4.854,429,5.159,430,5.747,431,5.747,433,4.266,434,5.334,435,5.334,436,5.334,437,5,460,1.447,464,4.974,1329,2.231,1380,2.702,1704,4.741,1705,3.419]],["title/injectables/CircleMarkerService.html",[349,0.933,452,4.075]],["body/injectables/CircleMarkerService.html",[1,2.009,3,0.026,4,0.04,5,0.04,6,0.059,8,0.199,9,0.639,14,3.463,16,3.211,21,2.009,27,1.742,28,2.818,45,1.122,48,0.399,49,0.005,51,0.002,53,1.514,55,1.542,56,1.241,57,0.381,58,0.954,60,1.296,96,0.233,138,0.036,176,0.003,177,0.002,232,2.535,235,2.125,252,1.867,254,2.304,260,2.22,293,2.999,296,1.546,297,1.476,298,1.292,302,1.238,306,1.432,314,1.274,316,0.904,317,0.577,326,1.861,345,1.98,349,1.218,350,1.622,361,1.596,362,1.411,363,1.476,366,2.805,367,1.649,368,1.649,369,1.499,375,2.103,378,1.649,395,2.66,404,1.932,405,2.673,406,1.969,407,1.969,408,1.764,452,5.318,464,5.643,509,7.273,987,2.397,1387,3.792,1388,3.205,1390,3.452,1392,4.214,1394,3.205,1403,3.132,1405,2.397,1406,2.527,1408,2.339,1409,2.527,1410,2.677,1411,2.855,1414,2.855,1706,7.877,1707,4.105,1708,6.43,1709,4.582,1710,5.76,1711,4.582,1712,4.582,1713,4.582,1714,4.105]],["title/interfaces/CircleOptions.html",[0,0.247,967,3.071]],["body/interfaces/CircleOptions.html",[0,0.254,2,0.377,3,0.029,4,0.045,5,0.045,6,0.034,8,0.22,9,0.685,26,2.004,27,1.939,48,0.529,49,0.005,51,0.003,57,0.42,58,1.227,96,0.183,99,1.257,138,0.039,176,0.004,177,0.003,262,1.72,426,4.907,427,4.51,428,4.764,429,5.063,430,5.641,431,5.641,433,4.187,434,5.235,435,5.235,436,5.235,437,4.907,460,1.456,967,4.29,1329,2.132,1378,5.641,1379,5.641,1380,2.582,1704,4.531,1705,3.267]],["title/injectables/CircleService.html",[349,0.933,1715,4.414]],["body/injectables/CircleService.html",[1,1.852,3,0.023,4,0.036,5,0.036,6,0.061,8,0.177,9,0.589,14,4.071,15,2.64,21,1.852,27,1.668,45,1.034,46,1.547,48,0.375,49,0.005,51,0.002,53,1.57,55,1.539,56,1.251,57,0.384,58,0.962,60,1.417,96,0.232,138,0.032,176,0.003,177,0.002,232,2.725,235,1.995,252,1.721,254,2.188,260,2.084,293,3.072,296,1.379,297,1.317,298,1.153,302,1.105,306,1.278,314,1.137,316,0.806,317,0.746,326,1.66,345,2.163,349,1.123,350,1.447,354,2.732,355,2.845,361,1.424,362,1.259,363,1.317,364,1.521,365,1.521,366,2.664,367,1.471,368,1.471,369,1.337,375,1.939,378,1.471,395,2.452,404,1.723,405,2.509,406,1.757,407,1.757,408,1.574,967,4.766,987,2.139,1386,4.886,1387,3.559,1388,2.954,1389,4.153,1390,3.182,1391,5.358,1392,4.001,1394,2.954,1396,5.309,1398,4.902,1403,2.887,1405,2.139,1406,2.254,1408,2.087,1409,2.254,1410,3.462,1411,2.547,1414,2.547,1415,4.886,1710,5.309,1714,3.662,1715,5.309,1716,3.662,1717,5.927,1718,4.088,1719,4.088,1720,4.088,1721,4.088,1722,4.088,1723,4.088,1724,4.088,1725,4.088,1726,4.088]],["title/interfaces/CityInfo.html",[0,0.247,1727,4.075]],["body/interfaces/CityInfo.html",[0,0.345,2,0.513,3,0.039,4,0.061,5,0.061,6,0.046,8,0.299,9,0.835,48,0.545,49,0.005,51,0.003,56,1.454,57,0.398,138,0.053,153,6.162,176,0.004,177,0.003,205,5.882,210,6.337,460,1.301,1332,5.205,1614,3.693,1727,6.945,1728,6.88]],["title/interfaces/ClusterStyle.html",[0,0.247,107,3.452]],["body/interfaces/ClusterStyle.html",[0,0.313,2,0.466,3,0.035,4,0.055,5,0.055,6,0.042,8,0.271,9,0.787,31,4.366,39,4.33,48,0.517,49,0.005,51,0.003,57,0.405,58,1.171,96,0.21,100,3.767,101,3.894,107,5.542,138,0.049,176,0.004,177,0.003,460,1.246,832,4.346,1729,6.25,1730,6.25,1731,7.077,1732,8.172,1733,8.172,1734,6.703]],["title/interfaces/Cross.html",[0,0.247,1735,4.075]],["body/interfaces/Cross.html",[0,0.317,2,0.471,3,0.036,4,0.056,5,0.056,6,0.042,8,0.274,9,0.792,26,2.184,48,0.553,49,0.005,51,0.003,57,0.413,96,0.168,98,1.944,99,1.57,138,0.049,176,0.004,177,0.003,460,1.252,704,5.05,1146,6.417,1735,6.586,1736,6.316,1737,4.792,1738,9.158,1739,9.158,1740,9.158,1741,9.158]],["title/injectables/DebugLoggerService.html",[349,0.933,1742,4.075]],["body/injectables/DebugLoggerService.html",[3,0.031,4,0.049,5,0.049,6,0.062,8,0.24,45,1.277,48,0.537,49,0.005,51,0.003,52,2.227,53,1.56,55,1.585,56,1.343,57,0.367,58,1.033,60,1.521,96,0.147,138,0.043,176,0.004,177,0.003,235,2.494,252,2.378,302,1.497,316,1.093,349,1.386,350,1.961,1742,6.051,1743,9.309,1744,5.539,1745,5.676,1746,5.676,1747,5.376,1748,5.539,1749,6.554,1750,9.113,1751,5.539,1752,6.554,1753,5.539,1754,6.554,1755,5.539,1756,6.554,1757,5.539,1758,6.554,1759,4.961,1760,4.961]],["title/interfaces/Dining.html",[0,0.247,1761,4.075]],["body/interfaces/Dining.html",[0,0.246,2,0.366,3,0.028,4,0.043,5,0.043,6,0.033,8,0.213,9,0.671,48,0.566,49,0.005,51,0.002,57,0.427,96,0.13,138,0.038,176,0.003,177,0.002,235,2.374,1614,2.637,1672,6.438,1673,6.438,1675,6.863,1677,5.814,1678,6.438,1679,5.618,1761,5.581,1762,4.912,1763,7.433,1764,8.299,1765,7.433,1766,8.299,1767,8.299,1768,7.433,1769,7.433,1770,8.299,1771,7.433,1772,7.433,1773,8.299,1774,7.433,1775,8.299]],["title/interfaces/Discount.html",[0,0.247,1776,3.822]],["body/interfaces/Discount.html",[0,0.309,2,0.46,3,0.035,4,0.054,5,0.054,6,0.041,8,0.268,9,0.78,48,0.556,49,0.005,51,0.003,57,0.415,96,0.164,138,0.048,176,0.004,177,0.003,460,1.239,1614,3.311,1677,6.362,1679,6.055,1734,6.671,1776,6.086,1777,6.169,1778,7.509,1779,9.08,1780,8.133,1781,8.133,1782,9.08,1783,6.096]],["title/interfaces/District.html",[0,0.247,115,2.578]],["body/interfaces/District.html",[0,0.316,2,0.47,3,0.036,4,0.056,5,0.056,6,0.042,8,0.273,9,0.791,26,2.333,48,0.546,49,0.005,51,0.003,56,1.41,57,0.412,96,0.167,98,1.939,99,1.566,115,4.936,138,0.049,176,0.004,177,0.003,205,5.702,210,6.143,427,4.912,609,6.143,1440,4.886,1784,6.299,1785,9.15,1786,8.195]],["title/interfaces/DistrictSearch.html",[0,0.247,17,3.452]],["body/interfaces/DistrictSearch.html",[0,0.377,2,0.43,3,0.033,4,0.051,5,0.051,6,0.059,8,0.25,17,5.854,45,1.311,48,0.506,49,0.005,50,3.662,51,0.004,53,1.438,55,1.519,56,1.288,57,0.352,58,0.99,60,1.458,68,4.473,96,0.222,114,3.534,115,3.93,116,7.321,138,0.058,176,0.004,177,0.003,190,2.11,317,0.726,359,1.868,460,1.2,583,6.432,586,4.04,599,5.827,601,5.827,603,6.729,604,6.729,609,3.872,1094,5.52,1318,4.04,1319,4.126,1325,1.674,1326,2.747,1440,6.867,1441,4.237,1442,5.165,1787,5.767,1788,5.165,1789,5.165]],["title/interfaces/DistrictSearchOptions.html",[0,0.247,583,3.452]],["body/interfaces/DistrictSearchOptions.html",[0,0.337,2,0.501,3,0.038,4,0.059,5,0.059,6,0.045,8,0.292,9,0.824,48,0.526,49,0.005,51,0.003,57,0.395,58,1.187,114,2.589,138,0.052,176,0.004,177,0.003,262,1.972,460,1.288,583,5.802,609,6.288,1329,2.835,1790,6.725,1791,6.561,1792,9.365,1793,9.365]],["title/interfaces/DistrictSearchResult.html",[0,0.247,586,3.452]],["body/interfaces/DistrictSearchResult.html",[0,0.357,2,0.531,3,0.055,4,0.063,5,0.063,6,0.048,8,0.309,9,0.853,48,0.494,49,0.005,51,0.004,57,0.362,96,0.189,114,2.743,115,5.114,138,0.055,163,4.784,176,0.004,177,0.004,586,6.01,1331,4.295,1440,5.528,1786,8.556]],["title/injectables/DocumentRef.html",[349,0.933,1794,3.452]],["body/injectables/DocumentRef.html",[3,0.04,4,0.062,5,0.062,6,0.057,8,0.304,45,1.481,49,0.005,51,0.004,53,1.205,60,1.222,96,0.186,105,4.362,138,0.066,176,0.004,177,0.004,302,1.892,316,1.674,345,2.262,349,1.73,350,2.478,1794,5.946,1795,7.602,1796,6.271,1797,8.505,1798,7.001,1799,4.905,1800,6.271,1801,6.271]],["title/interfaces/DriveRoute.html",[0,0.247,1802,4.075]],["body/interfaces/DriveRoute.html",[0,0.316,2,0.47,3,0.036,4,0.056,5,0.056,6,0.042,8,0.273,9,0.791,48,0.468,49,0.005,51,0.003,57,0.412,96,0.167,138,0.049,167,4.886,176,0.004,177,0.003,460,1.477,680,5.702,1268,5.189,1737,4.787,1802,6.575,1803,4.886,1804,5.209,1805,8.195,1806,7.567,1807,7.097,1808,7.097,1809,6.723,1810,5.642]],["title/interfaces/DriveStep.html",[0,0.247,1809,3.62]],["body/interfaces/DriveStep.html",[0,0.388,2,0.37,3,0.028,4,0.044,5,0.044,6,0.033,8,0.215,9,0.676,26,2.301,48,0.551,49,0.005,51,0.003,56,0.765,57,0.421,96,0.18,98,1.528,99,1.234,115,4.055,138,0.06,163,3.332,176,0.003,177,0.003,205,3.093,210,3.332,389,2.265,460,1.419,676,3.97,678,5.024,1268,4.727,1737,4.568,1803,3.85,1807,6.466,1808,6.466,1809,4.993,1811,3.647,1812,5.84,1813,6.124,1814,6.893,1815,6.124,1816,5.84,1817,6.124,1818,6.124,1819,6.893,1820,6.893,1821,6.466,1822,6.466,1823,4.105,1824,4.105]],["title/interfaces/Driving.html",[0,0.247,18,2.878]],["body/interfaces/Driving.html",[0,0.313,2,0.327,3,0.025,4,0.039,5,0.039,6,0.065,8,0.191,18,4.615,26,1.73,45,1.089,48,0.511,49,0.005,50,3.8,51,0.003,53,1.654,55,1.622,56,1.375,57,0.376,58,1.057,60,1.677,69,3.404,96,0.221,98,1.351,99,1.091,114,3.339,138,0.048,176,0.003,177,0.002,213,2.947,317,0.552,359,1.667,455,3.224,460,1.042,617,4.37,622,2.645,634,2.489,635,3.382,639,4.028,641,4.838,643,4.838,645,6.129,647,6.129,649,3.095,651,6.129,653,6.129,655,4.028,657,3.537,659,4.37,660,5.587,661,5.587,662,4.838,663,4.838,672,3.184,674,2.564,676,2.09,678,2.645,680,2.735,1319,4.158,1325,1.274,1326,2.09,1443,3.931,1444,2.09,1445,2.09,1446,3.931,1447,4.028,1825,4.389,1826,4.389,1827,4.389,1828,4.389,1829,4.389,1830,4.389,1831,3.404,1832,4.389,1833,4.389,1834,4.389,1835,4.389,1836,4.389,1837,4.389]],["title/interfaces/DrivingOptions.html",[0,0.247,617,3.452]],["body/interfaces/DrivingOptions.html",[0,0.271,2,0.404,3,0.031,4,0.048,5,0.048,6,0.036,8,0.235,9,0.717,27,1.969,48,0.535,49,0.005,51,0.003,57,0.42,58,1.226,96,0.144,138,0.042,176,0.004,177,0.003,213,5.799,262,2.188,460,1.355,617,5.049,680,5.382,1329,2.282,1375,5.578,1376,5.578,1380,2.763,1791,6.051,1838,5.414,1839,6.051,1840,8.637,1841,6.346,1842,6.051,1843,7.736]],["title/interfaces/DrivingResult.html",[0,0.247,622,2.97]],["body/interfaces/DrivingResult.html",[0,0.299,2,0.445,3,0.053,4,0.053,5,0.053,6,0.04,8,0.259,9,0.764,26,2.305,48,0.456,49,0.005,51,0.003,57,0.413,96,0.225,98,1.837,99,1.483,112,3.719,138,0.046,148,5.499,159,4.182,166,4.63,176,0.004,177,0.003,460,1.22,622,4.63,635,4.181,672,4.578,1331,3.597,1802,7.418,1810,5.346,1844,5.968,1845,6.957,1846,7.418,1847,6.957,1848,8.034,1849,8.969]],["title/interfaces/Editor.html",[0,0.247,1366,3.308]],["body/interfaces/Editor.html",[0,0.425,2,0.34,3,0.026,4,0.04,5,0.04,6,0.057,8,0.198,11,4.468,12,4.142,14,2.128,15,2.948,19,2.589,20,2.948,27,1.74,33,2.845,34,2.128,35,2.388,36,2.388,37,2.948,45,1.119,48,0.503,49,0.005,51,0.002,52,2.473,53,1.384,55,1.166,56,0.988,57,0.404,58,0.76,60,1.403,63,3.065,66,3.065,71,3.065,84,3.065,88,3.065,96,0.239,97,1.616,121,3.198,122,2.845,123,3.198,127,3.198,128,2.517,129,3.198,130,3.198,138,0.076,176,0.003,177,0.002,185,5.304,186,6.452,187,6.452,190,2.346,316,1.265,317,0.807,405,1.643,408,2.469,502,2.388,818,5.105,823,5.471,1358,3.198,1360,5.447,1362,5.447,1365,3.354,1366,6.285,1367,5.687,1368,4.306,1369,3.354,1370,3.354,1371,3.354,1372,3.354,1850,4.565,1851,4.565,1852,4.565,1853,4.565]],["title/interfaces/Ellipse.html",[0,0.247,19,2.794]],["body/interfaces/Ellipse.html",[0,0.327,2,0.348,3,0.026,4,0.041,5,0.041,6,0.065,8,0.203,13,3.226,19,4.257,26,2.166,27,1.755,45,1.138,49,0.005,51,0.002,52,2.367,53,1.658,55,1.553,56,1.316,57,0.36,58,1.012,60,1.681,70,3.624,96,0.227,97,1.654,98,1.438,99,1.161,119,2.225,138,0.051,176,0.003,177,0.002,262,1.433,317,0.588,359,0.986,416,4.896,417,3.956,418,3.786,420,3.299,421,5.056,422,4.062,423,3.928,425,3.299,427,2.508,455,2.929,497,3.175,499,2.911,500,2.975,502,2.444,569,4.376,1325,1.356,1337,4.479,1340,3.928,1350,2.801,1421,4.789,1425,3.928,1427,3.273,1444,2.225,1445,2.225,1448,4.185,1449,6.672,1450,4.185,1451,5.838,1854,4.672,1855,4.672,1856,4.672,1857,4.672,1858,4.672,1859,4.672,1860,4.672,1861,4.672,1862,4.672,1863,4.672,1864,4.672]],["title/interfaces/EllipseOptions.html",[0,0.247,1449,3.62]],["body/interfaces/EllipseOptions.html",[0,0.254,2,0.377,3,0.029,4,0.045,5,0.045,6,0.034,8,0.22,9,0.685,26,2.004,27,1.939,48,0.529,49,0.005,51,0.003,57,0.42,58,1.227,96,0.183,99,1.257,138,0.039,176,0.004,177,0.003,262,1.72,426,4.907,427,4.51,428,4.764,429,5.063,430,5.641,431,5.641,433,4.187,434,5.235,435,5.235,436,5.235,437,4.907,460,1.456,1329,2.132,1378,5.641,1379,5.641,1380,2.582,1449,5.058,1705,3.267,1865,5.058]],["title/injectables/EllipseService.html",[349,0.933,1866,4.414]],["body/injectables/EllipseService.html",[1,1.852,3,0.023,4,0.036,5,0.036,6,0.061,8,0.177,9,0.589,19,4.953,20,2.64,21,1.852,27,1.668,45,1.034,46,1.547,48,0.375,49,0.005,51,0.002,53,1.57,55,1.539,56,1.251,57,0.384,58,0.962,60,1.417,96,0.232,138,0.032,176,0.003,177,0.002,232,2.725,235,1.995,252,1.721,254,2.188,260,2.084,293,3.072,296,1.379,297,1.317,298,1.153,302,1.105,306,1.278,314,1.137,316,0.806,317,0.746,326,1.66,345,2.163,349,1.123,350,1.447,354,2.732,355,2.845,361,1.424,362,1.259,363,1.317,364,1.521,365,1.521,366,2.664,367,1.471,368,1.471,369,1.337,375,1.939,378,1.471,395,2.452,404,1.723,405,2.509,406,1.757,407,1.757,408,1.574,987,2.139,1386,4.886,1387,3.559,1388,2.954,1389,4.153,1390,3.182,1391,5.358,1392,4.001,1394,2.954,1403,2.887,1405,2.139,1406,2.254,1408,2.087,1409,2.254,1410,3.462,1411,2.547,1414,2.547,1415,4.886,1449,5.619,1746,4.598,1866,5.309,1867,3.662,1868,5.927,1869,4.088,1870,5.927,1871,4.088,1872,5.927,1873,4.088,1874,4.088,1875,4.088,1876,4.088,1877,4.088,1878,4.088,1879,4.088,1880,4.088]],["title/classes/EventBinder.html",[316,0.972,366,1.716]],["body/classes/EventBinder.html",[1,2.294,3,0.032,4,0.049,5,0.049,6,0.049,8,0.242,21,2.836,45,1.281,48,0.441,49,0.005,51,0.003,53,0.958,55,1.334,56,0.858,57,0.309,58,0.659,60,0.971,96,0.195,138,0.043,176,0.004,177,0.003,198,6.574,293,2.729,298,1.569,303,2.142,314,1.547,316,1.098,345,2.418,361,2.86,362,1.713,366,2.556,369,1.82,394,2.911,395,3.036,404,3.094,405,3.142,408,2.826,1012,4.928,1746,5.693,1881,6.574,1882,4.985,1883,5.565,1884,5.565,1885,7.339,1886,7.339,1887,5.565,1888,5.565,1889,7.339,1890,7.339,1891,5.565,1892,7.339,1893,5.565]],["title/interfaces/Geocode.html",[0,0.247,147,2.97]],["body/interfaces/Geocode.html",[0,0.327,2,0.486,3,0.037,4,0.058,5,0.058,6,0.044,8,0.283,9,0.808,26,2.21,48,0.54,49,0.005,51,0.003,57,0.402,96,0.216,98,2.008,99,1.621,138,0.051,140,4.379,147,4.898,176,0.004,177,0.003,202,7.728,205,5.773,400,3.931,609,6.221,704,5.109,1894,6.523,1895,8.299]],["title/interfaces/GeocodeResult.html",[0,0.247,1454,3.822]],["body/interfaces/GeocodeResult.html",[0,0.35,2,0.521,3,0.055,4,0.062,5,0.062,6,0.047,8,0.303,9,0.843,48,0.49,49,0.005,51,0.004,57,0.385,96,0.185,138,0.054,147,5.857,176,0.004,177,0.004,460,1.31,1331,4.207,1454,6.572,1896,6.98,1897,8.497,1898,8.497]],["title/interfaces/Geocoder.html",[0,0.247,22,3.452]],["body/interfaces/Geocoder.html",[0,0.374,2,0.426,3,0.032,4,0.05,5,0.05,6,0.059,8,0.248,22,5.827,45,1.303,48,0.504,49,0.005,50,4.114,51,0.004,53,1.432,55,1.512,56,1.282,57,0.351,58,0.986,60,1.452,73,4.43,96,0.243,138,0.058,147,4.5,176,0.004,177,0.003,209,2.662,240,4.652,286,3.556,317,0.719,359,1.205,400,3.442,455,3.137,704,3.149,715,5.231,724,5.791,727,5.791,728,4.43,732,6.687,733,5.485,1319,4.458,1325,1.658,1326,2.72,1444,2.72,1445,2.72,1452,5.116,1453,5.116,1454,4.43,1455,4.43,1456,4.196,1899,5.711,1900,5.711,1901,5.711]],["title/interfaces/GeocoderOptions.html",[0,0.247,715,3.452]],["body/interfaces/GeocoderOptions.html",[0,0.34,2,0.506,3,0.038,4,0.06,5,0.06,6,0.046,8,0.294,9,0.828,48,0.527,49,0.005,51,0.003,57,0.396,58,1.163,138,0.053,176,0.004,177,0.003,209,4.378,262,1.98,433,4.681,460,1.293,715,5.832,1329,2.859,1791,6.581,1902,6.782,1903,9.393]],["title/interfaces/GeocoderResult.html",[0,0.247,1904,4.414]],["body/interfaces/GeocoderResult.html",[0,0.335,2,0.499,3,0.054,4,0.059,5,0.059,6,0.045,8,0.29,9,0.821,48,0.481,49,0.005,51,0.003,57,0.394,96,0.219,138,0.052,147,5.894,176,0.004,177,0.003,460,1.285,1331,4.03,1456,4.913,1897,8.372,1898,8.372,1904,7.392,1905,6.687,1906,7.765]],["title/interfaces/Groupbuy.html",[0,0.247,1907,4.075]],["body/interfaces/Groupbuy.html",[0,0.261,2,0.388,3,0.029,4,0.046,5,0.046,6,0.035,8,0.226,9,0.698,48,0.559,49,0.005,51,0.003,57,0.431,96,0.138,138,0.04,176,0.004,177,0.003,460,1.444,1332,4.686,1614,2.792,1677,5.954,1679,5.731,1734,6.244,1776,6.592,1778,7.028,1780,7.612,1781,7.612,1783,5.706,1907,5.802,1908,5.201,1909,8.498,1910,8.498,1911,8.498,1912,8.498,1913,8.498,1914,8.498,1915,8.498]],["title/interfaces/Heatmap.html",[0,0.247,23,2.878]],["body/interfaces/Heatmap.html",[0,0.426,2,0.344,3,0.026,4,0.041,5,0.041,6,0.064,8,0.2,23,4.357,27,1.897,45,1.128,48,0.248,49,0.005,51,0.002,52,2.065,53,1.616,55,1.469,56,1.245,57,0.359,58,0.958,59,2.479,60,1.638,74,3.1,96,0.172,97,1.635,99,2.009,138,0.068,176,0.003,177,0.002,190,1.689,359,0.975,418,3.767,420,3.282,423,3.897,425,3.282,460,1.403,500,2.951,502,2.416,745,5.662,746,4.583,747,5.791,749,4.136,756,5.426,761,5.64,777,4.496,1325,1.34,1332,4.691,1340,3.897,1350,2.778,1457,3.235,1458,3.393,1459,3.393,1460,4.75,1461,4.75,1462,5.226,1463,4.341,1464,4.341,1465,3.393,1466,4.341,1467,3.393,1468,3.393,1469,3.393,1916,6.465,1917,4.618,1918,4.618,1919,4.618,1920,4.618,1921,4.618,1922,4.618,1923,4.618,1924,4.618,1925,4.618]],["title/interfaces/HeatmapDataSet.html",[0,0.247,1464,3.308]],["body/interfaces/HeatmapDataSet.html",[0,0.459,2,0.428,3,0.033,4,0.051,5,0.051,6,0.039,8,0.249,9,0.745,23,4.375,27,1.815,48,0.308,49,0.005,51,0.003,52,1.914,57,0.351,58,0.887,59,3.081,74,3.853,96,0.199,97,2.031,99,1.861,138,0.073,176,0.004,177,0.003,359,1.211,418,2.675,420,2.331,425,2.331,460,1.409,500,2.619,745,4.021,746,3.255,756,5.028,761,5.506,777,5.666,1325,1.666,1332,4.597,1350,2.466,1457,4.021,1458,4.216,1459,4.216,1460,4.216,1461,4.216,1462,6.422,1463,3.853,1464,5.597,1465,6.492,1466,5.028,1467,4.216,1468,4.216,1469,4.216]],["title/interfaces/HeatmapDataUrl.html",[0,0.247,1466,3.308]],["body/interfaces/HeatmapDataUrl.html",[0,0.46,2,0.43,3,0.033,4,0.051,5,0.051,6,0.039,8,0.25,9,0.747,23,4.388,27,1.818,48,0.449,49,0.005,51,0.003,52,1.92,57,0.352,59,4.485,74,3.872,96,0.199,97,2.041,99,1.867,138,0.073,176,0.004,177,0.003,359,1.217,418,2.688,420,2.342,425,2.342,460,1.376,500,2.632,745,4.04,746,3.27,756,5.044,761,5.517,777,5.673,1325,1.674,1332,4.607,1350,2.478,1457,4.04,1458,4.237,1459,4.237,1460,4.237,1461,4.237,1462,5.854,1463,3.872,1464,5.044,1465,4.237,1466,5.61,1467,4.237,1468,6.504,1469,4.237]],["title/interfaces/HeatmapLngLatData.html",[0,0.247,1462,3.452]],["body/interfaces/HeatmapLngLatData.html",[0,0.457,2,0.421,3,0.032,4,0.05,5,0.05,6,0.038,8,0.245,9,0.737,23,4.327,27,1.803,48,0.303,49,0.005,51,0.003,52,1.893,57,0.37,58,0.878,59,3.03,74,3.789,96,0.197,97,1.998,99,2.266,138,0.073,176,0.004,177,0.003,359,1.191,418,2.631,420,2.292,425,2.292,460,1.446,500,2.576,745,3.954,746,3.201,756,4.974,761,5.471,777,4.984,1325,1.638,1332,5.16,1350,2.425,1457,3.954,1458,4.147,1459,4.147,1460,4.147,1461,4.147,1462,6.151,1463,5.895,1464,4.974,1465,4.147,1466,4.974,1467,4.147,1468,4.147,1469,4.147]],["title/interfaces/HeatmapOptions.html",[0,0.247,761,3.071]],["body/interfaces/HeatmapOptions.html",[0,0.341,2,0.507,3,0.039,4,0.06,5,0.06,6,0.046,8,0.295,9,0.829,49,0.005,51,0.003,57,0.396,58,1.19,138,0.053,176,0.004,177,0.003,433,4.686,460,1.453,750,7.775,751,7.775,752,7.293,761,5.196,1329,2.867,1926,6.801]],["title/injectables/HeatmapService.html",[349,0.933,754,4.075]],["body/injectables/HeatmapService.html",[1,1.952,3,0.025,4,0.039,5,0.039,6,0.06,8,0.191,9,0.621,21,1.952,23,5.069,27,1.624,45,1.09,46,1.664,48,0.39,49,0.005,51,0.002,53,1.537,55,1.519,56,1.218,57,0.385,58,0.937,60,1.268,96,0.237,138,0.034,176,0.003,177,0.002,232,2.773,233,3.121,235,2.078,252,1.813,254,2.262,260,2.171,293,3.029,296,1.484,297,1.416,298,1.24,302,1.188,306,1.374,314,1.736,316,0.867,317,0.553,318,2.684,326,2.536,345,1.935,349,1.183,350,1.556,354,2.846,355,2.942,361,1.531,362,1.354,363,1.416,364,1.636,365,1.636,366,2.754,367,1.582,368,1.582,369,1.438,372,2.424,375,2.043,378,1.582,395,2.584,404,1.853,405,2.613,406,1.889,407,1.889,408,1.693,754,5.165,761,4.927,987,2.3,1387,3.707,1388,3.113,1390,3.352,1392,4.137,1394,3.113,1403,3.042,1405,2.3,1406,2.424,1408,3.188,1409,2.424,1927,3.938,1928,6.245,1929,4.397,1930,6.245,1931,4.397,1932,4.397,1933,4.397,1934,4.397,1935,3.636,1936,4.397,1937,4.397,1938,4.397]],["title/interfaces/Hotel.html",[0,0.247,1939,4.075]],["body/interfaces/Hotel.html",[0,0.283,2,0.421,3,0.032,4,0.05,5,0.05,6,0.038,8,0.245,9,0.737,48,0.563,49,0.005,51,0.003,57,0.422,96,0.15,138,0.044,176,0.004,177,0.003,1614,3.03,1672,6.81,1673,6.81,1677,6.151,1678,6.81,1679,5.888,1763,7.864,1768,7.864,1774,7.864,1939,6.126,1940,5.644,1941,8.78,1942,8.78,1943,8.78,1944,8.78,1945,8.78]],["title/interfaces/IClusterStyle.html",[0,0.247,1946,3.62]],["body/interfaces/IClusterStyle.html",[0,0.313,2,0.466,3,0.035,4,0.055,5,0.055,6,0.042,8,0.271,9,0.787,39,3.998,48,0.517,49,0.005,51,0.003,57,0.405,58,1.171,96,0.21,138,0.049,176,0.004,177,0.003,460,1.246,832,4.346,849,4.984,853,5.685,1731,7.077,1732,8.172,1733,8.172,1734,6.703,1946,5.812,1947,6.25,1948,6.25,1949,5.598,1950,5.168]],["title/interfaces/IIcon.html",[0,0.247,1471,3.452]],["body/interfaces/IIcon.html",[0,0.33,2,0.49,3,0.037,4,0.058,5,0.058,6,0.044,8,0.286,9,0.812,39,4.072,48,0.477,49,0.005,51,0.003,57,0.392,58,1.182,96,0.217,138,0.051,176,0.004,177,0.003,849,4.743,853,6.153,1471,5.723,1731,7.208,1949,5.891,1950,5.439,1951,6.577,1952,9.292,1953,9.292]],["title/interfaces/IKeyMap.html",[0,0.247,1954,4.075]],["body/interfaces/IKeyMap.html",[0,0.286,2,0.425,3,0.032,4,0.05,5,0.05,6,0.05,39,2.497,48,0.504,49,0.005,51,0.003,53,0.981,138,0.044,176,0.004,177,0.003,232,2.228,297,3.022,314,1.584,316,1.124,345,2.583,405,2.989,637,4.498,649,2.232,1387,2.908,1408,2.908,1658,4.712,1660,5.82,1954,6.87,1955,6.677,1956,5.103,1957,5.698,1958,5.698,1959,6.164,1960,6.677,1961,5.103,1962,5.782,1963,7.893,1964,5.103,1965,8.684,1966,5.103,1967,5.103,1968,3.825,1969,4.712,1970,5.103,1971,5.103,1972,6.677,1973,5.103]],["title/interfaces/ILabel.html",[0,0.247,1974,3.822]],["body/interfaces/ILabel.html",[0,0.36,2,0.536,3,0.041,4,0.063,5,0.063,6,0.048,8,0.312,9,0.858,48,0.496,49,0.005,51,0.004,57,0.364,96,0.191,138,0.056,176,0.004,177,0.004,816,6.433,832,4.564,849,4.89,1950,5.947,1974,6.691,1975,7.19]],["title/interfaces/IMapAPILoaderConfig.html",[0,0.247,1976,3.822]],["body/interfaces/IMapAPILoaderConfig.html",[0,0.201,2,0.299,3,0.023,4,0.035,5,0.035,6,0.027,8,0.174,9,0.582,21,1.254,27,0.824,48,0.527,49,0.005,50,1.758,51,0.002,57,0.32,58,1.055,59,3.139,96,0.183,138,0.054,176,0.003,177,0.002,232,2.66,235,1.148,248,2.811,249,3.318,254,1.673,260,1.199,262,1.516,293,1.254,297,2.222,298,1.946,302,1.084,314,2.414,316,0.791,317,0.736,345,2.242,349,1.107,363,1.292,532,2.948,598,2.048,888,4.296,1012,2.694,1483,2.811,1566,4.296,1660,5.646,1665,3.318,1745,4.536,1747,4.296,1794,4.834,1799,4.834,1962,3.113,1976,5.352,1977,3.113,1978,5.205,1979,2.811,1980,3.113,1981,6.27,1982,6.27,1983,6.79,1984,6.27,1985,3.594,1986,3.594,1987,3.318,1988,3.318,1989,4.536,1990,3.318,1991,2.811,1992,2.948,1993,3.594,1994,3.318,1995,3.594,1996,3.318,1997,3.594,1998,3.594,1999,3.594,2000,3.594,2001,3.594,2002,5.238,2003,3.594,2004,3.594,2005,3.594,2006,3.113,2007,6.79,2008,4.836,2009,5.238,2010,3.594,2011,3.594,2012,3.594,2013,3.594,2014,3.594,2015,3.594,2016,4.097,2017,3.594,2018,3.594,2019,3.594,2020,3.594,2021,3.594,2022,3.594,2023,3.594,2024,3.594,2025,3.594,2026,3.594,2027,3.594,2028,3.594,2029,3.594,2030,3.594,2031,3.594,2032,3.594,2033,3.594,2034,3.594,2035,3.594,2036,5.238,2037,6.18,2038,3.594,2039,5.238,2040,5.238,2041,3.594,2042,3.594,2043,5.238,2044,3.594,2045,3.594,2046,3.594,2047,3.594,2048,3.594,2049,3.594,2050,3.594,2051,3.594]],["title/interfaces/IPixel.html",[0,0.247,849,2.515]],["body/interfaces/IPixel.html",[0,0.366,2,0.544,3,0.041,4,0.064,5,0.064,6,0.049,8,0.317,9,0.866,49,0.005,51,0.004,57,0.367,138,0.057,176,0.004,177,0.004,460,1.433,849,4.443,1527,7.075,1613,7.469,2052,7.3]],["title/interfaces/IPoiObject.html",[0,0.247,1618,3.822]],["body/interfaces/IPoiObject.html",[0,0.413,2,0.417,3,0.032,4,0.049,5,0.049,6,0.038,8,0.243,9,0.732,13,3.164,32,4.943,34,2.606,48,0.543,49,0.005,50,3.833,51,0.004,56,1.348,57,0.347,83,4.108,96,0.248,113,4.337,114,2.834,119,2.663,122,3.484,138,0.064,176,0.004,177,0.003,262,1.229,286,2.663,288,3.37,291,3.37,317,0.704,359,1.18,427,3.001,433,2.787,455,3.116,460,1.182,649,2.19,704,4.823,1042,4.943,1055,4.108,1057,4.108,1058,4.108,1060,4.108,1062,4.108,1066,3.917,1068,3.917,1071,4.108,1076,4.108,1318,3.917,1319,4.237,1325,1.623,1326,2.663,1434,5.873,1441,4.108,1444,2.663,1445,2.663,1614,3.001,1615,4.624,1616,4.108,1617,4.624,1618,6.785]],["title/interfaces/ISize.html",[0,0.247,853,3.071]],["body/interfaces/ISize.html",[0,0.366,2,0.544,3,0.041,4,0.064,5,0.064,6,0.049,8,0.317,9,0.866,49,0.005,51,0.004,57,0.367,138,0.057,176,0.004,177,0.004,460,1.433,853,5.424,1634,7.075,1635,6.746,2053,7.3]],["title/interfaces/Icon.html",[0,0.247,24,2.578]],["body/interfaces/Icon.html",[0,0.411,2,0.493,3,0.037,4,0.058,5,0.058,6,0.06,8,0.287,24,4.66,39,4.332,45,1.43,49,0.005,51,0.003,52,2.094,53,1.411,55,1.202,56,1.019,57,0.279,58,0.784,60,1.43,75,5.13,96,0.218,101,4.121,102,4.633,138,0.064,176,0.004,177,0.003,317,0.832,359,1.396,1470,5.923,1471,5.742,1472,5.923,1473,8.339,1474,7.341,2054,8.196,2055,6.613,2056,6.613]],["title/injectables/IconService.html",[349,0.933,2057,3.62]],["body/injectables/IconService.html",[1,2.062,3,0.027,4,0.042,5,0.042,6,0.055,8,0.206,9,0.656,24,4.655,31,3.388,39,3.321,45,1.152,48,0.5,49,0.005,51,0.002,53,1.305,55,1.2,56,1.434,57,0.319,58,0.782,60,0.83,96,0.236,138,0.037,176,0.003,177,0.002,190,1.74,232,2.265,235,2.168,252,1.916,253,2.316,254,2.342,260,1.972,296,1.605,297,1.532,298,1.341,302,1.285,306,1.486,314,1.322,316,0.938,317,0.599,326,3.614,345,2.181,349,1.25,350,1.684,362,1.464,363,1.532,369,1.556,636,2.778,637,2.427,843,5.496,1158,4.781,1388,3.289,1394,3.289,1403,3.214,1471,5.309,1555,3.933,1968,5.088,2057,4.849,2058,4.26,2059,6.599,2060,4.756,2061,3.193,2062,3.933,2063,4.756,2064,4.756,2065,4.756,2066,8.185,2067,6.599,2068,4.756,2069,8.185,2070,4.756,2071,8.185,2072,4.756,2073,4.756,2074,4.756]],["title/interfaces/InfoWindow.html",[0,0.247,25,3.452]],["body/interfaces/InfoWindow.html",[0,0.333,2,0.358,3,0.027,4,0.042,5,0.042,6,0.064,8,0.208,25,5.332,26,2.223,27,1.771,39,4.008,45,1.158,48,0.356,49,0.005,51,0.002,52,2.448,53,1.629,55,1.493,56,1.266,57,0.346,58,0.973,60,1.652,76,3.719,96,0.218,97,1.697,98,1.476,99,1.192,101,2.987,105,2.987,138,0.052,176,0.003,177,0.002,190,1.754,262,1.458,317,0.603,359,1.012,460,1.179,816,3.219,818,4.95,819,6.371,820,6.793,821,5.754,822,6.035,823,4.286,824,5.944,825,5.488,826,5.944,870,5.488,874,5.488,881,4.649,1325,1.392,1437,3.999,1475,8.581,1476,4.294,1477,4.294,1478,5.944,1479,6.817,1480,4.875,2075,4.794,2076,4.794,2077,4.794,2078,4.794,2079,4.794,2080,4.794,2081,4.794,2082,4.794,2083,4.794]],["title/interfaces/InfoWindowOptions.html",[0,0.247,881,3.452]],["body/interfaces/InfoWindowOptions.html",[0,0.29,2,0.432,3,0.033,4,0.051,5,0.051,6,0.039,8,0.252,9,0.749,26,2.115,31,3.965,39,4.264,49,0.005,51,0.003,57,0.41,58,1.212,96,0.222,99,1.44,105,3.611,138,0.045,176,0.004,177,0.003,262,2.21,816,5.955,828,7.335,829,7.335,830,7.335,832,4.225,833,5.728,834,7.335,881,5.28,1329,2.443,1705,3.742,2084,5.795,2085,4.792,2086,5.795]],["title/injectables/InfoWindowService.html",[349,0.933,841,4.075]],["body/injectables/InfoWindowService.html",[1,1.81,3,0.039,4,0.035,5,0.035,6,0.058,8,0.172,9,0.576,21,1.81,24,2.071,25,5.866,26,0.944,27,1.547,31,3.061,39,3.301,45,1.011,48,0.368,49,0.005,51,0.002,53,1.489,55,1.522,56,1.235,57,0.374,58,0.95,60,1.315,96,0.24,105,3.609,138,0.031,176,0.003,177,0.002,190,1.448,232,2.585,235,1.959,252,1.681,254,2.155,260,2.046,293,2.973,296,1.336,297,1.275,298,1.117,302,1.07,303,1.524,306,1.237,314,1.101,316,0.781,317,0.498,326,1.608,345,2.007,349,1.097,350,1.402,361,2.017,362,1.219,363,1.275,366,2.624,367,1.425,368,1.425,369,1.295,375,1.894,378,1.425,395,2.396,404,1.669,405,2.464,406,1.701,407,1.701,408,1.524,455,2.582,823,3.74,832,1.886,833,4.865,841,4.789,843,5.058,849,2.021,881,5.278,883,7.152,987,2.071,1158,4.4,1387,3.495,1388,2.886,1390,3.109,1392,3.941,1394,2.886,1403,2.821,1405,2.071,1406,2.183,1408,2.021,1409,2.183,1410,3.383,2061,2.658,2062,3.274,2087,7.746,2088,3.546,2089,5.791,2090,3.959,2091,5.791,2092,3.959,2093,5.791,2094,3.959,2095,3.959,2096,4.492,2097,3.071,2098,5.791,2099,3.959,2100,3.959,2101,3.959,2102,3.959,2103,3.959]],["title/classes/KeyMap.html",[316,0.972,1959,4.075]],["body/classes/KeyMap.html",[0,0.212,3,0.024,4,0.037,5,0.037,6,0.064,8,0.184,9,0.604,39,3.116,45,1.061,48,0.517,49,0.005,51,0.002,52,1.082,53,1.626,55,1.413,56,1.198,57,0.361,58,0.921,60,1.576,138,0.033,176,0.003,177,0.002,232,2.561,262,0.93,296,2.051,297,3.006,314,1.177,316,0.835,345,2.406,394,2.215,396,3.029,405,3.083,460,0.608,637,3.967,649,3.045,822,3.11,1387,3.63,1408,2.161,1658,5.027,1660,6.003,1954,5.881,1955,8.55,1956,3.792,1959,6.428,1960,6.37,1961,6.37,1962,5.516,1963,6.962,1964,5.444,1965,8.089,1966,5.444,1967,5.444,1968,4.775,1969,6.428,1970,3.792,1971,6.962,1972,5.444,1973,6.962,2104,6.078,2105,4.233,2106,4.233,2107,4.233,2108,4.233,2109,4.233,2110,4.233,2111,4.233,2112,4.233,2113,4.233,2114,4.233,2115,4.233]],["title/injectables/LabelService.html",[349,0.933,2116,3.822]],["body/injectables/LabelService.html",[1,2.297,3,0.032,4,0.049,5,0.049,6,0.059,8,0.242,9,0.731,31,3.676,45,1.283,48,0.469,49,0.005,51,0.003,53,1.415,55,1.336,56,1.437,57,0.347,58,0.871,60,0.973,96,0.241,138,0.043,176,0.004,177,0.003,190,2.041,232,1.667,235,2.352,252,1.619,253,2.717,254,2.5,260,2.197,296,1.882,297,1.797,298,1.573,302,1.507,306,1.743,314,1.551,316,1.1,326,2.985,345,1.959,349,1.392,350,1.975,362,1.717,363,1.797,369,1.824,370,2.308,637,2.847,816,3.745,832,2.657,1158,5.105,1388,3.664,1394,3.664,1403,3.58,1974,7.235,2061,3.745,2097,4.327,2116,5.702,2117,4.996,2118,7.351,2119,5.578,2120,5.702,2121,5.578,2122,5.578]],["title/interfaces/LngLat.html",[0,0.247,26,1.175]],["body/interfaces/LngLat.html",[0,0.365,2,0.41,3,0.031,4,0.049,5,0.049,6,0.064,8,0.239,26,2.38,45,1.271,48,0.391,49,0.005,51,0.003,53,1.599,55,1.485,56,1.258,57,0.344,58,0.968,60,1.621,77,4.267,99,1.367,138,0.057,176,0.004,177,0.003,262,1.601,317,0.692,375,2.382,460,1.448,832,3.469,1424,5.614,1463,3.693,1481,8.489,1482,4.927,1483,6.09,1484,6.524,1485,7.314,1486,6.524,1487,4.927,1488,7.785,1489,7.785,1490,6.524,1737,3.811,1747,4.042,2123,6.524,2124,5.501,2125,5.501,2126,5.501,2127,5.501,2128,5.501,2129,5.501]],["title/injectables/LoggerService.html",[254,1.41,349,0.933]],["body/injectables/LoggerService.html",[3,0.032,4,0.05,5,0.05,6,0.063,8,0.244,45,1.289,48,0.538,49,0.005,51,0.003,52,2.239,53,1.567,55,1.593,56,1.35,57,0.369,58,1.038,60,1.529,96,0.149,138,0.044,176,0.004,177,0.003,235,2.507,252,2.395,254,2.113,302,1.518,316,1.108,349,1.399,350,1.988,1745,5.728,1746,5.728,1747,5.426,1749,6.615,1750,9.095,1752,6.615,1754,6.615,1756,6.615,1758,5.031,1759,5.031,1760,5.031,2130,5.617,2131,5.617,2132,5.617,2133,5.617,2134,5.617,2135,5.617,2136,5.617]],["title/injectables/MapAPILoaderService.html",[349,0.933,1991,3.452]],["body/injectables/MapAPILoaderService.html",[0,0.163,3,0.018,4,0.029,5,0.029,6,0.06,8,0.141,9,0.497,21,1.018,27,1.027,45,0.873,48,0.51,49,0.005,50,1.427,51,0.002,53,1.507,55,0.91,56,0.771,57,0.362,58,0.593,59,2.685,60,0.873,96,0.162,138,0.047,176,0.003,177,0.002,232,2.915,235,1.742,248,2.282,249,2.694,252,0.946,254,1.955,260,1.82,262,0.716,293,1.563,296,2.055,297,2.507,298,1.718,302,0.88,314,2.253,316,0.642,317,0.63,345,2.074,349,0.947,350,1.153,363,1.049,532,2.393,598,1.663,888,3.675,1012,2.187,1483,2.282,1566,3.675,1660,5.165,1665,2.694,1745,5.3,1747,5.02,1794,5.452,1799,5.452,1962,2.527,1976,4.724,1977,6.909,1978,6.392,1979,6.24,1980,2.527,1981,2.694,1982,2.694,1983,2.918,1984,2.694,1985,2.918,1986,2.918,1987,2.694,1988,2.694,1989,3.88,1990,2.694,1991,3.505,1992,3.675,1993,5.455,1994,4.137,1995,5.455,1996,4.137,1997,5.455,1998,5.455,1999,5.455,2000,5.455,2001,2.918,2002,5.455,2003,2.918,2004,2.918,2005,2.918,2006,5.3,2007,6.12,2008,4.137,2009,5.455,2010,2.918,2011,2.918,2012,2.918,2013,2.918,2014,2.918,2015,2.918,2016,3.505,2017,2.918,2018,2.918,2019,2.918,2020,2.918,2021,2.918,2022,2.918,2023,2.918,2024,2.918,2025,2.918,2026,4.481,2027,2.918,2028,2.918,2029,2.918,2030,2.918,2031,2.918,2032,2.918,2033,2.918,2034,2.918,2035,2.918,2036,4.481,2037,5.455,2038,2.918,2039,4.481,2040,4.481,2041,2.918,2042,2.918,2043,4.481,2044,2.918,2045,2.918,2046,2.918,2047,2.918,2048,2.918,2049,2.918,2050,2.918,2051,2.918,2137,5.002,2138,3.257,2139,5.002,2140,3.257,2141,3.257,2142,3.257,2143,3.257,2144,3.257,2145,3.257,2146,3.257,2147,3.257]],["title/injectables/MapAPIService.html",[349,0.933,1392,2.578]],["body/injectables/MapAPIService.html",[1,1.803,3,0.022,4,0.035,5,0.035,6,0.062,8,0.171,9,0.574,21,2.349,27,1.934,45,1.007,48,0.449,49,0.005,51,0.002,52,1.474,53,1.581,55,1.454,56,1.158,57,0.381,58,0.891,59,2.115,60,1.312,96,0.229,138,0.031,176,0.003,177,0.002,232,2.744,235,1.953,252,1.144,254,2.15,257,3.258,260,2.04,293,2.698,296,1.329,297,1.269,298,1.111,302,1.065,303,1.517,306,1.231,314,1.095,316,0.777,317,0.859,326,3.052,345,2.003,349,1.093,350,1.395,361,2.618,362,1.213,363,1.269,365,1.466,366,2.618,367,1.418,368,1.418,369,1.289,370,1.63,375,1.887,378,1.418,387,1.761,395,2.387,396,2.876,404,1.661,405,2.456,406,1.693,407,1.693,408,1.517,598,2.011,746,2.234,888,2.895,1387,3.485,1392,3.019,1405,4.804,1408,2.945,1492,5.83,1500,6.115,1977,7.123,1978,4.854,1979,2.76,1991,5.265,1992,4.239,2148,3.529,2149,6.827,2150,6.827,2151,5.77,2152,5.77,2153,7.515,2154,3.529,2155,5.77,2156,5.77,2157,3.94,2158,5.77,2159,3.94,2160,3.94,2161,3.94,2162,3.94,2163,3.94,2164,3.94,2165,5.77,2166,3.94,2167,3.529,2168,3.94,2169,3.94,2170,3.94,2171,3.94,2172,3.94,2173,3.94,2174,3.94]],["title/interfaces/MapOptions.html",[0,0.247,1492,3.822]],["body/interfaces/MapOptions.html",[0,0.176,2,0.262,3,0.02,4,0.031,5,0.031,6,0.024,8,0.153,9,0.527,26,1.695,48,0.527,49,0.005,51,0.002,57,0.428,58,1.238,96,0.093,99,0.874,138,0.027,164,5.878,176,0.003,177,0.002,262,2.276,427,3.815,428,4.031,460,1.32,752,5.513,999,4.772,1099,5.222,1329,1.482,1492,4.113,1498,4.749,1705,2.271,2175,3.516,2176,6.366,2177,6.366,2178,6.366,2179,6.366,2180,6.366,2181,6.366,2182,6.366,2183,6.366,2184,6.366,2185,6.831,2186,6.366,2187,6.366,2188,6.366,2189,6.366,2190,6.366,2191,6.366,2192,6.366,2193,6.366,2194,6.366,2195,6.366,2196,6.366,2197,6.366,2198,6.366,2199,6.366,2200,6.366,2201,6.366,2202,5.222,2203,6.366,2204,3.516]],["title/interfaces/MarkerClusterer.html",[0,0.247,29,3.62]],["body/interfaces/MarkerClusterer.html",[0,0.271,2,0.269,3,0.02,4,0.032,5,0.032,6,0.066,8,0.157,27,1.814,28,4.314,29,4.766,39,2.371,45,0.944,49,0.005,51,0.002,53,1.688,55,1.66,56,1.407,57,0.385,58,1.082,60,1.711,80,2.802,96,0.191,97,1.279,107,5.674,108,3.791,109,2.531,120,2.987,138,0.042,176,0.003,177,0.002,262,1.696,317,0.455,359,0.762,460,1.385,746,4.085,805,2.654,1325,1.048,1340,3.261,1350,2.325,1581,8.819,1582,3.235,1583,3.791,1584,3.235,1585,5.588,1586,4.846,1587,4.846,1588,6.452,1589,6.452,1590,6.452,1591,6.452,1592,6.452,1593,4.846,1594,4.846,1595,4.846,1596,4.846,1597,6.452,1598,4.846,1599,6.452,1600,4.846,1601,4.846,1602,6.452,1603,4.846,2202,2.654,2205,5.41,2206,5.41,2207,5.41,2208,5.41,2209,5.41,2210,5.41,2211,5.41,2212,5.41,2213,5.41,2214,5.41,2215,3.612,2216,3.612,2217,3.612,2218,3.612,2219,3.612,2220,3.612,2221,3.612,2222,3.612,2223,3.612,2224,3.612,2225,3.612,2226,3.612,2227,3.612,2228,3.612,2229,2.802,2230,3.612,2231,3.612,2232,3.612,2233,3.612,2234,3.612,2235,3.612]],["title/interfaces/MarkerClustererOptions.html",[0,0.247,1583,3.452]],["body/interfaces/MarkerClustererOptions.html",[0,0.378,2,0.433,3,0.033,4,0.051,5,0.051,6,0.039,8,0.252,9,0.751,28,3.89,49,0.005,51,0.003,52,1.484,57,0.405,58,1.192,59,4.052,96,0.2,108,5.288,138,0.059,176,0.004,177,0.003,262,2.073,460,1.425,805,6.523,1329,2.449,1332,3.203,1583,5.288,1585,4.506,1946,6.523,2229,6.886,2236,5.203,2237,7.342,2238,7.342,2239,7.342,2240,7.342,2241,7.342,2242,4.804,2243,5.203,2244,5.203,2245,6.242]],["title/injectables/MarkerClustererService.html",[349,0.933,2246,4.414]],["body/injectables/MarkerClustererService.html",[1,1.712,3,0.021,4,0.032,5,0.032,6,0.058,8,0.159,9,0.545,21,1.712,27,1.492,28,2.401,29,2.699,31,2.929,39,3.183,45,0.956,46,1.39,48,0.352,49,0.005,51,0.002,53,1.494,55,1.482,56,1.197,57,0.374,58,0.921,60,1.268,96,0.235,107,4.591,108,2.573,109,3.838,126,4.531,138,0.029,176,0.003,177,0.002,232,2.739,233,2.816,235,1.875,252,1.59,254,2.078,260,1.958,293,2.864,296,1.239,297,1.183,298,1.036,302,0.993,306,1.148,314,1.021,316,0.724,317,0.462,318,2.354,326,2.225,345,1.936,349,1.038,350,1.3,354,2.567,355,2.702,361,1.279,362,1.131,363,1.183,364,1.366,365,1.366,366,2.53,367,1.322,368,1.322,369,1.201,372,2.025,375,1.792,378,1.322,395,2.266,404,1.548,405,2.358,406,1.578,407,1.578,408,1.414,832,1.75,843,4.877,849,1.875,853,2.289,987,1.922,1158,4.243,1387,3.344,1388,2.731,1390,2.941,1392,3.8,1394,2.731,1403,2.668,1405,1.922,1406,2.025,1408,2.796,1409,2.025,1583,5.089,1731,2.849,1935,3.038,1946,5.337,1968,3.678,2061,2.466,2062,3.038,2246,4.907,2247,7.773,2248,7.773,2249,3.29,2250,5.479,2251,5.479,2252,3.673,2253,5.479,2254,3.673,2255,5.479,2256,3.673,2257,3.673,2258,3.673,2259,3.673,2260,5.479,2261,3.673,2262,3.673,2263,3.673,2264,3.673,2265,3.673,2266,3.673,2267,5.479,2268,3.673,2269,7.264,2270,3.673,2271,7.264,2272,3.673]],["title/interfaces/MarkerOptions.html",[0,0.247,968,3.071]],["body/interfaces/MarkerOptions.html",[0,0.216,2,0.321,3,0.024,4,0.038,5,0.038,6,0.029,8,0.187,9,0.612,24,4.902,26,1.869,27,1.864,31,3.503,48,0.487,49,0.005,51,0.002,57,0.423,58,1.231,96,0.22,99,1.071,138,0.033,176,0.003,177,0.002,262,2.21,426,4.577,428,4.444,429,4.723,437,4.577,460,1.237,816,5.261,832,3.732,833,5.061,968,3.836,999,2.893,1329,1.817,1380,2.2,1555,3.564,1579,3.86,1705,2.783,1783,5.261,1974,6.078,2085,3.564,2120,6.078,2273,4.31,2274,6.078,2275,6.48,2276,6.078,2277,5.49,2278,6.48,2279,5.757,2280,7.019,2281,6.48,2282,6.48,2283,4.31,2284,3.86]],["title/injectables/MarkerService.html",[349,0.933,2285,4.414]],["body/injectables/MarkerService.html",[1,1.812,3,0.022,4,0.035,5,0.035,6,0.056,8,0.172,9,0.577,21,1.812,24,3.944,27,1.648,28,3.304,31,3.064,45,1.012,48,0.368,49,0.005,51,0.002,53,1.442,55,1.458,56,1.162,57,0.365,58,0.893,60,1.196,96,0.24,138,0.031,176,0.003,177,0.002,232,2.651,235,1.961,252,1.683,254,2.157,260,2.048,293,2.913,296,1.956,297,1.868,298,1.119,302,1.072,306,1.239,314,1.103,316,0.782,317,0.499,326,1.611,345,1.826,349,1.098,350,1.404,361,1.381,362,1.221,363,1.277,366,2.626,367,1.427,368,1.427,369,1.297,375,1.896,378,1.427,395,2.399,404,1.672,405,2.466,406,1.704,407,1.704,408,1.527,832,1.889,849,2.024,968,4.698,987,2.075,1158,4.404,1387,3.498,1388,2.89,1390,3.112,1392,3.944,1394,2.89,1403,2.824,1405,2.075,1406,2.187,1408,2.024,1409,2.187,1410,2.317,1411,2.471,1414,2.471,1968,5.062,2016,4.062,2057,5.539,2061,2.663,2096,5.848,2097,3.076,2116,5.848,2120,5.316,2279,2.914,2285,5.193,2286,3.552,2287,5.798,2288,6.753,2289,3.966,2290,5.798,2291,3.966,2292,3.966,2293,3.552,2294,3.966,2295,7.539,2296,3.966,2297,6.753,2298,3.552,2299,7.539,2300,3.966,2301,3.966,2302,3.966]],["title/interfaces/MouseTool.html",[0,0.247,30,3.452]],["body/interfaces/MouseTool.html",[0,0.315,2,0.331,3,0.025,4,0.039,5,0.039,6,0.064,8,0.193,14,2.93,27,1.499,28,2.755,30,5.115,34,2.93,35,3.289,36,3.289,45,1.097,49,0.005,51,0.002,53,1.623,55,1.714,56,1.453,57,0.398,58,1.117,60,1.646,81,3.442,96,0.222,97,1.571,138,0.049,176,0.003,177,0.002,262,1.604,317,0.559,326,3.777,649,1.739,818,3.789,967,4.948,968,4.948,969,6.164,970,5.577,991,4.876,993,4.876,995,4.876,997,4.876,1001,4.876,1003,4.876,1005,4.876,1007,4.876,1009,4.876,1011,4.876,1020,5.631,1021,5.631,1022,5.631,1023,5.631,1325,2.305,1436,3.109,1543,3.67,1604,8.542,1605,3.975,1606,3.975,1607,3.442,2303,4.438,2304,4.438,2305,4.438,2306,4.438,2307,4.438,2308,4.438,2309,4.438,2310,4.438,2311,4.438,2312,4.438]],["title/modules/NgxAmapModule.html",[2313,4.075,2314,3.62]],["body/modules/NgxAmapModule.html",[3,0.029,4,0.022,5,0.022,6,0.028,14,1.913,28,1.798,45,0.442,49,0.005,51,0.001,53,0.436,55,0.461,56,0.391,57,0.107,58,0.3,60,0.442,96,0.262,112,2.557,115,2.147,138,0.032,176,0.002,177,0.001,190,0.927,220,6.039,223,3.015,254,1.48,256,3.623,277,3.015,302,0.685,304,1.776,307,7.283,308,2.27,316,0.5,345,0.675,355,1.527,364,0.943,365,1.527,411,6.333,412,3.394,579,3.799,580,2.875,591,3.183,612,3.623,613,2.875,628,3.183,683,3.799,684,1.966,689,3.183,740,6.333,741,2.096,802,6.686,809,2.096,843,2.755,885,2.27,929,2.096,935,7.128,937,7.128,938,2.875,940,7.128,943,7.128,946,7.128,948,7.128,949,7.128,951,7.128,953,7.128,955,7.128,957,6.333,959,3.799,960,3.183,961,1.966,973,3.183,1040,3.799,1048,3.183,1106,3.623,1107,1.966,1119,3.183,1132,2.096,1158,2.397,1199,2.27,1235,3.623,1236,1.966,1248,3.183,1276,3.623,1277,3.183,1282,3.183,1289,3.623,1290,1.966,1302,3.183,1654,3.394,1742,3.394,1794,2.875,1799,2.875,1976,4.611,1978,2.65,1979,1.776,1987,2.096,1988,2.096,1989,3.183,1991,2.875,2057,3.015,2116,3.183,2202,3.015,2313,2.096,2314,7.433,2315,2.096,2316,1.966,2317,4.632,2318,2.096,2319,3.676,2320,4.632,2321,2.27,2322,2.27,2323,2.27,2324,2.27,2325,2.096,2326,4.104,2327,2.535,2328,2.535,2329,4.104,2330,2.535,2331,4.104,2332,5.171,2333,4.632,2334,2.535,2335,2.535,2336,2.535,2337,2.535,2338,2.27,2339,2.535,2340,8.62,2341,4.104,2342,2.535,2343,2.535,2344,2.27,2345,2.535,2346,2.27,2347,2.535,2348,2.535,2349,2.27,2350,2.535,2351,2.535,2352,2.535,2353,2.535,2354,2.535,2355,2.535,2356,4.104,2357,2.27,2358,2.535,2359,2.535,2360,2.27,2361,2.535,2362,2.27,2363,2.535,2364,2.27,2365,2.535,2366,2.27,2367,2.535,2368,2.535,2369,4.104,2370,2.535,2371,2.535,2372,2.535,2373,4.104,2374,2.535,2375,2.535,2376,2.535]],["title/interfaces/Photo.html",[0,0.247,1679,3.182]],["body/interfaces/Photo.html",[0,0.365,2,0.543,3,0.041,4,0.064,5,0.064,6,0.049,8,0.316,9,0.864,48,0.536,49,0.005,51,0.004,57,0.366,138,0.057,176,0.004,177,0.004,1614,3.907,1679,5.611,1734,7.068,1783,6.459,2377,7.278]],["title/interfaces/Pixel.html",[0,0.247,31,2.203]],["body/interfaces/Pixel.html",[0,0.395,2,0.464,3,0.035,4,0.055,5,0.055,6,0.063,8,0.27,31,4.293,45,1.376,48,0.424,49,0.005,51,0.003,53,1.568,55,1.13,56,0.958,57,0.262,58,0.737,60,1.589,82,4.822,96,0.165,100,3.747,138,0.061,176,0.004,177,0.003,262,1.733,317,0.783,375,2.579,460,1.378,849,4.42,1424,5.881,1427,4.356,1527,4.568,1608,5.569,1609,5.141,1610,8.156,1611,8.156,1612,7.062,1613,4.822,2123,7.062,2378,6.217,2379,6.217,2380,6.217,2381,6.217]],["title/injectables/PixelService.html",[349,0.933,1158,2.878]],["body/injectables/PixelService.html",[1,2.18,3,0.029,4,0.045,5,0.045,6,0.059,8,0.224,9,0.694,31,4.169,45,1.217,48,0.501,49,0.005,51,0.003,53,1.458,55,1.437,56,1.497,57,0.373,58,0.937,60,1.217,96,0.225,138,0.04,176,0.004,177,0.003,190,2.552,235,2.261,252,1.497,253,2.511,254,2.423,260,2.085,262,1.133,296,1.74,297,1.661,298,1.454,302,1.393,306,1.611,314,1.434,316,1.017,317,0.649,326,2.094,345,2.257,349,1.321,350,1.825,362,1.587,363,1.661,369,1.687,370,2.133,460,1.216,462,3.33,636,4.074,637,2.632,849,4.759,1158,4.074,1388,3.476,1394,3.476,1403,3.397,1527,3.789,1613,4,2016,3.613,2382,4.619,2383,6.248,2384,6.975,2385,5.156,2386,6.975,2387,5.156,2388,4.619,2389,5.156,2390,5.156,2391,5.156,2392,5.156,2393,4.619]],["title/interfaces/PlaceSearch.html",[0,0.247,32,3.308]],["body/interfaces/PlaceSearch.html",[0,0.321,2,0.264,3,0.02,4,0.031,5,0.031,6,0.064,8,0.154,13,3.453,32,4.301,34,2.986,45,0.929,48,0.535,49,0.005,50,4.034,51,0.003,53,1.618,55,1.674,56,1.435,57,0.392,58,1.091,60,1.641,83,2.599,96,0.213,113,7.355,114,2.744,119,1.685,122,2.204,138,0.05,176,0.003,177,0.002,209,1.649,240,3.319,241,3.913,242,3.913,262,1.408,286,2.537,288,3.21,290,2.599,291,3.21,317,0.445,359,0.746,427,3.439,433,3.193,455,2.621,460,1.26,649,2.793,674,3.111,704,1.95,1042,3.576,1055,3.913,1057,3.913,1058,2.599,1060,3.913,1062,3.913,1066,3.731,1068,4.994,1071,3.913,1076,3.913,1077,4.77,1078,4.77,1079,4.77,1080,4.77,1081,4.77,1082,4.77,1083,4.77,1084,5.738,1089,3.168,1094,4.706,1099,2.599,1101,2.744,1318,3.731,1319,4.339,1325,1.027,1326,1.685,1434,2.375,1441,2.599,1444,1.685,1445,1.685,1614,5.09,1615,2.925,1616,2.599,1617,4.405,1618,6.468,1788,3.168,1789,3.168,2394,3.537,2395,3.537,2396,3.537,2397,3.537,2398,3.537,2399,3.537,2400,3.537,2401,3.537,2402,3.537,2403,3.537,2404,3.537,2405,3.537]],["title/interfaces/PlaceSearchOptions.html",[0,0.247,1042,3.308]],["body/interfaces/PlaceSearchOptions.html",[0,0.258,2,0.385,3,0.029,4,0.045,5,0.045,6,0.035,8,0.224,9,0.694,27,1.948,48,0.544,49,0.005,51,0.003,57,0.427,58,1.225,96,0.137,114,1.985,138,0.04,176,0.004,177,0.003,209,3.947,244,6.569,262,2.112,460,1.38,1042,4.683,1099,6.222,1101,6.569,1103,7.003,1329,2.174,1380,2.632,1561,4.619,1791,5.933,1839,5.933,1842,5.933,2406,5.156,2407,8.468,2408,8.468,2409,8.468,2410,6.975]],["title/injectables/PluginLoaderService.html",[349,0.933,355,1.833]],["body/injectables/PluginLoaderService.html",[1,2.273,3,0.031,4,0.048,5,0.048,6,0.058,8,0.238,9,0.723,27,1.127,45,1.269,46,3.286,48,0.466,49,0.005,51,0.003,53,1.404,55,1.322,56,1.392,57,0.344,58,0.862,60,0.958,96,0.23,138,0.043,176,0.004,177,0.003,232,1.64,235,2.334,248,3.845,252,1.593,254,2.485,260,2.438,293,2.273,296,1.852,297,1.768,298,1.548,302,1.483,314,1.526,316,1.082,317,0.691,345,1.938,349,1.377,350,1.943,355,2.705,362,1.69,363,1.768,364,3.231,365,2.042,369,1.795,370,2.27,387,2.454,598,2.801,888,5.343,1978,4.697,1979,3.845,1980,4.257,1991,6.084,1992,6.38,2006,5.641,2008,6.014,2154,4.916,2167,4.916,2411,7.778,2412,7.272,2413,7.272,2414,5.488,2415,5.488]],["title/interfaces/Poi.html",[0,0.247,148,2.717]],["body/interfaces/Poi.html",[0,0.201,2,0.299,3,0.023,4,0.035,5,0.035,6,0.027,8,0.174,9,0.582,26,2.199,48,0.558,49,0.005,51,0.002,56,1.168,57,0.431,96,0.23,98,1.235,99,0.997,138,0.031,148,3.224,176,0.003,177,0.002,205,4.724,210,5.09,262,1.849,400,4.569,460,0.99,704,4.18,1434,5.09,1614,2.154,1670,7.506,1737,3.966,1761,7.506,1776,7.04,1778,3.318,1907,7.506,1939,7.506,2416,4.013,2417,7.581,2418,7.581,2419,7.581,2420,7.581,2421,7.581,2422,7.581,2423,7.581,2424,7.581,2425,7.581,2426,7.581,2427,7.581,2428,7.506,2429,6.79,2430,7.581,2431,4.013,2432,4.013]],["title/interfaces/PoiList.html",[0,0.247,2433,4.075]],["body/interfaces/PoiList.html",[0,0.34,2,0.506,3,0.038,4,0.06,5,0.06,6,0.046,8,0.294,9,0.828,49,0.005,51,0.003,57,0.396,96,0.18,138,0.053,148,5.315,159,4.752,176,0.004,177,0.003,460,1.452,1101,7.286,1103,7.768,1332,5.179,1614,3.641,2433,6.884,2434,6.782,2435,8.413]],["title/interfaces/Polygon.html",[0,0.247,34,2.297]],["body/interfaces/Polygon.html",[0,0.372,2,0.342,3,0.026,4,0.04,5,0.04,6,0.066,8,0.199,13,3.192,26,1.772,27,1.742,34,3.463,45,1.122,49,0.005,51,0.002,52,2.475,53,1.667,55,1.542,56,1.307,57,0.371,58,1.005,60,1.69,85,3.555,96,0.214,97,1.622,98,1.411,99,1.139,119,2.183,138,0.058,176,0.003,177,0.002,262,1.413,317,0.577,359,0.967,417,3.923,418,3.754,420,3.271,422,4.007,423,3.876,425,3.271,455,2.547,460,1.066,497,3.132,499,2.855,500,2.935,502,2.397,569,3.077,676,2.183,969,5.628,1337,4.441,1339,5.643,1340,3.876,1341,5.318,1350,2.763,1353,4.505,1421,4.724,1425,3.876,1427,3.211,1619,3.79,1620,6.248,1621,4.105,1622,6.248,2436,4.582,2437,4.582,2438,4.582,2439,4.582,2440,4.582,2441,4.582,2442,4.582,2443,4.582,2444,4.582,2445,4.582,2446,4.582,2447,4.582]],["title/interfaces/PolygonOptions.html",[0,0.247,969,3.071]],["body/interfaces/PolygonOptions.html",[0,0.254,2,0.378,3,0.029,4,0.045,5,0.045,6,0.034,8,0.22,9,0.686,27,1.94,48,0.529,49,0.005,51,0.003,57,0.42,58,1.227,96,0.183,138,0.039,176,0.004,177,0.003,262,1.994,426,4.912,428,4.769,429,5.068,430,5.646,431,5.646,434,5.24,435,5.24,436,5.24,437,4.912,460,1.439,676,4.005,969,4.296,1329,2.137,1378,5.646,1379,5.646,1380,2.587,1620,6.523,2277,5.891,2448,5.069,2449,5.069]],["title/injectables/PolygonService.html",[349,0.933,2450,4.414]],["body/injectables/PolygonService.html",[1,1.855,3,0.023,4,0.036,5,0.036,6,0.061,8,0.178,9,0.59,21,1.855,27,1.669,33,2.552,34,4.073,45,1.036,46,1.55,48,0.375,49,0.005,51,0.002,53,1.57,55,1.54,56,1.252,57,0.385,58,0.963,60,1.418,96,0.232,138,0.032,176,0.003,177,0.002,232,2.726,235,1.997,252,1.723,254,2.19,260,2.086,293,3.072,296,1.382,297,1.319,298,1.155,302,1.107,306,1.28,314,1.139,316,0.808,317,0.747,326,1.663,345,2.165,349,1.124,350,1.45,354,2.735,355,2.847,361,1.426,362,1.261,363,1.319,364,1.523,365,1.523,366,2.666,367,1.474,368,1.474,369,1.339,375,1.941,378,1.474,395,2.455,404,1.726,405,2.512,406,1.76,407,1.76,408,1.577,969,4.769,987,2.143,1386,4.89,1387,3.563,1388,2.958,1389,4.158,1390,3.186,1391,5.362,1392,4.004,1394,2.958,1403,2.891,1405,2.143,1406,2.258,1408,2.09,1409,2.258,1410,3.467,1411,2.552,1414,2.552,1415,4.89,2450,5.316,2451,3.668,2452,5.935,2453,4.095,2454,5.316,2455,4.095,2456,5.316,2457,5.935,2458,4.095,2459,4.095,2460,4.095,2461,4.095,2462,4.095,2463,4.095,2464,3.668,2465,3.668]],["title/interfaces/Polyline.html",[0,0.247,35,2.578]],["body/interfaces/Polyline.html",[0,0.338,2,0.366,3,0.028,4,0.043,5,0.043,6,0.066,8,0.213,13,3.312,27,1.787,35,4.033,45,1.178,49,0.005,51,0.002,52,2.504,53,1.673,55,1.509,56,1.279,57,0.35,58,0.983,60,1.696,86,3.811,96,0.205,97,1.739,119,2.34,138,0.052,176,0.003,177,0.002,317,0.618,359,1.037,417,4.042,418,3.868,420,3.37,422,4.205,423,4.067,425,3.37,460,1.29,497,3.287,499,3.061,500,3.08,502,2.57,676,2.34,970,5.736,1325,1.426,1337,4.576,1338,6.438,1339,5.814,1340,4.067,1341,5.581,1350,2.9,1353,4.728,1607,3.811,1623,4.4,2466,4.912,2467,4.912,2468,4.912,2469,4.912,2470,4.912,2471,4.912,2472,4.912,2473,4.912,2474,4.912,2475,4.912,2476,4.912]],["title/interfaces/PolylineOptions.html",[0,0.247,970,3.071]],["body/interfaces/PolylineOptions.html",[0,0.245,2,0.365,3,0.028,4,0.043,5,0.043,6,0.033,8,0.212,9,0.669,27,1.924,48,0.526,49,0.005,51,0.002,57,0.423,58,1.231,96,0.13,138,0.038,176,0.003,177,0.002,262,2.153,426,4.839,429,4.993,434,5.162,435,5.162,436,5.162,437,4.839,460,1.45,676,3.946,970,4.193,1329,2.062,1374,6.851,1375,5.351,1376,5.351,1377,6.851,1378,5.562,1379,5.562,1380,2.497,2477,4.892,2478,7.421,2479,7.421]],["title/injectables/PolylineService.html",[349,0.933,2480,4.414]],["body/injectables/PolylineService.html",[1,1.852,3,0.023,4,0.036,5,0.036,6,0.061,8,0.177,9,0.589,21,1.852,27,1.668,33,2.547,35,4.57,45,1.034,46,1.547,48,0.375,49,0.005,51,0.002,53,1.57,55,1.539,56,1.251,57,0.384,58,0.962,60,1.417,96,0.232,138,0.032,176,0.003,177,0.002,232,2.725,235,1.995,252,1.721,254,2.188,260,2.084,293,3.072,296,1.379,297,1.317,298,1.153,302,1.105,306,1.278,314,1.137,316,0.806,317,0.746,326,1.66,345,2.163,349,1.123,350,1.447,354,2.732,355,2.845,361,1.424,362,1.259,363,1.317,364,1.521,365,1.521,366,2.664,367,1.471,368,1.471,369,1.337,375,1.939,378,1.471,395,2.452,404,1.723,405,2.509,406,1.757,407,1.757,408,1.574,970,4.766,987,2.139,1386,4.886,1387,3.559,1388,2.954,1389,4.153,1390,3.182,1391,5.358,1392,4.001,1394,2.954,1403,2.887,1405,2.139,1406,2.254,1408,2.087,1409,2.254,1410,3.462,1411,2.547,1414,2.547,1415,4.886,2454,5.309,2456,5.309,2464,3.662,2465,3.662,2480,5.309,2481,3.662,2482,5.927,2483,4.088,2484,4.088,2485,5.927,2486,4.088,2487,4.088,2488,4.088,2489,4.088,2490,4.088,2491,4.088]],["title/interfaces/ReGeocode.html",[0,0.247,1906,3.822]],["body/interfaces/ReGeocode.html",[0,0.312,2,0.464,3,0.035,4,0.055,5,0.055,6,0.042,8,0.27,9,0.784,26,1.483,48,0.465,49,0.005,51,0.003,57,0.396,96,0.249,98,1.914,99,1.545,138,0.048,140,4.174,147,3.747,148,3.428,176,0.004,177,0.003,202,7.657,400,3.747,678,5.664,1456,4.568,1735,7.772,1895,8.156,1906,6.116,2435,8.156,2492,5.141,2493,6.217,2494,9.106,2495,9.106,2496,7.531]],["title/interfaces/ReGeocodePoi.html",[0,0.247,2496,4.075]],["body/interfaces/ReGeocodePoi.html",[0,0.301,2,0.447,3,0.034,4,0.053,5,0.053,6,0.04,8,0.26,9,0.766,26,2.143,48,0.558,49,0.005,51,0.003,56,1.385,57,0.428,96,0.159,98,1.847,99,1.491,138,0.047,147,3.615,176,0.004,177,0.003,217,6.971,400,5.416,460,1.222,704,4.955,1146,6.296,1434,6.033,1737,4.701,2429,8.049,2492,4.961,2496,6.373,2497,5.998]],["title/interfaces/ReGeocodeResult.html",[0,0.247,1455,3.822]],["body/interfaces/ReGeocodeResult.html",[0,0.357,2,0.531,3,0.055,4,0.063,5,0.063,6,0.048,8,0.309,9,0.853,48,0.494,49,0.005,51,0.004,57,0.362,96,0.189,138,0.055,147,5.17,176,0.004,177,0.004,1331,4.295,1455,6.654,1456,5.236,1906,7.855,2492,5.893]],["title/interfaces/Rectangle.html",[0,0.247,36,2.578]],["body/interfaces/Rectangle.html",[0,0.327,2,0.348,3,0.026,4,0.041,5,0.041,6,0.065,8,0.203,13,3.902,26,1.79,27,1.755,36,3.927,45,1.138,49,0.005,51,0.002,52,2.483,53,1.658,55,1.553,56,1.316,57,0.36,58,1.012,60,1.681,87,3.624,96,0.227,97,1.654,98,1.438,99,1.161,119,2.225,138,0.051,176,0.003,177,0.002,262,1.433,317,0.588,359,0.986,417,3.956,418,3.786,420,3.299,422,4.062,423,3.928,425,3.299,455,2.573,460,0.936,497,3.175,499,2.911,500,2.975,502,2.444,569,3.137,1325,1.356,1337,4.479,1340,3.928,1350,2.801,1421,4.789,1425,3.928,1427,3.273,1444,2.225,1445,2.225,1622,6.301,1624,4.185,1625,6.672,1626,4.185,1627,5.838,2498,6.518,2499,4.672,2500,4.672,2501,4.672,2502,4.672,2503,4.672,2504,4.672,2505,4.672,2506,4.672,2507,4.672,2508,4.672,2509,4.672]],["title/interfaces/RectangleOptions.html",[0,0.247,1625,3.62]],["body/interfaces/RectangleOptions.html",[0,0.251,2,0.373,3,0.028,4,0.044,5,0.044,6,0.034,8,0.217,9,0.68,13,4.047,26,1.194,27,1.934,48,0.528,49,0.005,51,0.003,57,0.42,58,1.226,96,0.207,99,1.244,138,0.039,176,0.003,177,0.003,262,1.987,426,4.886,428,4.744,429,5.041,430,5.616,431,5.616,434,5.212,435,5.212,436,5.212,437,4.886,460,1.437,1329,2.11,1378,5.616,1379,5.616,1380,2.555,1625,5.022,1705,3.232,2277,5.86,2510,5.005,2511,5.005]],["title/injectables/RectangleService.html",[349,0.933,2512,4.414]],["body/injectables/RectangleService.html",[1,1.852,3,0.023,4,0.036,5,0.036,6,0.061,8,0.177,9,0.589,21,1.852,27,1.668,36,4.57,37,2.64,45,1.034,46,1.547,48,0.375,49,0.005,51,0.002,53,1.57,55,1.539,56,1.251,57,0.384,58,0.962,60,1.417,96,0.232,138,0.032,176,0.003,177,0.002,232,2.725,235,1.995,252,1.721,254,2.188,260,2.084,293,3.072,296,1.379,297,1.317,298,1.153,302,1.105,306,1.278,314,1.137,316,0.806,317,0.746,326,1.66,345,2.163,349,1.123,350,1.447,354,2.732,355,2.845,361,1.424,362,1.259,363,1.317,364,1.521,365,1.521,366,2.664,367,1.471,368,1.471,369,1.337,375,1.939,378,1.471,395,2.452,404,1.723,405,2.509,406,1.757,407,1.757,408,1.574,987,2.139,1386,4.886,1387,3.559,1388,2.954,1389,4.153,1390,3.182,1391,5.358,1392,4.001,1394,2.954,1403,2.887,1405,2.139,1406,2.254,1408,2.087,1409,2.254,1410,3.462,1411,2.547,1414,2.547,1415,4.886,1625,5.619,2512,5.309,2513,3.662,2514,5.927,2515,4.088,2516,5.927,2517,4.088,2518,5.927,2519,5.927,2520,4.088,2521,4.088,2522,4.088,2523,4.088,2524,4.088,2525,4.088,2526,4.088,2527,4.088]],["title/interfaces/RenderObject.html",[0,0.247,2245,4.075]],["body/interfaces/RenderObject.html",[0,0.404,2,0.48,3,0.036,4,0.057,5,0.057,6,0.043,8,0.279,9,0.801,28,4.449,49,0.005,51,0.003,52,1.644,57,0.371,96,0.214,108,5.645,138,0.063,176,0.004,177,0.003,262,1.771,460,1.391,805,4.728,1329,2.712,1332,5.084,1583,4.508,1585,7.152,1946,5.92,2229,4.991,2236,5.764,2237,5.322,2238,5.322,2239,5.322,2240,5.322,2241,5.322,2242,5.322,2243,5.764,2244,5.764,2245,7.275]],["title/interfaces/RideRoute.html",[0,0.247,2528,4.075]],["body/interfaces/RideRoute.html",[0,0.349,2,0.519,3,0.039,4,0.061,5,0.061,6,0.047,8,0.302,9,0.841,49,0.005,51,0.004,57,0.384,96,0.185,138,0.054,167,5.399,176,0.004,177,0.004,460,1.417,1268,5.374,1737,4.958,1804,5.756,1806,7.837,2528,6.994,2529,6.234,2530,7.837,2531,6.234]],["title/interfaces/RideStep.html",[0,0.247,2530,4.075]],["body/interfaces/RideStep.html",[0,0.295,2,0.438,3,0.033,4,0.052,5,0.052,6,0.039,8,0.255,9,0.757,26,2.372,48,0.548,49,0.005,51,0.003,57,0.419,96,0.156,98,1.81,99,1.461,138,0.046,176,0.004,177,0.003,460,1.358,676,4.248,678,5.375,1268,5.058,1737,4.666,1811,4.32,1812,6.249,1813,6.553,1815,6.553,1816,6.249,1817,6.553,1818,6.553,2529,5.267,2530,6.292]],["title/interfaces/Riding.html",[0,0.247,38,3.452]],["body/interfaces/Riding.html",[0,0.382,2,0.44,3,0.033,4,0.052,5,0.052,6,0.06,8,0.256,38,6.255,45,1.33,49,0.005,50,4.149,51,0.004,53,1.454,55,1.386,56,1.174,57,0.321,58,0.903,60,1.474,89,4.572,96,0.237,114,3.645,138,0.059,176,0.004,177,0.003,317,0.742,359,1.244,455,3.303,634,3.343,635,3.936,649,3.498,672,3.89,1110,5.339,1114,4.13,1319,4.491,1325,1.711,1326,2.808,1444,2.808,1445,2.808,1447,4.922,1628,5.28,1629,5.28,1831,4.572,2532,5.895,2533,5.895,2534,5.895]],["title/interfaces/RidingOptions.html",[0,0.247,1110,3.452]],["body/interfaces/RidingOptions.html",[0,0.31,2,0.461,3,0.035,4,0.055,5,0.055,6,0.042,8,0.268,9,0.782,27,2.025,48,0.464,49,0.005,51,0.003,57,0.411,58,1.212,96,0.164,138,0.048,176,0.004,177,0.003,262,2.188,680,5.664,1110,5.506,1329,2.607,1375,5.87,1376,5.87,1380,3.157,1839,6.368,1841,6.678,1842,6.368,2535,6.185]],["title/interfaces/RidingResult.html",[0,0.247,1114,3.452]],["body/interfaces/RidingResult.html",[0,0.306,2,0.455,3,0.053,4,0.054,5,0.054,6,0.041,8,0.265,9,0.775,26,2.317,48,0.461,49,0.005,51,0.003,57,0.41,96,0.228,98,1.88,99,1.518,112,3.805,138,0.047,148,5.356,159,4.278,166,4.736,176,0.004,177,0.003,460,1.233,635,4.216,672,4.617,1114,5.461,1331,3.68,1332,4.988,1845,7.017,1846,7.481,1847,7.017,2528,7.481,2531,5.469,2536,6.106]],["title/interfaces/Road.html",[0,0.247,678,2.97]],["body/interfaces/Road.html",[0,0.332,2,0.495,3,0.038,4,0.059,5,0.059,6,0.045,8,0.288,9,0.816,26,2.223,48,0.541,49,0.005,51,0.003,56,1.436,57,0.404,96,0.176,98,2.041,99,1.648,138,0.051,176,0.004,177,0.003,460,1.28,678,4.948,704,5.139,1146,6.529,1434,6.257,1737,4.876,2537,6.631]],["title/interfaces/Scenic.html",[0,0.247,2428,4.075]],["body/interfaces/Scenic.html",[0,0.277,2,0.412,3,0.031,4,0.049,5,0.049,6,0.037,8,0.24,9,0.727,48,0.564,49,0.005,51,0.003,57,0.423,96,0.147,138,0.043,176,0.004,177,0.003,609,5.846,1614,2.967,1672,6.754,1673,6.754,1675,7.201,1677,6.101,1678,6.754,1679,5.848,1769,7.799,1771,7.799,1772,7.799,2428,6.042,2538,5.526,2539,8.708,2540,8.708,2541,8.708,2542,8.708]],["title/interfaces/SearchResult.html",[0,0.247,1616,3.62]],["body/interfaces/SearchResult.html",[0,0.333,2,0.496,3,0.055,4,0.059,5,0.059,6,0.045,8,0.289,9,0.818,48,0.525,49,0.005,51,0.003,57,0.393,96,0.218,138,0.052,148,3.667,160,5.956,162,5.956,176,0.004,177,0.003,209,3.099,1331,4.008,1614,3.57,1616,6.042,1727,7.715,2433,8.27,2543,9.328,2544,9.328]],["title/interfaces/Segment.html",[0,0.247,2545,4.075]],["body/interfaces/Segment.html",[0,0.336,2,0.5,3,0.038,4,0.059,5,0.059,6,0.045,8,0.291,9,0.822,48,0.526,49,0.005,51,0.003,57,0.405,138,0.052,176,0.004,177,0.003,460,1.405,999,4.502,1268,5.306,1737,4.895,1816,6.555,2545,6.837,2546,6.706,2547,9.356,2548,9.356,2549,6.706,2550,6.706]],["title/interfaces/Size.html",[0,0.247,39,2.159]],["body/interfaces/Size.html",[0,0.409,2,0.489,3,0.037,4,0.058,5,0.058,6,0.062,8,0.285,39,3.888,45,1.423,48,0.438,49,0.005,51,0.003,53,1.528,60,1.549,90,5.087,96,0.174,101,4.087,138,0.063,176,0.004,177,0.003,317,0.826,375,2.667,460,1.397,853,5.529,1424,5.995,1630,5.874,1631,5.874,1632,8.315,1633,8.315,1634,4.819,1635,4.595,2551,6.558,2552,6.558,2553,6.558]],["title/injectables/SizeService.html",[349,0.933,843,3.308]],["body/injectables/SizeService.html",[1,2.18,3,0.029,4,0.045,5,0.045,6,0.059,8,0.224,9,0.694,39,4.086,45,1.217,48,0.501,49,0.005,51,0.003,53,1.458,55,1.437,56,1.497,57,0.373,58,0.937,60,1.217,96,0.225,138,0.04,176,0.004,177,0.003,190,2.552,235,2.261,252,1.497,253,2.511,254,2.423,260,2.085,262,1.133,296,1.74,297,1.661,298,1.454,302,1.393,306,1.611,314,1.434,316,1.017,317,0.649,326,2.094,345,2.257,349,1.321,350,1.825,362,1.587,363,1.661,369,1.687,370,2.133,460,1.216,462,3.33,636,4.074,637,2.632,843,4.683,853,5.81,1388,3.476,1394,3.476,1403,3.397,1634,3.789,1635,3.613,2016,3.613,2383,6.248,2388,4.619,2393,4.619,2554,4.619,2555,6.975,2556,5.156,2557,6.975,2558,5.156,2559,5.156,2560,5.156,2561,5.156,2562,5.156]],["title/interfaces/TMC.html",[0,0.247,1822,3.822]],["body/interfaces/TMC.html",[0,0.427,2,0.448,3,0.034,4,0.053,5,0.053,6,0.04,8,0.261,9,0.768,26,2.145,48,0.55,49,0.005,51,0.003,56,0.927,57,0.359,96,0.205,98,1.851,99,1.495,115,4.46,138,0.066,163,4.037,176,0.004,177,0.003,205,3.747,210,4.037,389,4.105,460,1.39,676,2.864,678,3.624,1268,3.41,1737,4.867,1803,4.665,1807,4.665,1808,4.665,1809,4.418,1811,4.418,1812,4.213,1813,4.418,1814,4.973,1815,4.418,1816,4.213,1817,4.418,1818,4.418,1819,4.973,1820,4.973,1821,5.988,1822,6.613,1823,4.973,1824,7.439]],["title/interfaces/Text.html",[0,0.247,40,2.97]],["body/interfaces/Text.html",[0,0.209,2,0.192,3,0.015,4,0.023,5,0.023,6,0.066,8,0.181,24,3.877,26,1.994,27,1.522,31,3.149,40,3.618,45,0.726,48,0.492,49,0.005,51,0.001,52,2.575,53,1.7,55,1.65,56,1.399,57,0.383,58,1.076,59,2.234,60,1.724,91,2,96,0.175,97,0.913,98,0.794,99,0.641,100,1.554,102,1.806,138,0.032,176,0.002,177,0.001,190,1.914,262,2.013,317,0.325,359,0.544,417,2.924,420,2.438,422,2.593,425,2.438,428,1.462,460,1.352,497,2.027,499,1.607,674,1.506,676,1.228,746,3.405,821,4.206,825,3.441,832,1.228,1137,4.206,1141,3.441,1189,2.915,1325,0.748,1340,2.508,1350,1.788,1437,2.508,1480,3.057,1544,3.441,1545,4.965,1546,3.441,1547,4.965,1548,3.441,1551,4.965,1552,3.441,1553,4.965,1557,3.441,1558,4.965,1559,3.441,1562,3.441,1563,2.132,1564,5.825,1565,5.825,1566,4.411,1567,4.327,1568,3.441,1569,4.965,1570,4.965,1571,4.965,1572,3.441,1573,4.965,1574,3.441,1575,4.965,1576,3.441,1577,4.965,1636,2.31,1637,3.057,1638,2.31,1639,5.378,1640,3.727,1641,3.727,1783,1.731,2274,2,2276,2,2277,1.806,2563,4.161,2564,4.161,2565,4.161,2566,4.161,2567,4.161,2568,4.161,2569,4.161,2570,4.161,2571,4.161,2572,4.161,2573,4.161,2574,4.161,2575,4.161,2576,2.578,2577,2.578,2578,2.578,2579,2.578,2580,2.578,2581,2.578,2582,2.578,2583,2.578,2584,2.578,2585,2.578,2586,2.578,2587,2.578,2588,2.578,2589,2.578,2590,2.578,2591,2.578,2592,2.578,2593,2.578,2594,2.578,2595,2.578,2596,2.578,2597,2.578,2598,2.578,2599,2.578,2600,2.578,2601,2.578,2602,2.578,2603,2.578,2604,2.578,2605,2.578,2606,2.578,2607,2.578,2608,2.578,2609,2.578,2610,2.578,2611,2.578,2612,2.578]],["title/interfaces/TextOptions.html",[0,0.247,1637,3.62]],["body/interfaces/TextOptions.html",[0,0.215,2,0.32,3,0.024,4,0.038,5,0.038,6,0.029,8,0.186,9,0.611,24,4.093,26,1.866,27,1.862,31,3.498,40,4.715,48,0.534,49,0.005,51,0.002,57,0.424,58,1.232,96,0.208,99,1.067,109,5.481,138,0.033,176,0.003,177,0.002,262,2.209,426,4.57,428,4.437,429,4.715,437,4.57,460,1.236,832,3.726,833,5.053,1329,1.81,1380,2.192,1637,4.512,1705,2.773,1783,5.253,2085,3.551,2274,6.068,2275,6.47,2276,6.068,2277,5.481,2278,6.47,2279,5.748,2281,6.47,2282,6.47,2284,3.846,2613,4.294,2614,7.007,2615,7.007,2616,7.007]],["title/injectables/TextService.html",[349,0.933,2617,4.414]],["body/injectables/TextService.html",[1,1.89,3,0.024,4,0.037,5,0.037,6,0.057,8,0.182,9,0.601,21,1.89,24,4.053,27,1.686,31,3.167,40,4.669,45,1.055,48,0.381,49,0.005,51,0.002,53,1.472,55,1.492,56,1.194,57,0.371,58,0.918,60,1.236,96,0.239,138,0.033,176,0.003,177,0.002,232,2.632,235,2.027,252,1.755,254,2.217,260,2.117,293,2.948,296,2.041,297,1.948,298,1.185,302,1.136,306,1.314,314,1.169,316,0.829,317,0.529,326,1.707,345,1.888,349,1.145,350,1.488,361,1.464,362,1.294,363,1.354,366,2.698,367,1.512,368,1.512,369,1.375,375,1.978,378,1.512,395,2.502,404,1.772,405,2.549,406,1.806,407,1.806,408,1.618,832,2.002,849,2.145,987,2.199,1158,4.525,1387,3.616,1388,3.014,1390,3.246,1392,4.053,1394,3.014,1403,2.946,1405,2.199,1406,2.318,1408,2.145,1409,2.318,1410,2.455,1411,2.619,1414,2.619,1637,5.692,1968,4.06,2016,4.237,2057,5.692,2061,2.822,2096,6.009,2097,3.26,2279,3.088,2288,6.939,2293,3.765,2297,6.939,2298,3.765,2617,5.417,2618,3.765,2619,6.048,2620,4.203,2621,6.048,2622,4.203,2623,4.203,2624,4.203,2625,4.203]],["title/interfaces/Tip.html",[0,0.247,1334,4.075]],["body/interfaces/Tip.html",[0,0.356,2,0.53,3,0.04,4,0.063,5,0.063,6,0.048,8,0.308,9,0.852,48,0.547,49,0.005,51,0.004,56,1.47,57,0.388,115,4.993,138,0.055,176,0.004,177,0.004,205,5.946,1334,7.082,2626,7.105]],["title/interfaces/ToolBar.html",[0,0.247,41,3.452]],["body/interfaces/ToolBar.html",[0,0.343,2,0.374,3,0.028,4,0.044,5,0.044,6,0.066,8,0.218,26,1.858,31,4.044,41,5.459,45,1.195,49,0.005,51,0.003,52,2.604,53,1.693,55,0.912,56,0.773,57,0.211,58,0.594,60,1.716,92,3.891,96,0.207,98,1.544,99,1.247,100,3.023,138,0.053,176,0.003,177,0.003,317,0.631,359,1.058,420,3.4,425,3.4,733,6.151,832,2.389,1136,6.924,1137,5.865,1138,6.924,1139,6.924,1140,6.924,1141,5.661,1142,6.924,1143,6.924,1144,6.924,1189,4.796,1197,4.796,1325,1.456,1642,4.492,1643,4.492,2627,5.016,2628,5.016,2629,5.016,2630,5.016,2631,5.016,2632,5.016,2633,5.016,2634,5.016,2635,5.016,2636,5.016,2637,5.016,2638,5.016]],["title/injectables/ToolBarService.html",[349,0.933,1157,4.075]],["body/injectables/ToolBarService.html",[1,1.883,3,0.024,4,0.037,5,0.037,6,0.059,8,0.182,9,0.599,21,1.883,27,1.587,41,5.415,45,1.051,46,1.582,48,0.379,49,0.005,51,0.002,53,1.514,55,1.489,56,1.191,57,0.379,58,0.916,60,1.233,96,0.239,118,3.891,138,0.032,176,0.003,177,0.002,232,2.782,233,3.035,235,2.021,252,1.749,254,2.211,260,2.111,293,3.003,296,1.411,297,1.347,298,1.179,302,1.13,306,1.307,314,1.675,316,0.825,317,0.526,318,2.589,326,1.698,345,1.882,349,1.141,350,1.48,354,2.767,355,2.875,361,1.456,362,1.287,363,1.347,364,1.555,365,1.555,366,2.692,367,1.504,368,1.504,369,1.368,372,2.305,375,1.971,378,1.504,395,2.492,404,1.763,405,2.541,406,1.797,407,1.797,408,1.61,784,4.426,832,1.992,987,2.188,1157,4.982,1158,4.514,1197,5.415,1387,3.605,1388,3.003,1390,3.234,1392,4.043,1394,3.003,1403,2.934,1405,2.188,1406,2.305,1408,3.075,1409,2.305,1410,2.442,1935,3.458,1968,2.807,2061,2.807,2096,5.995,2639,3.745,2640,7.063,2641,6.025,2642,4.181,2643,6.025,2644,4.181,2645,4.181,2646,4.181,2647,4.181,2648,4.181,2649,4.181,2650,4.181,2651,4.181,2652,4.181]],["title/interfaces/ToolbarOptions.html",[0,0.247,1197,3.452]],["body/interfaces/ToolbarOptions.html",[0,0.275,2,0.409,3,0.031,4,0.048,5,0.048,6,0.037,8,0.238,9,0.723,27,1.127,28,3.805,48,0.438,49,0.005,51,0.003,57,0.414,58,1.218,96,0.216,138,0.043,176,0.004,177,0.003,262,2.264,832,4.136,833,5.608,849,4.432,1145,7.182,1146,6.084,1147,7.182,1148,7.182,1149,7.182,1150,7.182,1151,7.182,1152,7.182,1197,5.095,1329,2.313,1380,2.801,1609,4.539,2242,4.539,2653,5.488]],["title/interfaces/Transfer.html",[0,0.247,42,3.308]],["body/interfaces/Transfer.html",[0,0.334,2,0.36,3,0.027,4,0.043,5,0.043,6,0.064,8,0.209,42,5.529,45,1.163,48,0.525,49,0.005,50,3.916,51,0.003,53,1.607,55,1.665,56,1.412,57,0.386,58,1.085,60,1.629,93,3.741,96,0.219,114,3.441,138,0.052,176,0.003,177,0.002,209,3.106,240,4.152,286,3.174,317,0.607,359,1.018,455,3.14,634,2.735,635,3.558,639,4.304,649,3.226,657,3.779,659,4.669,662,5.169,672,3.401,674,2.817,680,3.005,777,4.601,1239,4.669,1243,3.379,1257,5.169,1259,5.169,1263,5.969,1264,5.969,1268,2.735,1319,4.27,1325,1.4,1326,2.297,1444,2.297,1445,2.297,1447,4.304,1644,4.32,1645,4.32,1831,3.741,2654,4.823,2655,4.823,2656,4.823,2657,4.823,2658,4.823,2659,4.823,2660,4.823,2661,4.823]],["title/interfaces/TransferOptions.html",[0,0.247,1239,3.452]],["body/interfaces/TransferOptions.html",[0,0.278,2,0.414,3,0.031,4,0.049,5,0.049,6,0.037,8,0.241,9,0.729,27,1.98,48,0.537,49,0.005,51,0.003,57,0.418,58,1.224,96,0.147,138,0.043,176,0.004,177,0.003,209,4.066,262,2.196,680,5.436,1239,5.134,1329,2.34,1375,5.634,1376,5.634,1380,2.834,1791,6.112,1839,6.112,1841,6.409,1842,6.112,2662,5.552,2663,8.724,2664,8.724]],["title/interfaces/TransferPlan.html",[0,0.247,2665,4.075]],["body/interfaces/TransferPlan.html",[0,0.291,2,0.433,3,0.033,4,0.051,5,0.051,6,0.039,8,0.252,9,0.751,26,2.117,49,0.005,51,0.003,57,0.418,96,0.2,98,1.788,99,1.444,138,0.045,176,0.004,177,0.003,262,1.843,460,1.486,676,4.228,1268,5.034,1737,4.645,1765,7.952,2545,7.61,2665,6.242,2666,5.203,2667,5.809,2668,8.878,2669,8.878,2670,8.878,2671,8.878,2672,8.878,2673,8.878]],["title/interfaces/TransferResult.html",[0,0.247,1243,3.452]],["body/interfaces/TransferResult.html",[0,0.306,2,0.455,3,0.053,4,0.054,5,0.054,6,0.041,8,0.265,9,0.775,26,2.317,42,4.099,48,0.461,49,0.005,51,0.003,57,0.41,96,0.228,98,1.88,99,1.518,112,3.805,138,0.047,148,5.356,159,4.278,170,5.469,176,0.004,177,0.003,460,1.233,635,4.216,672,4.617,1243,5.461,1331,3.68,1845,7.017,1847,7.017,1848,8.102,2665,7.481,2666,5.469,2674,9.046]],["title/interfaces/TruckDriving.html",[0,0.247,43,3.452]],["body/interfaces/TruckDriving.html",[0,0.38,2,0.436,3,0.033,4,0.052,5,0.052,6,0.06,8,0.254,18,4.43,26,1.396,43,5.896,45,1.324,48,0.508,49,0.005,50,3.688,51,0.004,53,1.449,55,1.379,56,1.169,57,0.32,58,0.899,60,1.469,94,4.539,96,0.245,98,1.801,99,1.454,114,3.24,138,0.059,176,0.004,177,0.003,213,3.929,317,0.737,359,1.235,455,2.006,460,1.208,622,3.527,649,3.488,655,4.898,663,5.883,676,3.612,1278,5.314,1285,4.839,1319,4.149,1325,1.699,1326,2.787,1444,2.787,1445,2.787,1646,7.974,1647,5.241,1648,5.241,2675,5.851,2676,5.851,2677,5.851]],["title/interfaces/TruckDrivingOptions.html",[0,0.247,1278,3.452]],["body/interfaces/TruckDrivingOptions.html",[0,0.241,2,0.358,3,0.027,4,0.042,5,0.042,6,0.032,8,0.209,9,0.661,18,2.806,27,1.916,39,3.602,48,0.525,49,0.005,51,0.002,57,0.423,58,1.232,96,0.127,138,0.037,176,0.003,177,0.002,213,5.519,262,2.146,460,1.464,680,5.122,1278,4.656,1329,2.025,1375,5.309,1376,5.309,1380,2.452,1634,6.04,1635,5.759,1791,5.759,1839,5.759,1841,6.04,1842,5.759,1843,7.363,2006,6.377,2678,4.804,2679,8.22,2680,8.22]],["title/classes/Utils.html",[309,3.308,316,0.972]],["body/classes/Utils.html",[3,0.037,4,0.058,5,0.058,6,0.055,8,0.286,45,1.425,48,0.477,49,0.005,51,0.003,53,1.132,55,1.485,56,1.013,57,0.344,58,0.779,60,1.148,138,0.051,140,4.415,176,0.004,177,0.003,309,5.484,314,1.828,316,1.297,326,3.317,345,1.752,394,3.441,405,3.197,637,3.357,1012,4.415,1654,7.348,1969,7.348,2681,6.577,2682,8.168,2683,8.168,2684,6.577,2685,6.577,2686,8.885,2687,6.577]],["title/interfaces/ViaCity.html",[0,0.247,1821,3.822]],["body/interfaces/ViaCity.html",[0,0.424,2,0.441,3,0.033,4,0.052,5,0.052,6,0.04,8,0.257,9,0.759,26,2.131,48,0.552,49,0.005,51,0.003,56,1.377,57,0.377,96,0.203,98,1.819,99,1.469,115,4.84,138,0.066,163,3.967,176,0.004,177,0.003,205,5.568,210,5.999,389,2.697,460,1.328,676,2.815,678,3.562,1268,3.351,1737,3.993,1803,4.584,1807,4.584,1808,4.584,1809,4.342,1811,4.342,1812,4.14,1813,4.342,1814,4.887,1815,4.342,1816,4.14,1817,4.342,1818,4.342,1819,4.887,1820,4.887,1821,6.558,1822,5.921,1823,7.39,1824,4.887]],["title/interfaces/WalkRoute.html",[0,0.247,2688,4.075]],["body/interfaces/WalkRoute.html",[0,0.349,2,0.519,3,0.039,4,0.061,5,0.061,6,0.047,8,0.302,9,0.841,49,0.005,51,0.004,57,0.384,96,0.185,138,0.054,167,5.399,176,0.004,177,0.004,460,1.417,1268,5.374,1737,4.958,1804,5.756,1806,7.837,2688,6.994,2689,6.234,2690,7.837,2691,6.234]],["title/interfaces/WalkStep.html",[0,0.247,2690,4.075]],["body/interfaces/WalkStep.html",[0,0.295,2,0.438,3,0.033,4,0.052,5,0.052,6,0.039,8,0.255,9,0.757,26,2.372,48,0.548,49,0.005,51,0.003,57,0.419,96,0.156,98,1.81,99,1.461,138,0.046,176,0.004,177,0.003,460,1.358,676,4.248,678,5.375,1268,5.058,1737,4.666,1811,4.32,1812,6.249,1813,6.553,1815,6.553,1816,6.249,1817,6.553,1818,6.553,2689,5.267,2690,6.292]],["title/interfaces/Walking.html",[0,0.247,44,3.452]],["body/interfaces/Walking.html",[0,0.37,2,0.418,3,0.032,4,0.049,5,0.049,6,0.061,8,0.243,26,1.337,44,6.134,45,1.287,49,0.005,50,4.092,51,0.004,53,1.507,55,1.498,56,1.27,57,0.347,58,0.976,60,1.528,95,4.347,96,0.241,98,1.725,99,1.393,114,3.595,138,0.057,176,0.004,177,0.003,317,0.705,359,1.183,455,3.264,634,3.178,635,3.841,649,3.43,657,4.181,659,5.166,672,3.764,674,3.274,1293,5.166,1297,3.926,1319,4.437,1325,1.627,1326,2.669,1444,2.669,1445,2.669,1447,4.762,1649,5.02,1650,5.02,1831,4.347,2692,5.604,2693,5.604,2694,5.604,2695,5.604]],["title/interfaces/WalkingOptions.html",[0,0.247,1293,3.452]],["body/interfaces/WalkingOptions.html",[0,0.317,2,0.471,3,0.036,4,0.056,5,0.056,6,0.042,8,0.274,9,0.792,27,2.034,48,0.469,49,0.005,51,0.003,57,0.406,58,1.206,96,0.168,138,0.049,176,0.004,177,0.003,262,2.196,1293,5.579,1329,2.662,1375,5.915,1376,5.915,1380,3.224,1839,6.417,1841,6.729,1842,6.417,2696,6.316]],["title/interfaces/WalkingResult.html",[0,0.247,1297,3.452]],["body/interfaces/WalkingResult.html",[0,0.306,2,0.455,3,0.053,4,0.054,5,0.054,6,0.041,8,0.265,9,0.775,26,2.317,48,0.461,49,0.005,51,0.003,57,0.41,96,0.228,98,1.88,99,1.518,112,3.805,138,0.047,148,5.356,159,4.278,166,4.736,176,0.004,177,0.003,460,1.233,635,4.216,672,4.617,1297,5.461,1331,3.68,1332,4.988,1845,7.017,1846,7.481,1847,7.017,2688,7.481,2691,5.469,2697,6.106]],["title/injectables/WindowRef.html",[349,0.933,1799,3.452]],["body/injectables/WindowRef.html",[3,0.04,4,0.062,5,0.062,6,0.057,8,0.304,45,1.481,49,0.005,51,0.004,53,1.205,60,1.222,96,0.186,105,4.362,138,0.066,176,0.004,177,0.004,302,1.892,316,1.674,345,2.262,349,1.73,350,2.478,1794,4.905,1795,7.602,1796,6.271,1797,6.271,1799,5.946,1800,8.505,1801,6.271,2698,7.001]],["title/changelog.html",[2699,3.388,2700,3.388,2701,4.097]],["body/changelog.html",[3,0.03,14,3.717,19,4.002,23,3.065,28,2.299,34,3.289,35,2.745,36,3.692,40,3.162,49,0.005,51,0.003,128,3.891,176,0.004,177,0.003,209,2.446,220,3.676,283,5.354,298,1.48,317,1.247,511,3.855,612,3.676,690,3.676,938,4.945,1106,3.676,1235,3.676,1276,3.676,1289,3.676,1978,3.389,2702,5.247,2703,5.247,2704,9.833,2705,8.9,2706,7.975,2707,4.7,2708,4.7,2709,4.7,2710,4.7,2711,4.7,2712,5.247,2713,5.247,2714,5.247,2715,5.247,2716,7.057,2717,5.247,2718,4.7,2719,5.247,2720,8.529,2721,5.247,2722,4.7,2723,5.247,2724,4.7,2725,4.7,2726,5.247,2727,5.247,2728,5.247,2729,4.7,2730,6.321,2731,5.247,2732,7.975,2733,5.247,2734,7.972,2735,4.7,2736,7.972,2737,4.7,2738,4.7,2739,4.7,2740,4.7,2741,4.7,2742,4.7,2743,5.247,2744,5.247,2745,5.247,2746,5.247,2747,5.247,2748,5.247,2749,5.247,2750,5.247,2751,5.247,2752,5.247,2753,5.247,2754,5.247,2755,7.975,2756,7.057,2757,5.247,2758,5.247,2759,5.247,2760,5.247,2761,5.247,2762,5.247,2763,5.247,2764,5.247,2765,5.247,2766,7.143,2767,5.247,2768,7.057,2769,5.247,2770,5.247,2771,5.247,2772,5.247,2773,5.247,2774,5.247]],["title/dependencies.html",[2316,4.605,2775,4.097]],["body/dependencies.html",[49,0.005,51,0.003,176,0.004,177,0.003,302,1.768,303,3.134,690,5.703,930,5.409,1992,5.981,2316,5.073,2318,6.732,2776,6.541,2777,10.12,2778,6.541,2779,6.541,2780,6.541,2781,6.541,2782,8.14,2783,7.291,2784,6.541,2785,6.541,2786,6.541,2787,6.541,2788,6.541,2789,6.541,2790,6.541,2791,6.541,2792,6.541,2793,6.541,2794,6.541,2795,6.541,2796,6.541,2797,6.541,2798,6.541,2799,6.541,2800,6.541,2801,6.541,2802,6.541,2803,6.541,2804,6.541]],["title/index.html",[8,0.178,2699,3.388,2700,3.388]],["body/index.html",[3,0.016,14,2.612,19,2.563,23,2.64,24,1.496,26,0.682,27,0.928,28,3.039,34,2.107,35,2.365,36,2.365,40,1.723,48,0.301,49,0.005,51,0.001,96,0.169,97,1.012,105,1.782,106,2.561,118,2.919,125,2.561,126,2.365,128,2.492,138,0.022,140,3.034,176,0.002,177,0.001,209,1.333,219,5.277,256,2.003,298,2.736,316,0.564,579,2.101,612,3.166,683,2.101,687,2.365,690,6.134,784,3.321,849,1.459,930,6.098,938,3.166,959,2.101,968,1.782,1000,2.365,1040,2.101,1106,3.166,1235,3.166,1276,3.166,1289,3.166,1403,4.11,1471,2.003,1635,2.003,1660,3.926,1978,3.619,1981,3.738,1982,2.365,1984,2.365,1994,2.365,1996,2.365,2314,3.321,2333,2.561,2707,4.048,2708,4.048,2709,4.048,2710,4.048,2711,4.048,2718,2.561,2722,2.561,2724,6.212,2725,5.02,2729,2.561,2730,2.561,2734,8.883,2735,2.561,2736,6.212,2737,2.561,2738,2.561,2739,2.561,2740,2.561,2741,2.561,2742,2.561,2805,2.859,2806,2.859,2807,6.368,2808,2.859,2809,4.519,2810,2.859,2811,2.859,2812,2.859,2813,2.859,2814,2.859,2815,2.859,2816,2.859,2817,2.859,2818,2.859,2819,2.859,2820,2.859,2821,2.859,2822,2.859,2823,2.859,2824,2.859,2825,2.859,2826,2.859,2827,2.859,2828,2.859,2829,4.519,2830,4.519,2831,2.859,2832,5.604,2833,6.368,2834,2.859,2835,2.859,2836,2.859,2837,4.519,2838,2.859,2839,2.859,2840,2.365,2841,2.859,2842,2.859,2843,2.859,2844,2.859,2845,2.859,2846,2.859,2847,2.859,2848,2.859,2849,2.859,2850,2.859,2851,2.859,2852,2.859,2853,2.859,2854,2.859,2855,2.859,2856,2.859,2857,2.859,2858,2.859,2859,2.859,2860,2.859,2861,2.859,2862,2.859,2863,2.859,2864,2.859,2865,2.859,2866,2.859,2867,2.859,2868,2.859]],["title/license.html",[2699,3.388,2700,3.388,2840,3.388]],["body/license.html",[21,1.928,49,0.004,51,0.003,176,0.004,177,0.003,976,6.489,1398,5.102,1805,5.525,1812,4.322,2325,5.102,2766,5.525,2840,5.102,2869,6.169,2870,8.628,2871,6.169,2872,6.169,2873,7.846,2874,6.169,2875,6.169,2876,6.169,2877,6.169,2878,6.169,2879,6.169,2880,7.846,2881,9.95,2882,6.169,2883,6.169,2884,6.169,2885,6.169,2886,8.628,2887,7.846,2888,6.169,2889,6.169,2890,6.169,2891,6.169,2892,6.169,2893,6.169,2894,6.169,2895,6.169,2896,6.169,2897,7.846,2898,6.169,2899,6.169,2900,6.169,2901,6.169,2902,6.169,2903,6.169,2904,6.169,2905,7.846,2906,7.846,2907,6.169,2908,6.169,2909,6.169,2910,6.169,2911,6.169,2912,6.169,2913,6.169,2914,6.169,2915,6.169,2916,6.169,2917,6.169,2918,6.169,2919,6.169,2920,6.169,2921,6.169,2922,6.169,2923,6.169,2924,6.169,2925,6.169,2926,6.169,2927,6.169,2928,6.169,2929,6.169,2930,6.169,2931,6.169,2932,6.169,2933,6.169,2934,6.169]],["title/modules.html",[2315,5.593]],["body/modules.html",[49,0.005,51,0.004,176,0.005,177,0.004,2314,5.846,2315,6.581,2783,7.127,2935,7.957,2936,7.957,2937,7.957]],["title/overview.html",[2938,6.057]],["body/overview.html",[2,0.354,49,0.005,51,0.002,176,0.003,177,0.002,220,6.39,221,3.325,350,1.68,394,2.483,411,6.701,740,6.701,802,7.075,803,4.251,929,3.925,935,7.543,937,7.543,940,7.543,943,7.543,946,7.543,948,7.543,949,7.543,951,7.543,953,7.543,955,7.543,957,6.701,2202,4.842,2313,5.45,2314,7.708,2316,3.682,2317,4.251,2318,3.925,2319,4.251,2320,4.251,2321,4.251,2322,4.251,2323,4.251,2324,4.251,2325,3.925,2938,4.251,2939,4.746,2940,4.746,2941,4.746,2942,4.746,2943,4.746,2944,4.746]],["title/miscellaneous/typealiases.html",[2945,3.178,2946,5.937]],["body/miscellaneous/typealiases.html",[6,0.065,8,0.274,15,5.143,20,5.143,33,4.962,37,5.143,49,0.005,51,0.003,57,0.266,59,3.39,66,5.347,71,5.347,84,5.347,88,5.347,128,4.391,176,0.004,177,0.003,455,2.73,756,5.347,1319,3.712,1329,3.357,1354,6.177,1358,4.425,1366,6.149,1367,6.149,1373,5.657,1457,4.425,1464,4.24,1466,4.24,1483,6.858,1619,5.223,1620,6.177,2945,4.899,2947,6.316,2948,6.316,2949,9.901,2950,5.657,2951,6.316,2952,6.316,2953,7.964,2954,6.316,2955,6.316,2956,6.316]],["title/miscellaneous/variables.html",[2945,3.178,2957,5.318]],["body/miscellaneous/variables.html",[1,2.988,3,0.027,6,0.067,8,0.097,13,0.963,14,2.214,24,1.173,28,2.081,39,0.982,40,1.351,49,0.005,51,0.001,57,0.42,109,1.571,112,2.96,115,2.485,164,1.854,176,0.002,177,0.001,209,1.045,222,6.124,223,2.727,224,3.325,244,1.739,245,1.854,296,2.937,297,2.804,298,2.86,315,6.699,317,0.282,351,3.562,352,3.07,364,0.834,412,3.07,413,4.946,426,4.423,427,2.964,428,4.294,429,4.401,430,4.108,431,4.108,433,2.752,434,4.349,435,4.349,436,4.349,437,4.423,509,1.854,580,2.6,581,4.057,613,2.6,614,4.057,676,2.262,684,1.739,685,3.07,741,1.854,742,3.325,750,1.854,751,1.854,752,2.879,805,1.647,808,2.008,809,1.854,810,3.325,816,2.492,828,1.854,829,1.854,830,1.854,832,2.63,833,3.566,834,1.854,883,1.854,938,3.328,960,3.684,961,1.739,962,3.07,1099,1.647,1107,1.739,1108,3.07,1132,1.854,1133,3.325,1145,1.854,1146,1.571,1147,1.854,1148,1.854,1149,1.854,1150,1.854,1151,1.854,1152,1.854,1236,1.739,1237,3.07,1277,3.684,1290,1.739,1291,3.07,1374,3.07,1375,2.397,1376,2.397,1377,3.07,1378,4.426,1379,4.426,1383,2.008,1384,2.008,1385,3.325,1405,1.173,1706,2.008,1707,3.325,1716,2.008,1783,2.492,1867,2.008,1881,2.008,1882,3.325,1927,2.008,1977,2.879,1978,3.067,1979,1.571,1980,4.283,1989,3.684,1990,1.854,2058,2.008,2087,2.008,2088,3.325,2117,2.008,2120,1.739,2148,3.325,2176,2.008,2177,2.008,2178,2.008,2179,2.008,2180,2.008,2181,2.008,2182,2.008,2183,2.008,2184,2.008,2185,2.008,2186,2.008,2187,2.008,2188,2.008,2189,2.008,2190,2.008,2191,2.008,2192,2.008,2193,2.008,2194,2.008,2195,2.008,2196,2.008,2197,2.008,2198,2.008,2199,2.008,2200,2.008,2201,2.008,2202,1.647,2203,2.008,2229,1.739,2237,1.854,2238,1.854,2239,1.854,2240,1.854,2241,1.854,2247,2.008,2248,2.008,2249,3.325,2274,2.879,2275,3.07,2276,2.879,2277,3.868,2278,3.07,2279,2.727,2280,2.008,2281,3.07,2282,3.07,2286,2.008,2338,2.008,2344,2.008,2346,2.008,2349,2.008,2357,2.008,2360,2.008,2362,2.008,2364,2.008,2366,2.008,2382,2.008,2411,2.008,2451,2.008,2478,2.008,2479,2.008,2481,2.008,2513,2.008,2554,2.008,2614,2.008,2615,2.008,2616,2.008,2618,2.008,2639,2.008,2945,1.739,2950,2.008,2957,2.008,2958,9.3,2959,2.242,2960,3.712,2961,3.712,2962,3.712,2963,3.712,2964,3.712,2965,3.712,2966,3.712,2967,3.712,2968,3.712,2969,2.242,2970,2.242,2971,2.242,2972,2.242,2973,2.242,2974,2.242,2975,2.242,2976,2.242,2977,3.712,2978,2.242,2979,2.242,2980,2.242,2981,2.242,2982,2.242,2983,2.242,2984,2.242,2985,2.242,2986,2.242,2987,2.242,2988,2.242]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1962,"title":{},"body":{"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"classes/KeyMap.html":{},"injectables/MapAPILoaderService.html":{}}}],["0.5.1",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["0.5.5",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["010",{"_index":696,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["02",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":2939,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["1.1.20150312",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["1.3.1",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["1.3.2",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["1.3.3",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["1.4.11",{"_index":1996,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["1000",{"_index":697,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["11",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2941,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2943,"title":{},"body":{"overview.html":{}}}],["140",{"_index":2944,"title":{},"body":{"overview.html":{}}}],["17",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":2940,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["2.x)项目中便捷、高效地使用高德地图javascript",{"_index":2806,"title":{},"body":{"index.html":{}}}],["2017",{"_index":2766,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["2018.03.27",{"_index":2826,"title":{},"body":{"index.html":{}}}],["2018.04.17",{"_index":2824,"title":{},"body":{"index.html":{}}}],["2018.05.11",{"_index":2822,"title":{},"body":{"index.html":{}}}],["2018.05.24",{"_index":2820,"title":{},"body":{"index.html":{}}}],["2018.06.22",{"_index":2816,"title":{},"body":{"index.html":{}}}],["2018.11.29",{"_index":2814,"title":{},"body":{"index.html":{}}}],["21",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":2942,"title":{},"body":{"overview.html":{}}}],["4.1.1",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":2838,"title":{},"body":{"index.html":{}}}],["500",{"_index":698,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["6",{"_index":2725,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.1.0",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["_autocomplete",{"_index":376,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["_changes",{"_index":1657,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["_cm",{"_index":414,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["_config",{"_index":1997,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_defaulturl",{"_index":1993,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_defaultversion",{"_index":1995,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_districtsearch",{"_index":592,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["_documentref",{"_index":1998,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_driving",{"_index":629,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["_editorplugin",{"_index":1386,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["_exec",{"_index":1019,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["_exec(method",{"_index":1014,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["_geocoder",{"_index":719,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["_heatmap",{"_index":743,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["_infowindow",{"_index":815,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["_map",{"_index":1387,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["_maploaded",{"_index":2000,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_mappromise",{"_index":2149,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["_mapresolver",{"_index":2150,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["_mousetool",{"_index":974,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["_placesearch",{"_index":1049,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["_plugin",{"_index":233,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["_riding",{"_index":1120,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["_size",{"_index":1961,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["_subscription",{"_index":234,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["_subscriptions",{"_index":415,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["_toolbar",{"_index":1134,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["_transfer",{"_index":1249,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["_walking",{"_index":1303,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["_windowref",{"_index":1999,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["above",{"_index":2904,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":396,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{}}}],["action",{"_index":1812,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"license.html":{}}}],["actual_component",{"_index":958,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["adcode",{"_index":205,"title":{},"body":{"interfaces/AddressComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Geocode.html":{},"interfaces/Poi.html":{},"interfaces/TMC.html":{},"interfaces/Tip.html":{},"interfaces/ViaCity.html":{}}}],["add",{"_index":1000,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"index.html":{}}}],["add(overlayers",{"_index":1512,"title":{},"body":{"interfaces/CMap.html":{}}}],["addcontrol(obj",{"_index":1531,"title":{},"body":{"interfaces/CMap.html":{}}}],["adddatapoint",{"_index":1916,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["adddatapoint(lng",{"_index":1460,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["adddomlistener",{"_index":179,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["adddomlistener(instance",{"_index":184,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addition",{"_index":1763,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Hotel.html":{}}}],["addlistener",{"_index":180,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addlistener(instance",{"_index":192,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addlisteneronce",{"_index":181,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addlisteneronce(instance",{"_index":194,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addmarker",{"_index":2205,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["addmarker(marker",{"_index":1586,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["addmarkers",{"_index":2206,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["addmarkers(markers",{"_index":1600,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["address",{"_index":400,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Geocode.html":{},"interfaces/Geocoder.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{}}}],["addresscomponent",{"_index":202,"title":{"interfaces/AddressComponent.html":{}},"body":{"interfaces/AddressComponent.html":{},"interfaces/Geocode.html":{},"interfaces/ReGeocode.html":{}}}],["addtomap",{"_index":2288,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["adname",{"_index":2417,"title":{},"body":{"interfaces/Poi.html":{}}}],["aliases",{"_index":2947,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_options",{"_index":315,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"miscellaneous/variables.html":{}}}],["amap",{"_index":298,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["amap.autocomplete",{"_index":2853,"title":{},"body":{"index.html":{}}}],["amap.autocomplete(opts",{"_index":380,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["amap.autocomplete的搜索服务和指令：amapautocompleteservice",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["amap.beziercurve",{"_index":2845,"title":{},"body":{"index.html":{}}}],["amap.beziercurve(options",{"_index":1412,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["amap.beziercurveeditor(map",{"_index":1417,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["amap.beziercurveeditor编辑功能：amap",{"_index":2738,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.beziercurve指令：amap",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["amap.bounds",{"_index":119,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/Bounds.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["amap.circle",{"_index":2847,"title":{},"body":{"index.html":{}}}],["amap.circle(options",{"_index":1724,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap.circleeditor(map",{"_index":1726,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap.circleeditor编辑功能：amap",{"_index":2735,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.circlemarker",{"_index":2848,"title":{},"body":{"index.html":{}}}],["amap.circlemarker(options",{"_index":1713,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["amap.circlemarker的指令：amap",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["amap.circle的指令：amap",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["amap.component",{"_index":2339,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap.component.ts",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amap.districtsearch",{"_index":2855,"title":{},"body":{"index.html":{}}}],["amap.districtsearch(opts",{"_index":594,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["amap.districtsearch行政区查询服务：amapdistrictsearchservice",{"_index":2729,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.driving",{"_index":2707,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.driving(opts",{"_index":631,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["amap.editor",{"_index":131,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.ellipse",{"_index":2846,"title":{},"body":{"index.html":{}}}],["amap.ellipse(options",{"_index":1877,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap.ellipseeditor(map",{"_index":1880,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap.ellipseeditor编辑功能：amap",{"_index":2740,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.ellipse指令：amap",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["amap.event",{"_index":103,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.event.addlistener(m",{"_index":1888,"title":{},"body":{"classes/EventBinder.html":{}}}],["amap.event.addlistener(target",{"_index":1893,"title":{},"body":{"classes/EventBinder.html":{}}}],["amap.event.removelistener(listener",{"_index":1892,"title":{},"body":{"classes/EventBinder.html":{}}}],["amap.geocoder",{"_index":2852,"title":{},"body":{"index.html":{}}}],["amap.geocoder(opts",{"_index":721,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amap.geocoder的wrapper",{"_index":699,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amap.geocoder的地理服务：amapgeocoderservice",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["amap.heatmap",{"_index":2857,"title":{},"body":{"index.html":{}}}],["amap.heatmap(map",{"_index":1936,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap.heatmap指令：amap",{"_index":2722,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.icon",{"_index":102,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Icon.html":{},"interfaces/Text.html":{}}}],["amap.icon(iconoption",{"_index":2074,"title":{},"body":{"injectables/IconService.html":{}}}],["amap.info",{"_index":104,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.infowindow",{"_index":2850,"title":{},"body":{"index.html":{}}}],["amap.infowindow(options",{"_index":2100,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["amap.lng",{"_index":98,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Cross.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocode.html":{},"interfaces/InfoWindow.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["amap.map",{"_index":97,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/InfoWindow.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MouseTool.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{},"index.html":{}}}],["amap.map(el",{"_index":2168,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["amap.marker",{"_index":125,"title":{},"body":{"interfaces/AMapClass.html":{},"index.html":{}}}],["amap.marker(options",{"_index":2301,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap.markerclusterer",{"_index":2851,"title":{},"body":{"index.html":{}}}],["amap.markerclusterer(map",{"_index":2263,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["amap.module.ts",{"_index":2327,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap.module.ts:74",{"_index":2330,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap.mouse",{"_index":117,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.mousetool",{"_index":2856,"title":{},"body":{"index.html":{}}}],["amap.mousetool(map",{"_index":989,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["amap.mousetool鼠标工具插件：amapmousetoolservice",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["amap.pixel",{"_index":100,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPixel.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Pixel.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["amap.pixel(options.x",{"_index":2389,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap.placesearch",{"_index":2854,"title":{},"body":{"index.html":{}}}],["amap.placesearch(opts",{"_index":1051,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["amap.placesearch的搜索服务：amapplacesearchservice",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["amap.plugin(name",{"_index":2415,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["amap.polyeditor(map",{"_index":2465,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["amap.polyeditor编辑功能：amap",{"_index":2737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.polygon",{"_index":2844,"title":{},"body":{"index.html":{}}}],["amap.polygon(options",{"_index":2462,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap.polygon指令：amap",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["amap.polyline",{"_index":2843,"title":{},"body":{"index.html":{}}}],["amap.polyline(options",{"_index":2490,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap.rectangle",{"_index":2849,"title":{},"body":{"index.html":{}}}],["amap.rectangle(options",{"_index":2524,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap.rectangleeditor(map",{"_index":2527,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap.rectangleeditor编辑功能：amap",{"_index":2741,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.rectangle指令：amap",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["amap.riding",{"_index":2711,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.riding(opts",{"_index":1122,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["amap.size",{"_index":101,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CSize.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/Size.html":{}}}],["amap.size(options.width",{"_index":2559,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap.text",{"_index":2842,"title":{},"body":{"index.html":{}}}],["amap.text(options",{"_index":2624,"title":{},"body":{"injectables/TextService.html":{}}}],["amap.text指令：amap",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["amap.toolbar",{"_index":106,"title":{},"body":{"interfaces/AMapClass.html":{},"index.html":{}}}],["amap.toolbar(options",{"_index":2649,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap.transfer",{"_index":2709,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.transfer(opts",{"_index":1251,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["amap.truckdriving",{"_index":2708,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.truckdriving(opts",{"_index":1283,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["amap.walking",{"_index":2710,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.walking(opts",{"_index":1305,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["amap/ngx",{"_index":2338,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["amap/src/components/amap",{"_index":808,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"miscellaneous/variables.html":{}}}],["amap/src/components/ngx",{"_index":2988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amap/src/directives/amap",{"_index":222,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"miscellaneous/variables.html":{}}}],["amap/src/ngx",{"_index":2326,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap/src/services/amap",{"_index":351,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/bezier",{"_index":1383,"title":{},"body":{"injectables/BezierCurveService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/circle",{"_index":1706,"title":{},"body":{"injectables/CircleMarkerService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/circle/circle.service.ts",{"_index":1716,"title":{},"body":{"injectables/CircleService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/circle/circle.service.ts:13",{"_index":1723,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:14",{"_index":1722,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:15",{"_index":1717,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:26",{"_index":1718,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:33",{"_index":1720,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:39",{"_index":1721,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:47",{"_index":1719,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts",{"_index":1867,"title":{},"body":{"injectables/EllipseService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:13",{"_index":1876,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:14",{"_index":1875,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:15",{"_index":1868,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:26",{"_index":1869,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:33",{"_index":1873,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:39",{"_index":1874,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:47",{"_index":1871,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts",{"_index":1927,"title":{},"body":{"injectables/HeatmapService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:13",{"_index":1933,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:14",{"_index":1932,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:15",{"_index":1928,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:26",{"_index":1929,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:38",{"_index":1931,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/icon/icon.service.ts",{"_index":2058,"title":{},"body":{"injectables/IconService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/icon/icon.service.ts:12",{"_index":2059,"title":{},"body":{"injectables/IconService.html":{}}}],["amap/src/services/icon/icon.service.ts:20",{"_index":2060,"title":{},"body":{"injectables/IconService.html":{}}}],["amap/src/services/info",{"_index":2087,"title":{},"body":{"injectables/InfoWindowService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/label/label.service.ts",{"_index":2117,"title":{},"body":{"injectables/LabelService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/label/label.service.ts:11",{"_index":2118,"title":{},"body":{"injectables/LabelService.html":{}}}],["amap/src/services/label/label.service.ts:15",{"_index":2119,"title":{},"body":{"injectables/LabelService.html":{}}}],["amap/src/services/logger/debug",{"_index":1743,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts",{"_index":2130,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:12",{"_index":2133,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:16",{"_index":2135,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:20",{"_index":2132,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:4",{"_index":2131,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:8",{"_index":2134,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/map",{"_index":1977,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/marker",{"_index":2247,"title":{},"body":{"injectables/MarkerClustererService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/marker/marker.service.ts",{"_index":2286,"title":{},"body":{"injectables/MarkerService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/marker/marker.service.ts:15",{"_index":2292,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/marker/marker.service.ts:16",{"_index":2287,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/marker/marker.service.ts:29",{"_index":2289,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/marker/marker.service.ts:59",{"_index":2291,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/pixel/pixel.service.ts",{"_index":2382,"title":{},"body":{"injectables/PixelService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/pixel/pixel.service.ts:10",{"_index":2384,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap/src/services/pixel/pixel.service.ts:14",{"_index":2385,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap/src/services/pixel/pixel.service.ts:22",{"_index":2387,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap/src/services/plugin",{"_index":2411,"title":{},"body":{"injectables/PluginLoaderService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/polygon/polygon.service.ts",{"_index":2451,"title":{},"body":{"injectables/PolygonService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/polygon/polygon.service.ts:13",{"_index":2461,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:14",{"_index":2460,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:15",{"_index":2452,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:26",{"_index":2453,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:33",{"_index":2458,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:39",{"_index":2459,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:47",{"_index":2455,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polyline/polyline.service.ts",{"_index":2481,"title":{},"body":{"injectables/PolylineService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/polyline/polyline.service.ts:13",{"_index":2489,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:14",{"_index":2488,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:15",{"_index":2482,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:26",{"_index":2483,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:33",{"_index":2486,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:39",{"_index":2487,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:47",{"_index":2484,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts",{"_index":2513,"title":{},"body":{"injectables/RectangleService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:13",{"_index":2523,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:14",{"_index":2522,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:15",{"_index":2514,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:26",{"_index":2515,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:33",{"_index":2520,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:39",{"_index":2521,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:47",{"_index":2517,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/size/size.service.ts",{"_index":2554,"title":{},"body":{"injectables/SizeService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/size/size.service.ts:10",{"_index":2555,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap/src/services/size/size.service.ts:14",{"_index":2556,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap/src/services/size/size.service.ts:22",{"_index":2558,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap/src/services/text/text.service.ts",{"_index":2618,"title":{},"body":{"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/text/text.service.ts:14",{"_index":2623,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/text/text.service.ts:15",{"_index":2619,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/text/text.service.ts:27",{"_index":2620,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/text/text.service.ts:47",{"_index":2622,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts",{"_index":2639,"title":{},"body":{"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:14",{"_index":2646,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:15",{"_index":2645,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:16",{"_index":2641,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:28",{"_index":2642,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:46",{"_index":2644,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/types/class/amap.bounds.ts",{"_index":1418,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:10",{"_index":1430,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:11",{"_index":1429,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:12",{"_index":1431,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:8",{"_index":1426,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:9",{"_index":1428,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.editor.ts",{"_index":1358,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/class/amap.editor.ts:11",{"_index":1853,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:12",{"_index":1850,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:13",{"_index":1852,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:14",{"_index":1851,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:23",{"_index":1364,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.editor.ts:24",{"_index":1359,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.editor.ts:25",{"_index":1363,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.editor.ts:26",{"_index":1361,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.event.ts",{"_index":178,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:2",{"_index":188,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:3",{"_index":193,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:4",{"_index":195,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:5",{"_index":197,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:6",{"_index":201,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.icon.ts",{"_index":1470,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["amap/src/types/class/amap.icon.ts:6",{"_index":2055,"title":{},"body":{"interfaces/Icon.html":{}}}],["amap/src/types/class/amap.icon.ts:7",{"_index":2056,"title":{},"body":{"interfaces/Icon.html":{}}}],["amap/src/types/class/amap.info",{"_index":1475,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["amap/src/types/class/amap.lng",{"_index":1481,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["amap/src/types/class/amap.map.ts",{"_index":1491,"title":{},"body":{"interfaces/CMap.html":{}}}],["amap/src/types/class/amap.marker",{"_index":1581,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["amap/src/types/class/amap.mouse",{"_index":1604,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["amap/src/types/class/amap.pixel.ts",{"_index":1608,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:5",{"_index":2379,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:6",{"_index":2380,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:7",{"_index":2378,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:8",{"_index":2381,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.size.ts",{"_index":1630,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["amap/src/types/class/amap.size.ts:5",{"_index":2552,"title":{},"body":{"interfaces/Size.html":{}}}],["amap/src/types/class/amap.size.ts:6",{"_index":2551,"title":{},"body":{"interfaces/Size.html":{}}}],["amap/src/types/class/amap.size.ts:7",{"_index":2553,"title":{},"body":{"interfaces/Size.html":{}}}],["amap/src/types/class/amap.toolbar.ts",{"_index":1642,"title":{},"body":{"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:10",{"_index":2629,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:11",{"_index":2634,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:12",{"_index":2633,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:13",{"_index":2638,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:14",{"_index":2631,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:15",{"_index":2636,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:16",{"_index":2632,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:17",{"_index":2637,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:18",{"_index":2627,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:19",{"_index":2628,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:20",{"_index":2630,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:21",{"_index":2635,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts",{"_index":1317,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:10",{"_index":1320,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:11",{"_index":1323,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:12",{"_index":1321,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:13",{"_index":1322,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/autocomplete",{"_index":1330,"title":{},"body":{"interfaces/AutocompleteResult.html":{}}}],["amap/src/types/class/autocomplete/tip.ts",{"_index":2626,"title":{},"body":{"interfaces/Tip.html":{}}}],["amap/src/types/class/cluster",{"_index":1729,"title":{},"body":{"interfaces/ClusterStyle.html":{}}}],["amap/src/types/class/district",{"_index":1440,"title":{},"body":{"interfaces/CDistrictSearch.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{}}}],["amap/src/types/class/driving/amap.driving.ts",{"_index":1443,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:12",{"_index":1830,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:18",{"_index":1832,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:22",{"_index":1836,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:23",{"_index":1834,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:24",{"_index":1835,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:25",{"_index":1827,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:26",{"_index":1826,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:27",{"_index":1828,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:28",{"_index":1829,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:29",{"_index":1825,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:30",{"_index":1833,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:31",{"_index":1837,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.truck",{"_index":1646,"title":{},"body":{"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["amap/src/types/class/driving/drive",{"_index":1803,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["amap/src/types/class/driving/driving",{"_index":1844,"title":{},"body":{"interfaces/DrivingResult.html":{}}}],["amap/src/types/class/geocoder/address",{"_index":203,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts",{"_index":1452,"title":{},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts:12",{"_index":1900,"title":{},"body":{"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts:13",{"_index":1901,"title":{},"body":{"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts:14",{"_index":1899,"title":{},"body":{"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/business",{"_index":1432,"title":{},"body":{"interfaces/BusinessArea.html":{}}}],["amap/src/types/class/geocoder/cross.ts",{"_index":1736,"title":{},"body":{"interfaces/Cross.html":{}}}],["amap/src/types/class/geocoder/geocode",{"_index":1896,"title":{},"body":{"interfaces/GeocodeResult.html":{}}}],["amap/src/types/class/geocoder/geocode.ts",{"_index":1894,"title":{},"body":{"interfaces/Geocode.html":{}}}],["amap/src/types/class/geocoder/geocoder",{"_index":1905,"title":{},"body":{"interfaces/GeocoderResult.html":{}}}],["amap/src/types/class/geocoder/re",{"_index":2492,"title":{},"body":{"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{}}}],["amap/src/types/class/geocoder/road.ts",{"_index":2537,"title":{},"body":{"interfaces/Road.html":{}}}],["amap/src/types/class/index.ts",{"_index":7,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap/src/types/class/index.ts:75",{"_index":54,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts",{"_index":1457,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:10",{"_index":1924,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:11",{"_index":1917,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:12",{"_index":1922,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:14",{"_index":1921,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:15",{"_index":1925,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:17",{"_index":1919,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:18",{"_index":1920,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:19",{"_index":1918,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:9",{"_index":1923,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/overlays/amap.bezier",{"_index":1335,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["amap/src/types/class/overlays/amap.circle",{"_index":1438,"title":{},"body":{"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts",{"_index":1435,"title":{},"body":{"interfaces/CCircle.html":{},"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:11",{"_index":1687,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:12",{"_index":1682,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:13",{"_index":1681,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:14",{"_index":1691,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:15",{"_index":1685,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:16",{"_index":1690,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:17",{"_index":1684,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:18",{"_index":1686,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:19",{"_index":1692,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:20",{"_index":1689,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:21",{"_index":1688,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:22",{"_index":1683,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:23",{"_index":1680,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts",{"_index":1448,"title":{},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:12",{"_index":1863,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:13",{"_index":1858,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:14",{"_index":1856,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:15",{"_index":1860,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:16",{"_index":1855,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:17",{"_index":1859,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:18",{"_index":1864,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:19",{"_index":1862,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:20",{"_index":1861,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:21",{"_index":1857,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:22",{"_index":1854,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.marker.ts",{"_index":1542,"title":{},"body":{"interfaces/CMarker.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts",{"_index":1619,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:13",{"_index":2446,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:14",{"_index":2441,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:15",{"_index":2445,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:16",{"_index":2440,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:17",{"_index":2438,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:18",{"_index":2437,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:19",{"_index":2442,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:20",{"_index":2447,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:21",{"_index":2444,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:22",{"_index":2443,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:23",{"_index":2439,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:24",{"_index":2436,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts",{"_index":1623,"title":{},"body":{"interfaces/CPolyline.html":{},"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:10",{"_index":2475,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:11",{"_index":2470,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:12",{"_index":2474,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:13",{"_index":2469,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:14",{"_index":2468,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:15",{"_index":2466,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:16",{"_index":2471,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:17",{"_index":2476,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:18",{"_index":2473,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:19",{"_index":2472,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:20",{"_index":2467,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts",{"_index":1624,"title":{},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:12",{"_index":2508,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:13",{"_index":2503,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:14",{"_index":2501,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:15",{"_index":2505,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:16",{"_index":2500,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:17",{"_index":2504,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:18",{"_index":2509,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:19",{"_index":2507,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:20",{"_index":2506,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:21",{"_index":2502,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:22",{"_index":2499,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.text.ts",{"_index":1636,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:12",{"_index":2585,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:13",{"_index":2606,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:14",{"_index":2605,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:15",{"_index":2582,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:16",{"_index":2602,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:17",{"_index":2595,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:18",{"_index":2577,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:19",{"_index":2597,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:20",{"_index":2578,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:21",{"_index":2583,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:22",{"_index":2603,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:23",{"_index":2594,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:24",{"_index":2576,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:25",{"_index":2610,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:26",{"_index":2588,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:27",{"_index":2599,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:28",{"_index":2579,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:29",{"_index":2589,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:30",{"_index":2611,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:31",{"_index":2598,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:32",{"_index":2590,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:33",{"_index":2591,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:34",{"_index":2612,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:35",{"_index":2592,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:36",{"_index":2593,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:37",{"_index":2601,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:38",{"_index":2581,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:39",{"_index":2607,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:40",{"_index":2586,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:41",{"_index":2608,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:42",{"_index":2587,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:43",{"_index":2604,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:44",{"_index":2584,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:45",{"_index":2600,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:46",{"_index":2580,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/place",{"_index":1614,"title":{},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/Cinema.html":{},"interfaces/CityInfo.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Hotel.html":{},"interfaces/IPoiObject.html":{},"interfaces/Photo.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{}}}],["amap/src/types/class/riding/amap.riding.ts",{"_index":1628,"title":{},"body":{"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/amap.riding.ts:11",{"_index":2533,"title":{},"body":{"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/amap.riding.ts:16",{"_index":2534,"title":{},"body":{"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/amap.riding.ts:20",{"_index":2532,"title":{},"body":{"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/ride",{"_index":2529,"title":{},"body":{"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{}}}],["amap/src/types/class/riding/riding",{"_index":2536,"title":{},"body":{"interfaces/RidingResult.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts",{"_index":1644,"title":{},"body":{"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:11",{"_index":2656,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:16",{"_index":2657,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:20",{"_index":2661,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:21",{"_index":2659,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:22",{"_index":2660,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:23",{"_index":2655,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:24",{"_index":2654,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:25",{"_index":2658,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/segment.ts",{"_index":2546,"title":{},"body":{"interfaces/Segment.html":{}}}],["amap/src/types/class/transfer/transfer",{"_index":2666,"title":{},"body":{"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{}}}],["amap/src/types/class/walking/amap.walking.ts",{"_index":1649,"title":{},"body":{"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:12",{"_index":2693,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:17",{"_index":2694,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:21",{"_index":2692,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:22",{"_index":2695,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/walk",{"_index":2689,"title":{},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["amap/src/types/class/walking/walking",{"_index":2697,"title":{},"body":{"interfaces/WalkingResult.html":{}}}],["amap/src/types/interface/autocomplete",{"_index":1328,"title":{},"body":{"interfaces/AutocompleteOptions.html":{}}}],["amap/src/types/interface/callback.type.ts",{"_index":2955,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amap/src/types/interface/cluster",{"_index":1947,"title":{},"body":{"interfaces/IClusterStyle.html":{}}}],["amap/src/types/interface/district",{"_index":1790,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{}}}],["amap/src/types/interface/driving/driving",{"_index":1838,"title":{},"body":{"interfaces/DrivingOptions.html":{}}}],["amap/src/types/interface/driving/truck",{"_index":2678,"title":{},"body":{"interfaces/TruckDrivingOptions.html":{}}}],["amap/src/types/interface/geocoder",{"_index":1902,"title":{},"body":{"interfaces/GeocoderOptions.html":{}}}],["amap/src/types/interface/icon.interface.ts",{"_index":1951,"title":{},"body":{"interfaces/IIcon.html":{}}}],["amap/src/types/interface/info",{"_index":2084,"title":{},"body":{"interfaces/InfoWindowOptions.html":{}}}],["amap/src/types/interface/label.interface.ts",{"_index":1975,"title":{},"body":{"interfaces/ILabel.html":{}}}],["amap/src/types/interface/layers/heatmap",{"_index":1926,"title":{},"body":{"interfaces/HeatmapOptions.html":{}}}],["amap/src/types/interface/lng",{"_index":2956,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amap/src/types/interface/map",{"_index":2175,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["amap/src/types/interface/marker",{"_index":2236,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["amap/src/types/interface/overlays/bezier",{"_index":1373,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/interface/overlays/circle",{"_index":1704,"title":{},"body":{"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{}}}],["amap/src/types/interface/overlays/ellipse",{"_index":1865,"title":{},"body":{"interfaces/EllipseOptions.html":{}}}],["amap/src/types/interface/overlays/marker",{"_index":2273,"title":{},"body":{"interfaces/MarkerOptions.html":{}}}],["amap/src/types/interface/overlays/polygon",{"_index":2448,"title":{},"body":{"interfaces/PolygonOptions.html":{}}}],["amap/src/types/interface/overlays/polyline",{"_index":2477,"title":{},"body":{"interfaces/PolylineOptions.html":{}}}],["amap/src/types/interface/overlays/rectangle",{"_index":2510,"title":{},"body":{"interfaces/RectangleOptions.html":{}}}],["amap/src/types/interface/overlays/text",{"_index":2613,"title":{},"body":{"interfaces/TextOptions.html":{}}}],["amap/src/types/interface/pixel.interface.ts",{"_index":2052,"title":{},"body":{"interfaces/IPixel.html":{}}}],["amap/src/types/interface/place",{"_index":2406,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["amap/src/types/interface/riding/riding",{"_index":2535,"title":{},"body":{"interfaces/RidingOptions.html":{}}}],["amap/src/types/interface/size.interface.ts",{"_index":2053,"title":{},"body":{"interfaces/ISize.html":{}}}],["amap/src/types/interface/toolbar",{"_index":2653,"title":{},"body":{"interfaces/ToolbarOptions.html":{}}}],["amap/src/types/interface/transfer/transfer",{"_index":2662,"title":{},"body":{"interfaces/TransferOptions.html":{}}}],["amap/src/types/interface/walking/walking",{"_index":2696,"title":{},"body":{"interfaces/WalkingOptions.html":{}}}],["amap/src/utils/browser",{"_index":1795,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["amap/src/utils/change",{"_index":1651,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["amap/src/utils/event",{"_index":1881,"title":{},"body":{"classes/EventBinder.html":{},"miscellaneous/variables.html":{}}}],["amap/src/utils/key",{"_index":1955,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["amap/src/utils/utils.ts",{"_index":2681,"title":{},"body":{"classes/Utils.html":{}}}],["amap/src/utils/utils.ts:2",{"_index":2684,"title":{},"body":{"classes/Utils.html":{}}}],["amap/ts/types/class/amap.map.js",{"_index":983,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["amap/types/class",{"_index":2859,"title":{},"body":{"index.html":{}}}],["amap/types/class中import对amap",{"_index":2858,"title":{},"body":{"index.html":{}}}],["amap/types/interface",{"_index":2862,"title":{},"body":{"index.html":{}}}],["amap/types/interface中import对ngx",{"_index":2860,"title":{},"body":{"index.html":{}}}],["amapautocomplete",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["amapautocompletedirective",{"_index":220,"title":{"directives/AmapAutocompleteDirective.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"overview.html":{}}}],["amapautocompleteservice",{"_index":256,"title":{"injectables/AmapAutocompleteService.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapautocompletewrapper",{"_index":277,"title":{"classes/AmapAutocompleteWrapper.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapautocompletewrapper(opts",{"_index":373,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["amapautocompletewrapper对象将高德原生的autocomplete对象提供的方法封装成promise",{"_index":374,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["amapbeziercurvedirective",{"_index":937,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapcircledirective",{"_index":940,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapcirclemarkerdirective",{"_index":411,"title":{"directives/AmapCircleMarkerDirective.html":{}},"body":{"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapclass",{"_index":1,"title":{"interfaces/AMapClass.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["amapdistrictsearchservice",{"_index":579,"title":{"injectables/AmapDistrictSearchService.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapdistrictsearchwrapper",{"_index":591,"title":{"classes/AmapDistrictSearchWrapper.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapdistrictsearchwrapper(opts",{"_index":589,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["amapdistrictsearchwrapper对象将高德原生的districtsearch对象提供的方法封装成promise",{"_index":590,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["amapdrivingservice",{"_index":612,"title":{"injectables/AmapDrivingService.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amapdrivingwrapper",{"_index":628,"title":{"classes/AmapDrivingWrapper.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapdrivingwrapper(opts",{"_index":626,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["amapdrivingwrapper对象将高德原生的driving对象提供的方法封装成promise",{"_index":627,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["amapellipsedirective",{"_index":943,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapevent",{"_index":72,"title":{"interfaces/AMapEvent.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{}}}],["amapgeocoder",{"_index":693,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapgeocoder.of",{"_index":695,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapgeocoderservice",{"_index":683,"title":{"injectables/AmapGeocoderService.html":{}},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapgeocoderwrapper",{"_index":689,"title":{"classes/AmapGeocoderWrapper.html":{}},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapgeocoderwrapper(opts",{"_index":731,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapgeocoderwrapper对象将高德原生的geocoder对象提供的方法封装成promise",{"_index":718,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapheatmapdirective",{"_index":740,"title":{"directives/AmapHeatmapDirective.html":{}},"body":{"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapinfowindowcomponent",{"_index":802,"title":{"components/AmapInfoWindowComponent.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapmarkerclustererdirective",{"_index":946,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapmarkerdirective",{"_index":948,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapmousetoolservice",{"_index":959,"title":{"injectables/AmapMouseToolService.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapmousetoolwrapper",{"_index":973,"title":{"classes/AmapMouseToolWrapper.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapmousetoolwrapper(map",{"_index":972,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["amapplacesearchservice",{"_index":1040,"title":{"injectables/AmapPlaceSearchService.html":{}},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapplacesearchwrapper",{"_index":1048,"title":{"classes/AmapPlaceSearchWrapper.html":{}},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapplacesearchwrapper(opts",{"_index":1046,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["amapplacesearchwrapper对象将高德原生的placesearch对象提供的方法封装成promise",{"_index":1047,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["amappolygondirective",{"_index":949,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amappolylinedirective",{"_index":951,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amaprectangledirective",{"_index":953,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapridingservice",{"_index":1106,"title":{"injectables/AmapRidingService.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amapridingwrapper",{"_index":1119,"title":{"classes/AmapRidingWrapper.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapridingwrapper(opts",{"_index":1117,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["amapridingwrapper对象将高德原生的riding对象提供的方法封装成promise",{"_index":1118,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["amaptextdirective",{"_index":955,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amaptoolbardirective",{"_index":957,"title":{"directives/AmapToolBarDirective.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amaptransferservice",{"_index":1235,"title":{"injectables/AmapTransferService.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amaptransferwrapper",{"_index":1248,"title":{"classes/AmapTransferWrapper.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amaptransferwrapper(opts",{"_index":1246,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["amaptransferwrapper对象将高德原生的transfer对象提供的方法封装成promise",{"_index":1247,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["amaptruckdrivingservice",{"_index":1276,"title":{"injectables/AmapTruckDrivingService.html":{}},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amaptruckdrivingwrapper",{"_index":1282,"title":{"classes/AmapTruckDrivingWrapper.html":{}},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amaptruckdrivingwrapper(opts",{"_index":1280,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["amaptruckdrivingwrapper对象将高德原生的truckdriving对象提供的方法封装成promise",{"_index":1281,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["amapwalkingservice",{"_index":1289,"title":{"injectables/AmapWalkingService.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amapwalkingwrapper",{"_index":1302,"title":{"classes/AmapWalkingWrapper.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapwalkingwrapper(opts",{"_index":1300,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["amapwalkingwrapper对象将高德原生的walking对象提供的方法封装成promise",{"_index":1301,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["amap所使用的input",{"_index":2861,"title":{},"body":{"index.html":{}}}],["amap支持gridmapforeign",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":2895,"title":{},"body":{"license.html":{}}}],["angle",{"_index":2274,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":2724,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular(ver",{"_index":2805,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":302,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2596,"title":{},"body":{"interfaces/Text.html":{}}}],["animateenable",{"_index":2176,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["animation",{"_index":2614,"title":{},"body":{"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":1978,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":1406,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["api.service.ts",{"_index":2148,"title":{},"body":{"injectables/MapAPIService.html":{},"miscellaneous/variables.html":{}}}],["api.service.ts:13",{"_index":2163,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:14",{"_index":2161,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:15",{"_index":2162,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:16",{"_index":2155,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:23",{"_index":2159,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:32",{"_index":2160,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:39",{"_index":2164,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:43",{"_index":2157,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api/map",{"_index":1405,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1981,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["apiversion",{"_index":1982,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["api的baseurl调整为https",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["api的版本调整为1.4.3",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["appmodule",{"_index":2836,"title":{},"body":{"index.html":{}}}],["area",{"_index":142,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{}}}],["area.ts",{"_index":1433,"title":{},"body":{"interfaces/BusinessArea.html":{}}}],["args",{"_index":1750,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["arising",{"_index":2932,"title":{},"body":{"license.html":{}}}],["array",{"_index":1483,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(i",{"_index":2047,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["array.isarray(queryparams[k",{"_index":2040,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["array>|array",{"_index":1381,"title":{},"body":{"interfaces/BezierCurveOptions.html":{}}}],["arrays",{"_index":2039,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["array|array>|array|array",{"_index":1621,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{}}}],["assist_action",{"_index":1813,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["associated",{"_index":2882,"title":{},"body":{"license.html":{}}}],["atmosphere",{"_index":1764,"title":{},"body":{"interfaces/Dining.html":{}}}],["authors",{"_index":2922,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":10,"title":{"interfaces/Autocomplete.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["autocomplete.directive",{"_index":2355,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["autocomplete.directive.ts",{"_index":224,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"miscellaneous/variables.html":{}}}],["autocomplete.directive.ts:23",{"_index":299,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:26",{"_index":265,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:28",{"_index":261,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:30",{"_index":264,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:32",{"_index":263,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:35",{"_index":273,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:37",{"_index":269,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:39",{"_index":271,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:41",{"_index":274,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:43",{"_index":267,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:45",{"_index":295,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:46",{"_index":259,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:54",{"_index":282,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:63",{"_index":285,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:73",{"_index":284,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:79",{"_index":278,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:87",{"_index":287,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:91",{"_index":292,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:95",{"_index":289,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.service",{"_index":308,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"modules/NgxAmapModule.html":{}}}],["autocomplete.service.ts",{"_index":352,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"miscellaneous/variables.html":{}}}],["autocomplete.service.ts:16",{"_index":360,"title":{},"body":{"injectables/AmapAutocompleteService.html":{}}}],["autocomplete.service.ts:18",{"_index":356,"title":{},"body":{"injectables/AmapAutocompleteService.html":{}}}],["autocomplete.service.ts:22",{"_index":358,"title":{},"body":{"injectables/AmapAutocompleteService.html":{}}}],["autocomplete.service.ts:35",{"_index":397,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:42",{"_index":410,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:51",{"_index":398,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:55",{"_index":399,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:61",{"_index":401,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:65",{"_index":403,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:69",{"_index":402,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete/amap",{"_index":223,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["autocomplete/amap.autocomplete",{"_index":111,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["autocomplete/autocomplete",{"_index":150,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["autocomplete/tip",{"_index":151,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["autocompleteoptions",{"_index":305,"title":{"interfaces/AutocompleteOptions.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/CAutocomplete.html":{}}}],["autocompleteresult",{"_index":1327,"title":{"interfaces/AutocompleteResult.html":{}},"body":{"interfaces/Autocomplete.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/CAutocomplete.html":{}}}],["autocomplete事件，返回可以被subscribe的observable",{"_index":382,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete插件触发choose",{"_index":268,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete插件触发complete",{"_index":270,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete插件触发error",{"_index":272,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete插件触发select",{"_index":275,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autofitview",{"_index":1839,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["automove",{"_index":828,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["autoposition",{"_index":1145,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["autorotation",{"_index":2275,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["autos",{"_index":255,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["averagecenter",{"_index":2229,"title":{},"body":{"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["awesome",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["axlesnum",{"_index":2679,"title":{},"body":{"interfaces/TruckDrivingOptions.html":{}}}],["bar",{"_index":784,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"injectables/ToolBarService.html":{},"index.html":{}}}],["bash",{"_index":2829,"title":{},"body":{"index.html":{}}}],["basic",{"_index":2431,"title":{},"body":{"interfaces/Poi.html":{}}}],["batch",{"_index":1903,"title":{},"body":{"interfaces/GeocoderOptions.html":{}}}],["beta.4",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["bezier",{"_index":938,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/BezierCurveService.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["beziercurve",{"_index":11,"title":{"interfaces/BezierCurve.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["beziercurve.then(m",{"_index":1413,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["beziercurveeditor",{"_index":12,"title":{"interfaces/BezierCurveEditor.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["beziercurveeditoroptions",{"_index":1368,"title":{"interfaces/BezierCurveEditorOptions.html":{}},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["beziercurveoptions",{"_index":1346,"title":{"interfaces/BezierCurveOptions.html":{}},"body":{"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{}}}],["beziercurveservice",{"_index":1382,"title":{"injectables/BezierCurveService.html":{}},"body":{"injectables/BezierCurveService.html":{}}}],["binder",{"_index":368,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["binder.ts",{"_index":1882,"title":{},"body":{"classes/EventBinder.html":{},"miscellaneous/variables.html":{}}}],["binder.ts:7",{"_index":1883,"title":{},"body":{"classes/EventBinder.html":{}}}],["bindevent",{"_index":395,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["bindevent(event",{"_index":485,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["bindevent(target",{"_index":404,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["bindevents",{"_index":236,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["bindevents(wrapper",{"_index":276,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["bindheatmapevent",{"_index":744,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["bindheatmapevent(event",{"_index":767,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["bindmapevents",{"_index":2151,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["bindmapevents(event",{"_index":2156,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["bindtoolbarevent",{"_index":1135,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["bindtoolbarevent(event",{"_index":1177,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["boolean",{"_index":262,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"classes/KeyMap.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RidingOptions.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["bootstrap",{"_index":2318,"title":{},"body":{"modules/NgxAmapModule.html":{},"dependencies.html":{},"overview.html":{}}}],["borderweight",{"_index":1374,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["boundaries",{"_index":1785,"title":{},"body":{"interfaces/District.html":{}}}],["bounds",{"_index":13,"title":{"interfaces/Bounds.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/Bounds.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["bounds|polygon",{"_index":1058,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["branches",{"_index":2811,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2937,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2783,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bubble",{"_index":426,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["bugfix",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["bugfix：[amapautocomplete",{"_index":2819,"title":{},"body":{"index.html":{}}}],["building",{"_index":206,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["buildinganimation",{"_index":2177,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["buildingtype",{"_index":207,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["business",{"_index":218,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["businessarea",{"_index":217,"title":{"interfaces/BusinessArea.html":{}},"body":{"interfaces/AddressComponent.html":{},"interfaces/BusinessArea.html":{},"interfaces/ReGeocodePoi.html":{}}}],["businessareas",{"_index":208,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["c",{"_index":1398,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"license.html":{}}}],["c.clearmarkers",{"_index":2265,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["c.getcenter",{"_index":575,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.getextdata",{"_index":578,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.getoptions",{"_index":577,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.getradius",{"_index":576,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.hide",{"_index":568,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setcenter(lnglat",{"_index":570,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setextdata(ext",{"_index":573,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setmap(null",{"_index":2266,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["c.setoptions(opt",{"_index":572,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setradius(radius",{"_index":571,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.show",{"_index":567,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["callback",{"_index":50,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CGeocoder.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Geocoder.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["callbackfn",{"_index":1319,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{},"miscellaneous/typealiases.html":{}}}],["callbackname",{"_index":2009,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["cautocomplete",{"_index":61,"title":{"interfaces/CAutocomplete.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["cbeziercurve",{"_index":62,"title":{"interfaces/CBezierCurve.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["cbeziercurveeditor",{"_index":63,"title":{"interfaces/CBezierCurveEditor.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["cbounds",{"_index":64,"title":{"interfaces/CBounds.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["ccircle",{"_index":65,"title":{"interfaces/CCircle.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CCircle.html":{},"interfaces/Circle.html":{}}}],["ccircleeditor",{"_index":66,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["ccirclemarker",{"_index":67,"title":{"interfaces/CCircleMarker.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{}}}],["cdistrictsearch",{"_index":68,"title":{"interfaces/CDistrictSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["cdriving",{"_index":69,"title":{"interfaces/CDriving.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["ceditor",{"_index":1367,"title":{"interfaces/CEditor.html":{}},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["cellipse",{"_index":70,"title":{"interfaces/CEllipse.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["cellipseeditor",{"_index":71,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["center",{"_index":427,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/District.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/IPoiObject.html":{},"interfaces/MapOptions.html":{},"interfaces/PlaceSearch.html":{},"miscellaneous/variables.html":{}}}],["cgeocoder",{"_index":73,"title":{"interfaces/CGeocoder.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["change",{"_index":438,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["change').subscribe(e",{"_index":901,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["changefilter",{"_index":311,"title":{"classes/ChangeFilter.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/ChangeFilter.html":{}}}],["changefilter(changes",{"_index":1666,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["changefilter.of(changes",{"_index":319,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["changelog",{"_index":2701,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":283,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/ChangeFilter.html":{},"changelog.html":{}}}],["charge",{"_index":2877,"title":{},"body":{"license.html":{}}}],["cheatmap",{"_index":74,"title":{"interfaces/CHeatmap.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["children",{"_index":2407,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["choose",{"_index":247,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["cicon",{"_index":75,"title":{"interfaces/CIcon.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["cinema",{"_index":1670,"title":{"interfaces/Cinema.html":{}},"body":{"interfaces/Cinema.html":{},"interfaces/Poi.html":{}}}],["cinfowindow",{"_index":76,"title":{"interfaces/CInfoWindow.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["circlable",{"_index":1567,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["circle",{"_index":14,"title":{"interfaces/Circle.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CEditor.html":{},"interfaces/Circle.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["circle'},{'name",{"_index":941,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["circle(options",{"_index":997,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["circle.directive",{"_index":2358,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["circle.directive.ts",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circle.then(m",{"_index":1714,"title":{},"body":{"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{}}}],["circle/amap",{"_index":2357,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["circleeditor",{"_index":15,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["circlemarker",{"_index":16,"title":{"interfaces/CircleMarker.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{}}}],["circlemarkerclick",{"_index":439,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["circlemarkerhide",{"_index":440,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["circlemarkeroptions",{"_index":464,"title":{"interfaces/CircleMarkerOptions.html":{}},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{}}}],["circlemarkerservice",{"_index":452,"title":{"injectables/CircleMarkerService.html":{}},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/CircleMarkerService.html":{}}}],["circlemarkershow",{"_index":441,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["circleoptions",{"_index":967,"title":{"interfaces/CircleOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CCircle.html":{},"interfaces/CMouseTool.html":{},"interfaces/Circle.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/MouseTool.html":{}}}],["circleservice",{"_index":1715,"title":{"injectables/CircleService.html":{}},"body":{"injectables/CircleService.html":{}}}],["cities",{"_index":1814,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["city",{"_index":209,"title":{},"body":{"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/CMap.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/SearchResult.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["citycode",{"_index":210,"title":{},"body":{"interfaces/AddressComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Poi.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["cityd",{"_index":2663,"title":{},"body":{"interfaces/TransferOptions.html":{}}}],["cityinfo",{"_index":1727,"title":{"interfaces/CityInfo.html":{}},"body":{"interfaces/CityInfo.html":{},"interfaces/SearchResult.html":{}}}],["citylimit",{"_index":244,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"miscellaneous/variables.html":{}}}],["citylist",{"_index":2543,"title":{},"body":{"interfaces/SearchResult.html":{}}}],["cityname",{"_index":2418,"title":{},"body":{"interfaces/Poi.html":{}}}],["claim",{"_index":2925,"title":{},"body":{"license.html":{}}}],["class",{"_index":316,"title":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"classes/KeyMap.html":{},"classes/Utils.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["class/amap.bounds",{"_index":2511,"title":{},"body":{"interfaces/RectangleOptions.html":{}}}],["class/amap.icon",{"_index":2284,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{}}}],["class/amap.lng",{"_index":1705,"title":{},"body":{"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{}}}],["class/amap.map",{"_index":1380,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["class/amap.pixel",{"_index":2085,"title":{},"body":{"interfaces/InfoWindowOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{}}}],["class/amap.size",{"_index":2086,"title":{},"body":{"interfaces/InfoWindowOptions.html":{}}}],["class/overlays/amap.marker",{"_index":2242,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/ToolbarOptions.html":{}}}],["class/overlays/amap.polygon",{"_index":2449,"title":{},"body":{"interfaces/PolygonOptions.html":{}}}],["classes",{"_index":394,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"classes/KeyMap.html":{},"classes/Utils.html":{},"overview.html":{}}}],["classlist.js",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["clear",{"_index":649,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/IKeyMap.html":{},"interfaces/IPoiObject.html":{},"classes/KeyMap.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["clearavoidpolygons",{"_index":647,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["clearavoidroad",{"_index":645,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["clearinfowindow",{"_index":1533,"title":{},"body":{"interfaces/CMap.html":{}}}],["clearlimitbounds",{"_index":1519,"title":{},"body":{"interfaces/CMap.html":{}}}],["clearmap",{"_index":1529,"title":{},"body":{"interfaces/CMap.html":{}}}],["clearmarkers",{"_index":1597,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["clickable",{"_index":2276,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["clnglat",{"_index":77,"title":{"interfaces/CLngLat.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["clone",{"_index":2863,"title":{},"body":{"index.html":{}}}],["close",{"_index":818,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CInfoWindow.html":{},"interfaces/Editor.html":{},"interfaces/InfoWindow.html":{},"interfaces/MouseTool.html":{}}}],["close').subscribe(e",{"_index":908,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["close(clear",{"_index":1011,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["closewhenclickmap",{"_index":829,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["cluster",{"_index":108,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/RenderObject.html":{}}}],["cluster.then(c",{"_index":2264,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["cluster_ngxamapmodule",{"_index":2321,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["cluster_ngxamapmodule_declarations",{"_index":2322,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["cluster_ngxamapmodule_exports",{"_index":2323,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["clusterer",{"_index":126,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/MarkerClustererService.html":{},"index.html":{}}}],["clusterer'},{'name",{"_index":947,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["clusterer.directive",{"_index":2350,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["clusterer.directive.ts",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterer.service.ts",{"_index":2249,"title":{},"body":{"injectables/MarkerClustererService.html":{},"miscellaneous/variables.html":{}}}],["clusterer.service.ts:15",{"_index":2258,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:16",{"_index":2257,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:17",{"_index":2251,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:30",{"_index":2252,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:44",{"_index":2256,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:51",{"_index":2254,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.ts",{"_index":1582,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:11",{"_index":2215,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:12",{"_index":2226,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:13",{"_index":2218,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:14",{"_index":2219,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:15",{"_index":2222,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:16",{"_index":2223,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:17",{"_index":2224,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:18",{"_index":2230,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:19",{"_index":2233,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:20",{"_index":2234,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:21",{"_index":2235,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:22",{"_index":2217,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:23",{"_index":2231,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:24",{"_index":2232,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:25",{"_index":2220,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:26",{"_index":2221,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:27",{"_index":2216,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:28",{"_index":2227,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:29",{"_index":2225,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:30",{"_index":2228,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer/amap",{"_index":2349,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["clusterer/marker",{"_index":2248,"title":{},"body":{"injectables/MarkerClustererService.html":{},"miscellaneous/variables.html":{}}}],["clusterstyle",{"_index":107,"title":{"interfaces/ClusterStyle.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/ClusterStyle.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{}}}],["cmap",{"_index":78,"title":{"interfaces/CMap.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMap.html":{}}}],["cmarker",{"_index":79,"title":{"interfaces/CMarker.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarker.html":{}}}],["cmarkerclusterer",{"_index":80,"title":{"interfaces/CMarkerClusterer.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["cmousetool",{"_index":81,"title":{"interfaces/CMouseTool.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["cms",{"_index":451,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["comma",{"_index":2044,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["common",{"_index":1371,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["compat",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["complains",{"_index":980,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["complete",{"_index":248,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{}}}],["component",{"_index":140,"title":{"components/AmapInfoWindowComponent.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/Geocode.html":{},"interfaces/ReGeocode.html":{},"classes/Utils.html":{},"index.html":{}}}],["component.ts",{"_index":204,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["component[key",{"_index":2686,"title":{},"body":{"classes/Utils.html":{}}}],["component_template",{"_index":933,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["components",{"_index":803,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"overview.html":{}}}],["components/amap",{"_index":2342,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["components/ngx",{"_index":2337,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["conditions",{"_index":2903,"title":{},"body":{"license.html":{}}}],["config",{"_index":2002,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["connection",{"_index":2933,"title":{},"body":{"license.html":{}}}],["console.error(`[${tag",{"_index":1759,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["console.log('get",{"_index":703,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log('result",{"_index":708,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log('status",{"_index":706,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log(`[${tag",{"_index":1758,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["console.log(data.result.geocodes[0].formattedaddress",{"_index":713,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log(data.result.geocodes[0].location",{"_index":712,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.warn(`[${tag",{"_index":1760,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["const",{"_index":314,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{}}}],["constructor",{"_index":252,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["constructor(@inject(map_api_config",{"_index":2001,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["constructor(_changes",{"_index":1655,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["constructor(config",{"_index":2138,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["constructor(el",{"_index":839,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["constructor(loader",{"_index":2154,"title":{},"body":{"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["constructor(logger",{"_index":253,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapMouseToolService.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/IconService.html":{},"injectables/LabelService.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["constructor(map",{"_index":987,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["constructor(opts",{"_index":377,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["constructor(private",{"_index":370,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/SizeService.html":{}}}],["container",{"_index":1494,"title":{},"body":{"interfaces/CMap.html":{}}}],["containertolnglat(pixel",{"_index":1536,"title":{},"body":{"interfaces/CMap.html":{}}}],["contains",{"_index":1421,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["contains(point",{"_index":1425,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["content",{"_index":816,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/ILabel.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/LabelService.html":{},"interfaces/MarkerOptions.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":187,"title":{},"body":{"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["contract",{"_index":2929,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2897,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2880,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2870,"title":{},"body":{"license.html":{}}}],["core",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":1765,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/TransferPlan.html":{}}}],["count",{"_index":1332,"title":{},"body":{"interfaces/AutocompleteResult.html":{},"interfaces/CHeatmap.html":{},"interfaces/CityInfo.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/PoiList.html":{},"interfaces/RenderObject.html":{},"interfaces/RidingResult.html":{},"interfaces/WalkingResult.html":{}}}],["cp_rating",{"_index":1766,"title":{},"body":{"interfaces/Dining.html":{}}}],["cpixel",{"_index":82,"title":{"interfaces/CPixel.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["cplacesearch",{"_index":83,"title":{"interfaces/CPlaceSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["cpolyeditor",{"_index":84,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["cpolygon",{"_index":85,"title":{"interfaces/CPolygon.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{}}}],["cpolyline",{"_index":86,"title":{"interfaces/CPolyline.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPolyline.html":{},"interfaces/Polyline.html":{}}}],["create",{"_index":1388,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["create(options",{"_index":1394,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["created",{"_index":2170,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["createeditor",{"_index":1389,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["createeditor(c",{"_index":1396,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{}}}],["createeditor(e",{"_index":1870,"title":{},"body":{"injectables/EllipseService.html":{}}}],["createeditor(p",{"_index":2454,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["createeditor(r",{"_index":2516,"title":{},"body":{"injectables/RectangleService.html":{}}}],["createmap",{"_index":2152,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["createmap(el",{"_index":2158,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["createstyle",{"_index":2250,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["createstyle(style",{"_index":2253,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["crectangle",{"_index":87,"title":{"interfaces/CRectangle.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["crectangleeditor",{"_index":88,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["criding",{"_index":89,"title":{"interfaces/CRiding.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["cross",{"_index":1735,"title":{"interfaces/Cross.html":{}},"body":{"interfaces/Cross.html":{},"interfaces/ReGeocode.html":{}}}],["crosses",{"_index":2494,"title":{},"body":{"interfaces/ReGeocode.html":{}}}],["crs",{"_index":2178,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["csize",{"_index":90,"title":{"interfaces/CSize.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["css",{"_index":2837,"title":{},"body":{"index.html":{}}}],["ctext",{"_index":91,"title":{"interfaces/CText.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["ctoolbar",{"_index":92,"title":{"interfaces/CToolBar.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["ctransfer",{"_index":93,"title":{"interfaces/CTransfer.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["ctruckdriving",{"_index":94,"title":{"interfaces/CTruckDriving.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["cuisines",{"_index":1767,"title":{},"body":{"interfaces/Dining.html":{}}}],["cursor",{"_index":428,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["curve",{"_index":128,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["curve'},{'name",{"_index":939,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["curve.directive",{"_index":2363,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["curve.directive.ts",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curve.service.ts",{"_index":1385,"title":{},"body":{"injectables/BezierCurveService.html":{},"miscellaneous/variables.html":{}}}],["curve.service.ts:14",{"_index":1404,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:15",{"_index":1402,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:16",{"_index":1393,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:27",{"_index":1395,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:34",{"_index":1400,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:40",{"_index":1401,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:48",{"_index":1397,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.ts",{"_index":1336,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["curve.ts:10",{"_index":1355,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:11",{"_index":1347,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:12",{"_index":1352,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:13",{"_index":1345,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:14",{"_index":1344,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:15",{"_index":1342,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:16",{"_index":1348,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:17",{"_index":1356,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:18",{"_index":1351,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:19",{"_index":1349,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:20",{"_index":1343,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve/amap",{"_index":2362,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["curve/bezier",{"_index":1384,"title":{},"body":{"injectables/BezierCurveService.html":{},"miscellaneous/variables.html":{}}}],["curvepath",{"_index":1354,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CBezierCurve.html":{},"miscellaneous/typealiases.html":{}}}],["cwalking",{"_index":95,"title":{"interfaces/CWalking.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["d",{"_index":1745,"title":{},"body":{"injectables/DebugLoggerService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{}}}],["d(tag",{"_index":1749,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["damages",{"_index":2926,"title":{},"body":{"license.html":{}}}],["data",{"_index":777,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CHeatmap.html":{},"interfaces/CTransfer.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Transfer.html":{}}}],["data.result",{"_index":709,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["data.result.info",{"_index":710,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["data.status",{"_index":707,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["dataparser",{"_index":1468,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["dataset",{"_index":749,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/Heatmap.html":{}}}],["datatype",{"_index":245,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"interfaces/AutocompleteOptions.html":{},"miscellaneous/variables.html":{}}}],["dblclick",{"_index":442,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["deal",{"_index":2885,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2934,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1983,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["debugloggerservice",{"_index":1742,"title":{"injectables/DebugLoggerService.html":{}},"body":{"injectables/DebugLoggerService.html":{},"modules/NgxAmapModule.html":{}}}],["declarations",{"_index":2317,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["declare",{"_index":369,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["declared",{"_index":977,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["deep",{"_index":2432,"title":{},"body":{"interfaces/Poi.html":{}}}],["deep_src",{"_index":1672,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["deep_type",{"_index":2419,"title":{},"body":{"interfaces/Poi.html":{}}}],["default",{"_index":296,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["defaultlayer",{"_index":2179,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":53,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"injectables/DocumentRef.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"injectables/WindowRef.html":{}}}],["delete",{"_index":1968,"title":{},"body":{"interfaces/IKeyMap.html":{},"injectables/IconService.html":{},"classes/KeyMap.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["delete(key",{"_index":1967,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["demo",{"_index":2734,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demoor",{"_index":2868,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2316,"title":{"dependencies.html":{}},"body":{"modules/NgxAmapModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":353,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["destination",{"_index":635,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Riding.html":{},"interfaces/RidingResult.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["destroy",{"_index":1390,"title":{},"body":{"injectables/BezierCurveService.html":{},"interfaces/CMap.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["destroy(beziercurve",{"_index":1399,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["destroy(circle",{"_index":1710,"title":{},"body":{"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{}}}],["destroy(cluster",{"_index":2255,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["destroy(ellipse",{"_index":1872,"title":{},"body":{"injectables/EllipseService.html":{}}}],["destroy(heatmap",{"_index":1930,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["destroy(infowindow",{"_index":2091,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["destroy(marker",{"_index":2290,"title":{},"body":{"injectables/MarkerService.html":{}}}],["destroy(polygon",{"_index":2457,"title":{},"body":{"injectables/PolygonService.html":{}}}],["destroy(polyline",{"_index":2485,"title":{},"body":{"injectables/PolylineService.html":{}}}],["destroy(rectangle",{"_index":2519,"title":{},"body":{"injectables/RectangleService.html":{}}}],["destroy(text",{"_index":2621,"title":{},"body":{"injectables/TextService.html":{}}}],["destroy(toolbar",{"_index":2643,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["destroymap",{"_index":2153,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["detail",{"_index":1778,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Poi.html":{}}}],["detailonamap",{"_index":1077,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["detailonamap(obj",{"_index":1076,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["dining",{"_index":1761,"title":{"interfaces/Dining.html":{}},"body":{"interfaces/Dining.html":{},"interfaces/Poi.html":{}}}],["direction",{"_index":1146,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/Cross.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Road.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":219,"title":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"index.html":{}}}],["directives",{"_index":221,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"overview.html":{}}}],["directives/amap",{"_index":2340,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["discount",{"_index":1776,"title":{"interfaces/Discount.html":{}},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Poi.html":{}}}],["discounts",{"_index":2420,"title":{},"body":{"interfaces/Poi.html":{}}}],["distance",{"_index":1737,"title":{},"body":{"interfaces/Cross.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/LngLat.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Road.html":{},"interfaces/Segment.html":{},"interfaces/TMC.html":{},"interfaces/TransferPlan.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["distance(lnglat",{"_index":1486,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["distribute",{"_index":2893,"title":{},"body":{"license.html":{}}}],["district",{"_index":115,"title":{"interfaces/District.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveStep.html":{},"modules/NgxAmapModule.html":{},"interfaces/TMC.html":{},"interfaces/Tip.html":{},"interfaces/ViaCity.html":{},"miscellaneous/variables.html":{}}}],["districtlist",{"_index":1786,"title":{},"body":{"interfaces/District.html":{},"interfaces/DistrictSearchResult.html":{}}}],["districts",{"_index":1823,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["districtsearch",{"_index":17,"title":{"interfaces/DistrictSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["districtsearchoptions",{"_index":583,"title":{"interfaces/DistrictSearchOptions.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{}}}],["districtsearchresult",{"_index":586,"title":{"interfaces/DistrictSearchResult.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{}}}],["districtsearch事件，返回可以被subscribe的observable",{"_index":595,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["document",{"_index":1801,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["documentation",{"_index":2883,"title":{},"body":{"license.html":{}}}],["documentref",{"_index":1794,"title":{"injectables/DocumentRef.html":{}},"body":{"injectables/DocumentRef.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{},"injectables/WindowRef.html":{}}}],["dolocation",{"_index":1136,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["dom",{"_index":806,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["doubleclickzoom",{"_index":2180,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["dragenable",{"_index":2181,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["draggable",{"_index":2277,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["drive",{"_index":1810,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DrivingResult.html":{}}}],["driveroute",{"_index":1802,"title":{"interfaces/DriveRoute.html":{}},"body":{"interfaces/DriveRoute.html":{},"interfaces/DrivingResult.html":{}}}],["drivestep",{"_index":1809,"title":{"interfaces/DriveStep.html":{}},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["driving",{"_index":18,"title":{"interfaces/Driving.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Driving.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["driving.service",{"_index":2369,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["driving.service.ts",{"_index":614,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"miscellaneous/variables.html":{}}}],["driving.service.ts:100",{"_index":669,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:104",{"_index":681,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:108",{"_index":673,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:17",{"_index":619,"title":{},"body":{"injectables/AmapDrivingService.html":{},"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:19",{"_index":616,"title":{},"body":{"injectables/AmapDrivingService.html":{},"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:24",{"_index":621,"title":{},"body":{"injectables/AmapDrivingService.html":{},"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:32",{"_index":618,"title":{},"body":{"injectables/AmapDrivingService.html":{},"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:41",{"_index":664,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:48",{"_index":682,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:57",{"_index":670,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:61",{"_index":671,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:67",{"_index":1287,"title":{},"body":{"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:71",{"_index":1288,"title":{},"body":{"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:73",{"_index":679,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:77",{"_index":675,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:81",{"_index":677,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:85",{"_index":667,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:89",{"_index":666,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:93",{"_index":665,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:97",{"_index":668,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.ts",{"_index":1647,"title":{},"body":{"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["driving.ts:12",{"_index":2676,"title":{},"body":{"interfaces/TruckDriving.html":{}}}],["driving.ts:16",{"_index":2675,"title":{},"body":{"interfaces/TruckDriving.html":{}}}],["driving.ts:17",{"_index":2677,"title":{},"body":{"interfaces/TruckDriving.html":{}}}],["driving/amap",{"_index":613,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["driving/amap.driving",{"_index":133,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["driving/amap.truck",{"_index":134,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["driving/drive",{"_index":165,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["driving/driving",{"_index":168,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["drivingoptions",{"_index":617,"title":{"interfaces/DrivingOptions.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{}}}],["drivingresult",{"_index":622,"title":{"interfaces/DrivingResult.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/TruckDriving.html":{}}}],["driving事件，返回可以被subscribe的observable",{"_index":632,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["dynamic",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1746,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/LoggerService.html":{}}}],["e(tag",{"_index":1752,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["editor",{"_index":1366,"title":{"interfaces/Editor.html":{}},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["editor]=\"true",{"_index":2736,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["editoradjust",{"_index":2828,"title":{},"body":{"index.html":{}}}],["editoradjust)等，详见各demo",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["editoroptions]=\"editoroptions",{"_index":2739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["editors",{"_index":1372,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["editor相关事件emitter，例如：(editoraddnode",{"_index":2742,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["el",{"_index":257,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/MapAPIService.html":{}}}],["element",{"_index":931,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["elementref",{"_index":258,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"components/AmapInfoWindowComponent.html":{}}}],["ellipse",{"_index":19,"title":{"interfaces/Ellipse.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"changelog.html":{},"index.html":{}}}],["ellipse'},{'name",{"_index":944,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["ellipse.directive",{"_index":2365,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["ellipse.directive.ts",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellipse.then(m",{"_index":1878,"title":{},"body":{"injectables/EllipseService.html":{}}}],["ellipse/amap",{"_index":2364,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["ellipseeditor",{"_index":20,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"miscellaneous/typealiases.html":{}}}],["ellipseoptions",{"_index":1449,"title":{"interfaces/EllipseOptions.html":{}},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{}}}],["ellipseservice",{"_index":1866,"title":{"injectables/EllipseService.html":{}},"body":{"injectables/EllipseService.html":{}}}],["email",{"_index":2421,"title":{},"body":{"interfaces/Poi.html":{}}}],["empty",{"_index":1665,"title":{},"body":{"classes/ChangeFilter.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["end",{"_index":1845,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["end_location",{"_index":1815,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["end_time",{"_index":1779,"title":{},"body":{"interfaces/Discount.html":{}}}],["entr_location",{"_index":2422,"title":{},"body":{"interfaces/Poi.html":{}}}],["entries",{"_index":1973,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["entry.key}=${entry.value",{"_index":2050,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["environment_rating",{"_index":1768,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Hotel.html":{}}}],["equals",{"_index":2123,"title":{},"body":{"interfaces/LngLat.html":{},"interfaces/Pixel.html":{}}}],["equals(lnglat",{"_index":1490,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["equals(point",{"_index":1612,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["error",{"_index":249,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["etime",{"_index":1909,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["event",{"_index":21,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"license.html":{}}}],["eventbinder",{"_index":366,"title":{"classes/EventBinder.html":{}},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["eventbinder:7",{"_index":407,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["eventemitter",{"_index":266,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["eventlistener",{"_index":191,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["eventname",{"_index":185,"title":{},"body":{"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/Editor.html":{}}}],["events",{"_index":516,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["example",{"_index":687,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"index.html":{}}}],["exit_location",{"_index":2423,"title":{},"body":{"interfaces/Poi.html":{}}}],["expandzoomrange",{"_index":2182,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":138,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["exportas",{"_index":511,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"changelog.html":{}}}],["exported",{"_index":981,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["exports",{"_index":2320,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["express",{"_index":2913,"title":{},"body":{"license.html":{}}}],["ext",{"_index":499,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["extargs",{"_index":200,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["extdata",{"_index":429,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":375,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"interfaces/CLngLat.html":{},"interfaces/CPixel.html":{},"interfaces/CSize.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"interfaces/LngLat.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/Pixel.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"interfaces/Size.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["extensions",{"_index":1791,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["extra",{"_index":515,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["f",{"_index":1565,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["faci_rating",{"_index":1941,"title":{},"body":{"interfaces/Hotel.html":{}}}],["false",{"_index":462,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["features",{"_index":2183,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["ferry",{"_index":1840,"title":{},"body":{"interfaces/DrivingOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{}}}],["files",{"_index":2884,"title":{},"body":{"license.html":{}}}],["fillcolor",{"_index":430,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["fillopacity",{"_index":431,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":313,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["filter((k",{"_index":2036,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["filter.has('city').subscribe(v",{"_index":320,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["filter.has('citylimit').subscribe(v",{"_index":324,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["filter.has('content').subscribe(v",{"_index":892,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.has('direction').subscribe(v",{"_index":1206,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.has('extdata').subscribe(v",{"_index":525,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["filter.has('hidden').subscribe(v",{"_index":531,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["filter.has('isopen').subscribe(v",{"_index":894,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.has('locate').subscribe(v",{"_index":1209,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.has('options').subscribe(v",{"_index":523,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["filter.has('radius').subscribe(v",{"_index":527,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["filter.has('ruler').subscribe(v",{"_index":1203,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.has('type').subscribe(v",{"_index":322,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["filter.notempty('center').subscribe(v",{"_index":529,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["filter.notempty('dataset').subscribe(v",{"_index":790,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["filter.notempty('offset').subscribe(v",{"_index":1212,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.notempty('position').subscribe(v",{"_index":895,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.notempty('size').subscribe(v",{"_index":897,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.ts",{"_index":1652,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:11",{"_index":1662,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:22",{"_index":1659,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:4",{"_index":1656,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:7",{"_index":1664,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["first_id",{"_index":1738,"title":{},"body":{"interfaces/Cross.html":{}}}],["first_name",{"_index":1739,"title":{},"body":{"interfaces/Cross.html":{}}}],["fitness",{"_index":2918,"title":{},"body":{"license.html":{}}}],["following",{"_index":2902,"title":{},"body":{"license.html":{}}}],["font",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["formattedaddress",{"_index":1895,"title":{},"body":{"interfaces/Geocode.html":{},"interfaces/ReGeocode.html":{}}}],["forroot",{"_index":2328,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["forroot(mapapiloaderconfig",{"_index":2329,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["free",{"_index":2876,"title":{},"body":{"license.html":{}}}],["function",{"_index":59,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/Text.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":2900,"title":{},"body":{"license.html":{}}}],["general",{"_index":1365,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["geocode",{"_index":147,"title":{"interfaces/Geocode.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderResult.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{}}}],["geocode.ts",{"_index":2493,"title":{},"body":{"interfaces/ReGeocode.html":{}}}],["geocoder",{"_index":22,"title":{"interfaces/Geocoder.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["geocoder.getlocation(this.address",{"_index":701,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service",{"_index":2353,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["geocoder.service.ts",{"_index":685,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"miscellaneous/variables.html":{}}}],["geocoder.service.ts:15",{"_index":734,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:22",{"_index":739,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:31",{"_index":737,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:35",{"_index":736,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:41",{"_index":738,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:45",{"_index":735,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:87",{"_index":717,"title":{},"body":{"injectables/AmapGeocoderService.html":{}}}],["geocoder.service.ts:89",{"_index":714,"title":{},"body":{"injectables/AmapGeocoderService.html":{}}}],["geocoder.service.ts:93",{"_index":716,"title":{},"body":{"injectables/AmapGeocoderService.html":{}}}],["geocoder/address",{"_index":139,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/amap",{"_index":684,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["geocoder/amap.geocoder",{"_index":110,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/business",{"_index":141,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/cross",{"_index":143,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/geocode",{"_index":144,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/geocoder",{"_index":145,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/re",{"_index":146,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/road",{"_index":149,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoderesult",{"_index":1454,"title":{"interfaces/GeocodeResult.html":{}},"body":{"interfaces/CGeocoder.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{}}}],["geocoderoptions",{"_index":715,"title":{"interfaces/GeocoderOptions.html":{}},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{}}}],["geocoderresult",{"_index":1904,"title":{"interfaces/GeocoderResult.html":{}},"body":{"interfaces/GeocoderResult.html":{}}}],["geocoder事件，返回可以被subscribe的observable",{"_index":722,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["geocodes",{"_index":1897,"title":{},"body":{"interfaces/GeocodeResult.html":{},"interfaces/GeocoderResult.html":{}}}],["geodesic",{"_index":2478,"title":{},"body":{"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["geopromise",{"_index":691,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["get(key",{"_index":1966,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["getaddress",{"_index":732,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{},"interfaces/Geocoder.html":{}}}],["getaddress(location",{"_index":727,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["getalloverlays(type",{"_index":1514,"title":{},"body":{"interfaces/CMap.html":{}}}],["getangle",{"_index":1551,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getanimation",{"_index":1545,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getarea",{"_index":1622,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["getavoidpolygons",{"_index":651,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["getavoidroad",{"_index":653,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["getbounds",{"_index":1337,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["getcenter",{"_index":416,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{}}}],["getcity(callback",{"_index":1501,"title":{},"body":{"interfaces/CMap.html":{}}}],["getclickable",{"_index":1547,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getclusterscount",{"_index":1588,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getcontainer",{"_index":1499,"title":{},"body":{"interfaces/CMap.html":{}}}],["getcontent",{"_index":819,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/InfoWindow.html":{}}}],["getctrllineoptions",{"_index":1370,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["getdataset",{"_index":745,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["getdefaultcursor",{"_index":1506,"title":{},"body":{"interfaces/CMap.html":{}}}],["getdetails",{"_index":1078,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["getdetails(poiid",{"_index":1060,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["getdraggable",{"_index":1558,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getextdata",{"_index":417,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["getfeatures",{"_index":1541,"title":{},"body":{"interfaces/CMap.html":{}}}],["getgridsize",{"_index":1589,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getheight",{"_index":1633,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["geticon",{"_index":1556,"title":{},"body":{"interfaces/CMarker.html":{}}}],["getimagesize",{"_index":1473,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["getisopen",{"_index":820,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["getlabel",{"_index":1550,"title":{},"body":{"interfaces/CMarker.html":{}}}],["getlabelzindex",{"_index":1502,"title":{},"body":{"interfaces/CMap.html":{}}}],["getlang",{"_index":1068,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["getlat",{"_index":1489,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["getlayers",{"_index":1497,"title":{},"body":{"interfaces/CMap.html":{}}}],["getlength",{"_index":1338,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CPolyline.html":{},"interfaces/Polyline.html":{}}}],["getlimitbounds",{"_index":1503,"title":{},"body":{"interfaces/CMap.html":{}}}],["getlng",{"_index":1488,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["getloaded",{"_index":620,"title":{},"body":{"injectables/AmapDrivingService.html":{},"injectables/AmapRidingService.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{}}}],["getlocation",{"_index":733,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/Geocoder.html":{},"interfaces/ToolBar.html":{}}}],["getlocation(address",{"_index":724,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["getmap",{"_index":746,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CText.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/Text.html":{}}}],["getmapstyle",{"_index":1539,"title":{},"body":{"interfaces/CMap.html":{}}}],["getmarkeroptions",{"_index":1369,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["getmarkers",{"_index":1599,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getmaxzoom",{"_index":1590,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getminclustersize",{"_index":1591,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getnative",{"_index":409,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{}}}],["getnativedocument",{"_index":1797,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["getnativewindow",{"_index":1800,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["getnortheast",{"_index":1422,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["getoffset",{"_index":1137,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["getoptions",{"_index":418,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["getoptionsfor",{"_index":2682,"title":{},"body":{"classes/Utils.html":{}}}],["getoptionsfor(component",{"_index":2683,"title":{},"body":{"classes/Utils.html":{}}}],["getpath",{"_index":1339,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{}}}],["getposition",{"_index":821,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["getradius",{"_index":419,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["getresolution(point",{"_index":1507,"title":{},"body":{"interfaces/CMap.html":{}}}],["getrotation",{"_index":1504,"title":{},"body":{"interfaces/CMap.html":{}}}],["getscale(dpi",{"_index":1508,"title":{},"body":{"interfaces/CMap.html":{}}}],["getshadow",{"_index":1577,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getshape",{"_index":1580,"title":{},"body":{"interfaces/CMarker.html":{}}}],["getsize",{"_index":822,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/InfoWindow.html":{},"classes/KeyMap.html":{}}}],["getsouthwest",{"_index":1423,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["getsrcfromconfig",{"_index":2137,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["getsrcfromconfig(callbackname",{"_index":2026,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["getstatus",{"_index":1505,"title":{},"body":{"interfaces/CMap.html":{}}}],["getstyles",{"_index":1592,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getters",{"_index":574,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["gettext",{"_index":1639,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getting",{"_index":2699,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":1573,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["gettop",{"_index":1575,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getwidth",{"_index":1632,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["getx",{"_index":1610,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["gety",{"_index":1611,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["getzindex",{"_index":1553,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getzoom",{"_index":1496,"title":{},"body":{"interfaces/CMap.html":{}}}],["github",{"_index":2810,"title":{},"body":{"index.html":{}}}],["globals",{"_index":1988,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{}}}],["globals.ts",{"_index":1796,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["globals.ts:12",{"_index":1798,"title":{},"body":{"injectables/DocumentRef.html":{}}}],["globals.ts:5",{"_index":2698,"title":{},"body":{"injectables/WindowRef.html":{}}}],["gradient",{"_index":750,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/HeatmapOptions.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2875,"title":{},"body":{"license.html":{}}}],["gridmapforeign",{"_index":2184,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["gridsize",{"_index":2237,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["groupbuy",{"_index":1907,"title":{"interfaces/Groupbuy.html":{}},"body":{"interfaces/Groupbuy.html":{},"interfaces/Poi.html":{}}}],["groupbuy_price",{"_index":1910,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["groupbuys",{"_index":2424,"title":{},"body":{"interfaces/Poi.html":{}}}],["handler",{"_index":186,"title":{},"body":{"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["has(key",{"_index":1658,"title":{},"body":{"classes/ChangeFilter.html":{},"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["health_rating",{"_index":1942,"title":{},"body":{"interfaces/Hotel.html":{}}}],["heatmap",{"_index":23,"title":{"interfaces/Heatmap.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"changelog.html":{},"index.html":{}}}],["heatmap'},{'name",{"_index":945,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["heatmap.directive",{"_index":2368,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["heatmap.directive.ts",{"_index":742,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"miscellaneous/variables.html":{}}}],["heatmap.directive.ts:102",{"_index":769,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:106",{"_index":770,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:23",{"_index":782,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:26",{"_index":763,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:27",{"_index":758,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:28",{"_index":760,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:29",{"_index":764,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:32",{"_index":762,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:33",{"_index":757,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:36",{"_index":759,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:39",{"_index":765,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:41",{"_index":781,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:42",{"_index":755,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:49",{"_index":774,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:51",{"_index":772,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:68",{"_index":773,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:73",{"_index":766,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:76",{"_index":768,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:80",{"_index":780,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:84",{"_index":779,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:88",{"_index":771,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:93",{"_index":778,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:97",{"_index":776,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.then(hm",{"_index":1937,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["heatmap/amap",{"_index":741,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["heatmapdata",{"_index":756,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["heatmapdataset",{"_index":1464,"title":{"interfaces/HeatmapDataSet.html":{}},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["heatmapdataurl",{"_index":1466,"title":{"interfaces/HeatmapDataUrl.html":{}},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["heatmaplnglatdata",{"_index":1462,"title":{"interfaces/HeatmapLngLatData.html":{}},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["heatmapoptions",{"_index":761,"title":{"interfaces/HeatmapOptions.html":{}},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{}}}],["heatmapservice",{"_index":754,"title":{"injectables/HeatmapService.html":{}},"body":{"directives/AmapHeatmapDirective.html":{},"injectables/HeatmapService.html":{}}}],["height",{"_index":1635,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/ISize.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TruckDrivingOptions.html":{},"index.html":{}}}],["here",{"_index":978,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["hereby",{"_index":2874,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":432,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["hide",{"_index":420,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["hidedirection",{"_index":1138,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["hidelocation",{"_index":1139,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["hidemarkers",{"_index":1841,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["hideruler",{"_index":1140,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["hm.setmap(null",{"_index":1938,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["hms",{"_index":753,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["holders",{"_index":2923,"title":{},"body":{"license.html":{}}}],["hostmarker",{"_index":817,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["hotel",{"_index":1939,"title":{"interfaces/Hotel.html":{}},"body":{"interfaces/Hotel.html":{},"interfaces/Poi.html":{}}}],["html",{"_index":930,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"dependencies.html":{},"index.html":{}}}],["htmldivelement",{"_index":1500,"title":{},"body":{"interfaces/CMap.html":{},"injectables/MapAPIService.html":{}}}],["htmlelement",{"_index":2410,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["https://github.com/rollup/rollup/issues/1048",{"_index":986,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["https://webapi.amap.com/maps",{"_index":1994,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["https或者http",{"_index":2841,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":975,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["i(tag",{"_index":1754,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["i.join",{"_index":2048,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["iclusterstyle",{"_index":1946,"title":{"interfaces/IClusterStyle.html":{}},"body":{"interfaces/IClusterStyle.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/RenderObject.html":{}}}],["icon",{"_index":24,"title":{"interfaces/Icon.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icon'}.imageoffset",{"_index":2073,"title":{},"body":{"injectables/IconService.html":{}}}],["icon'}.imagesize",{"_index":2070,"title":{},"body":{"injectables/IconService.html":{}}}],["icon'}.size",{"_index":2068,"title":{},"body":{"injectables/IconService.html":{}}}],["icon/icon.service",{"_index":2293,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["iconoption",{"_index":2065,"title":{},"body":{"injectables/IconService.html":{}}}],["iconoption.imageoffset",{"_index":2071,"title":{},"body":{"injectables/IconService.html":{}}}],["iconoption.imagesize",{"_index":2069,"title":{},"body":{"injectables/IconService.html":{}}}],["iconoption.size",{"_index":2066,"title":{},"body":{"injectables/IconService.html":{}}}],["iconservice",{"_index":2057,"title":{"injectables/IconService.html":{}},"body":{"injectables/IconService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/TextService.html":{}}}],["id",{"_index":1434,"title":{},"body":{"interfaces/BusinessArea.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Road.html":{}}}],["iicon",{"_index":1471,"title":{"interfaces/IIcon.html":{}},"body":{"interfaces/CIcon.html":{},"interfaces/IIcon.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"index.html":{}}}],["ikeymap",{"_index":1954,"title":{"interfaces/IKeyMap.html":{}},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["ilabel",{"_index":1974,"title":{"interfaces/ILabel.html":{}},"body":{"interfaces/ILabel.html":{},"injectables/LabelService.html":{},"interfaces/MarkerOptions.html":{}}}],["ilnglat",{"_index":455,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"injectables/InfoWindowService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{},"miscellaneous/typealiases.html":{}}}],["ilnglat|ilnglat",{"_index":728,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["image",{"_index":1952,"title":{},"body":{"interfaces/IIcon.html":{}}}],["imageoffset",{"_index":1731,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"injectables/MarkerClustererService.html":{}}}],["imagesize",{"_index":1953,"title":{},"body":{"interfaces/IIcon.html":{}}}],["imapapiloaderconfig",{"_index":1976,"title":{"interfaces/IMapAPILoaderConfig.html":{}},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{}}}],["implements",{"_index":225,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["implied",{"_index":2914,"title":{},"body":{"license.html":{}}}],["import",{"_index":96,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["imports",{"_index":2834,"title":{},"body":{"index.html":{}}}],["included",{"_index":2907,"title":{},"body":{"license.html":{}}}],["including",{"_index":2887,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1957,"title":{},"body":{"interfaces/IKeyMap.html":{}}}],["indoormap",{"_index":2185,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["info.ts",{"_index":1728,"title":{},"body":{"interfaces/CityInfo.html":{}}}],["infowindow",{"_index":25,"title":{"interfaces/InfoWindow.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{}}}],["infowindow.close",{"_index":920,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getcontent",{"_index":926,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getisopen",{"_index":925,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getposition",{"_index":927,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getsize",{"_index":928,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.open(map",{"_index":2103,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["infowindow.setcontent(content",{"_index":921,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.setposition(position",{"_index":922,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.setsize(value",{"_index":924,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.then(w",{"_index":2101,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["infowindowoptions",{"_index":881,"title":{"interfaces/InfoWindowOptions.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{}}}],["infowindows",{"_index":840,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindowservice",{"_index":841,"title":{"injectables/InfoWindowService.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/InfoWindowService.html":{}}}],["inherited",{"_index":406,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["inject",{"_index":1985,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["injectable",{"_index":349,"title":{"injectables/AmapAutocompleteService.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"injectables/AmapMouseToolService.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{}},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{}}}],["injectables",{"_index":350,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"injectables/AmapMouseToolService.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1986,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["injectiontoken('ngx",{"_index":1990,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":300,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/AutocompleteOptions.html":{}}}],["input[amapautocomplete",{"_index":231,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["input[amapautocomplete]'},{'name",{"_index":936,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["input[autocomplete",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["inputs",{"_index":243,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["install",{"_index":2830,"title":{},"body":{"index.html":{}}}],["instance",{"_index":189,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["instanceof",{"_index":1884,"title":{},"body":{"classes/EventBinder.html":{}}}],["instruction",{"_index":1816,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/Segment.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"classes/KeyMap.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{}}}],["interface/autocomplete",{"_index":1324,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["interface/callback.type",{"_index":1326,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["interface/district",{"_index":1442,"title":{},"body":{"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["interface/driving/driving",{"_index":1446,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["interface/driving/truck",{"_index":1648,"title":{},"body":{"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["interface/geocoder",{"_index":1453,"title":{},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["interface/icon.interface",{"_index":1472,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["interface/info",{"_index":1477,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["interface/layers/heatmap",{"_index":1458,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["interface/lng",{"_index":1444,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["interface/map",{"_index":1493,"title":{},"body":{"interfaces/CMap.html":{}}}],["interface/marker",{"_index":1584,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["interface/overlays/bezier",{"_index":1357,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["interface/overlays/circle",{"_index":1436,"title":{},"body":{"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CMouseTool.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/MouseTool.html":{}}}],["interface/overlays/ellipse",{"_index":1450,"title":{},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["interface/overlays/marker",{"_index":1543,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["interface/overlays/polygon",{"_index":1606,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["interface/overlays/polyline",{"_index":1607,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/CPolyline.html":{},"interfaces/MouseTool.html":{},"interfaces/Polyline.html":{}}}],["interface/overlays/rectangle",{"_index":1626,"title":{},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["interface/overlays/text",{"_index":1638,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["interface/pixel.interface",{"_index":1609,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{},"interfaces/ToolbarOptions.html":{}}}],["interface/place",{"_index":1615,"title":{},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["interface/riding/riding",{"_index":1629,"title":{},"body":{"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["interface/size.interface",{"_index":1631,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["interface/toolbar",{"_index":1643,"title":{},"body":{"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["interface/transfer/transfer",{"_index":1645,"title":{},"body":{"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["interface/walking/walking",{"_index":1650,"title":{},"body":{"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"overview.html":{}}}],["intro",{"_index":1673,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["ipixel",{"_index":849,"title":{"interfaces/IPixel.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CPixel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IPixel.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"injectables/TextService.html":{},"interfaces/ToolbarOptions.html":{},"index.html":{}}}],["ipoiobject",{"_index":1618,"title":{"interfaces/IPoiObject.html":{}},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["isaveragecenter",{"_index":1602,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["iscustom",{"_index":830,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["ishotspot",{"_index":2186,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["isize",{"_index":853,"title":{"interfaces/ISize.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CSize.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ISize.html":{},"injectables/MarkerClustererService.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{}}}],["isopen",{"_index":831,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["isopenchange",{"_index":835,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["isoutline",{"_index":1375,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":985,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["issue#23",{"_index":2718,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["istop",{"_index":2609,"title":{},"body":{"interfaces/Text.html":{}}}],["jogenable",{"_index":2187,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":2043,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["js",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["jsonp",{"_index":1469,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["jsonp格式数据的服务地址url",{"_index":1467,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["k",{"_index":1566,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/Text.html":{}}}],["key",{"_index":1660,"title":{},"body":{"classes/ChangeFilter.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"classes/KeyMap.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["keyboardenable",{"_index":2188,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":1959,"title":{"classes/KeyMap.html":{}},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["keys",{"_index":1969,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{},"classes/Utils.html":{}}}],["keys.foreach(key",{"_index":2685,"title":{},"body":{"classes/Utils.html":{}}}],["keyword",{"_index":1094,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/PlaceSearch.html":{}}}],["keywordlist",{"_index":2544,"title":{},"body":{"interfaces/SearchResult.html":{}}}],["kind",{"_index":2912,"title":{},"body":{"license.html":{}}}],["label",{"_index":2120,"title":{},"body":{"injectables/LabelService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"miscellaneous/variables.html":{}}}],["label'}.offset",{"_index":2122,"title":{},"body":{"injectables/LabelService.html":{}}}],["label.interface",{"_index":2283,"title":{},"body":{"interfaces/MarkerOptions.html":{}}}],["label/label.service",{"_index":2294,"title":{},"body":{"injectables/MarkerService.html":{}}}],["labelservice",{"_index":2116,"title":{"injectables/LabelService.html":{}},"body":{"injectables/LabelService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{}}}],["labelzindex",{"_index":2189,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":1099,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/MapOptions.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"miscellaneous/variables.html":{}}}],["lat",{"_index":99,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/Cross.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolBar.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["lat.interface",{"_index":1445,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["lat.interface.ts",{"_index":2953,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lat.ts",{"_index":1482,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["lat.ts:3",{"_index":2128,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:4",{"_index":2124,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:5",{"_index":2127,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:6",{"_index":2126,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:7",{"_index":2125,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:8",{"_index":2129,"title":{},"body":{"interfaces/LngLat.html":{}}}],["layers",{"_index":164,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["layers/amap.heatmap",{"_index":132,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["lcode",{"_index":1824,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["leaveat",{"_index":1263,"title":{},"body":{"classes/AmapTransferWrapper.html":{},"interfaces/Transfer.html":{}}}],["leaveat(time",{"_index":1259,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["legend",{"_index":929,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["level",{"_index":609,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/Geocode.html":{},"interfaces/Scenic.html":{}}}],["liability",{"_index":2927,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2924,"title":{},"body":{"license.html":{}}}],["lib/.ng_pkg_build/ngx",{"_index":982,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["license",{"_index":2840,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":290,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/PlaceSearch.html":{}}}],["limitation",{"_index":2888,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2915,"title":{},"body":{"license.html":{}}}],["linejoin",{"_index":2479,"title":{},"body":{"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":160,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/SearchResult.html":{}}}],["list.ts",{"_index":2434,"title":{},"body":{"interfaces/PoiList.html":{}}}],["listener",{"_index":198,"title":{},"body":{"interfaces/AMapEvent.html":{},"classes/EventBinder.html":{}}}],["listenerpromise",{"_index":1886,"title":{},"body":{"classes/EventBinder.html":{}}}],["listenerpromise.then(listener",{"_index":1891,"title":{},"body":{"classes/EventBinder.html":{}}}],["litestyle",{"_index":1147,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["lng",{"_index":1463,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/CLngLat.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/LngLat.html":{}}}],["lnglat",{"_index":26,"title":{"interfaces/LngLat.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/Cross.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolBar.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{},"index.html":{}}}],["lnglattocontainer(lnglat",{"_index":1537,"title":{},"body":{"interfaces/CMap.html":{}}}],["lnglattopixel(lnglat",{"_index":1535,"title":{},"body":{"interfaces/CMap.html":{}}}],["lnglat|array",{"_index":1487,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["lnglat|ilnglat",{"_index":569,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CEllipse.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["lnglat|number",{"_index":1437,"title":{},"body":{"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["load",{"_index":2006,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["load(name",{"_index":2413,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["loaded",{"_index":615,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["loadeditor",{"_index":1391,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["loader",{"_index":1992,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{},"dependencies.html":{}}}],["loader.service",{"_index":365,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["loader.service.ts",{"_index":1980,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{},"miscellaneous/variables.html":{}}}],["loader.service.ts:10",{"_index":2412,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["loader.service.ts:14",{"_index":2414,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["loader.service.ts:16",{"_index":2147,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:18",{"_index":2143,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:19",{"_index":2144,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:20",{"_index":2142,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:21",{"_index":2145,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:22",{"_index":2146,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:23",{"_index":2139,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:34",{"_index":2141,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:60",{"_index":2140,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader/map",{"_index":1979,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"miscellaneous/variables.html":{}}}],["loader/plugin",{"_index":364,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":2008,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{}}}],["localhost:8080",{"_index":2866,"title":{},"body":{"index.html":{}}}],["locate",{"_index":1148,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":704,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/BusinessArea.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/Cross.html":{},"interfaces/Geocode.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Road.html":{}}}],["locationmarker",{"_index":1149,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":260,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["logger.service",{"_index":2336,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["logger.service.ts",{"_index":1744,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:12",{"_index":1753,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:16",{"_index":1757,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:20",{"_index":1751,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:4",{"_index":1748,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:8",{"_index":1755,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger/logger.service",{"_index":363,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["loggerservice",{"_index":254,"title":{"injectables/LoggerService.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["lowest_price",{"_index":1943,"title":{},"body":{"interfaces/Hotel.html":{}}}],["m.setmap(null",{"_index":1414,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{}}}],["map",{"_index":27,"title":{},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/DrivingOptions.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RidingOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"index.html":{}}}],["map((entry",{"_index":2049,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["map((k",{"_index":2042,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["map.addcontrol(toolbar",{"_index":2650,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["map.clearmap",{"_index":2172,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["map.destroy",{"_index":2173,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["map.map",{"_index":1409,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["map.removecontrol(t",{"_index":2652,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["map.ts",{"_index":1956,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["map.ts:1",{"_index":1958,"title":{},"body":{"interfaces/IKeyMap.html":{}}}],["map.ts:11",{"_index":2113,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:20",{"_index":2110,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:24",{"_index":2108,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:35",{"_index":2111,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:39",{"_index":2107,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:44",{"_index":2112,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:48",{"_index":2114,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:52",{"_index":2109,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:6",{"_index":2105,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:7",{"_index":2106,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:9",{"_index":2115,"title":{},"body":{"classes/KeyMap.html":{}}}],["map_api_config",{"_index":1989,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["mapapiloaderconfig",{"_index":2331,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["mapapiloaderconfig.debug",{"_index":2376,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["mapapiloaderservice",{"_index":1991,"title":{"injectables/MapAPILoaderService.html":{}},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{}}}],["mapapiservice",{"_index":1392,"title":{"injectables/MapAPIService.html":{}},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["mapoptions",{"_index":1492,"title":{"interfaces/MapOptions.html":{}},"body":{"interfaces/CMap.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{}}}],["mapstyle",{"_index":2190,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["marker",{"_index":28,"title":{},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/RenderObject.html":{},"interfaces/ToolbarOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["marker'},{'name",{"_index":942,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["marker(options",{"_index":991,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["marker.directive",{"_index":2341,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["marker.directive.ts",{"_index":413,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"miscellaneous/variables.html":{}}}],["marker.directive.ts:114",{"_index":486,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:119",{"_index":505,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:123",{"_index":492,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:128",{"_index":496,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:132",{"_index":504,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:136",{"_index":501,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:140",{"_index":498,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:145",{"_index":488,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:149",{"_index":491,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:153",{"_index":490,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:157",{"_index":489,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:30",{"_index":507,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:33",{"_index":470,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:34",{"_index":456,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:35",{"_index":454,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:36",{"_index":457,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:37",{"_index":466,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:38",{"_index":467,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:39",{"_index":468,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:40",{"_index":469,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:41",{"_index":459,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:42",{"_index":461,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:43",{"_index":458,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:46",{"_index":465,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:49",{"_index":463,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:52",{"_index":472,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:53",{"_index":480,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:54",{"_index":475,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:55",{"_index":481,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:56",{"_index":473,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:57",{"_index":474,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:58",{"_index":476,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:59",{"_index":479,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:60",{"_index":478,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:61",{"_index":477,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:62",{"_index":471,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:63",{"_index":484,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:64",{"_index":483,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:65",{"_index":482,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:67",{"_index":506,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:68",{"_index":453,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:75",{"_index":493,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:93",{"_index":494,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:98",{"_index":487,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.getposition",{"_index":918,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["marker.service",{"_index":510,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.service.ts",{"_index":1707,"title":{},"body":{"injectables/CircleMarkerService.html":{},"miscellaneous/variables.html":{}}}],["marker.service.ts:12",{"_index":1712,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.service.ts:13",{"_index":1708,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.service.ts:23",{"_index":1709,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.service.ts:30",{"_index":1711,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.then(m",{"_index":2302,"title":{},"body":{"injectables/MarkerService.html":{}}}],["marker.ts",{"_index":1439,"title":{},"body":{"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{}}}],["marker.ts:10",{"_index":1698,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:11",{"_index":1693,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:12",{"_index":1702,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:13",{"_index":1696,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:14",{"_index":1701,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:15",{"_index":1695,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:16",{"_index":1697,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:17",{"_index":1703,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:18",{"_index":1700,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:19",{"_index":1699,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:20",{"_index":1694,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker/amap",{"_index":412,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["marker/circle",{"_index":509,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/CircleMarkerService.html":{},"miscellaneous/variables.html":{}}}],["markerclusterer",{"_index":29,"title":{"interfaces/MarkerClusterer.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{}}}],["markerclustereroptions",{"_index":1583,"title":{"interfaces/MarkerClustererOptions.html":{}},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/RenderObject.html":{}}}],["markerclustererservice",{"_index":2246,"title":{"injectables/MarkerClustererService.html":{}},"body":{"injectables/MarkerClustererService.html":{}}}],["markeroptions",{"_index":968,"title":{"interfaces/MarkerOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMarker.html":{},"interfaces/CMouseTool.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"index.html":{}}}],["markers",{"_index":1585,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["markerservice",{"_index":2285,"title":{"injectables/MarkerService.html":{}},"body":{"injectables/MarkerService.html":{}}}],["markershape",{"_index":1579,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/MarkerOptions.html":{}}}],["marker在没有position",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["master",{"_index":2812,"title":{},"body":{"index.html":{}}}],["matching",{"_index":176,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1465,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["maxzoom",{"_index":2238,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["measurearea",{"_index":1020,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["measurearea(options",{"_index":1005,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["merchantability",{"_index":2917,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2891,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":229,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["method",{"_index":1027,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["methods",{"_index":45,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"injectables/DocumentRef.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"injectables/WindowRef.html":{}}}],["minclustersize",{"_index":2239,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2945,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2869,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2890,"title":{},"body":{"license.html":{}}}],["module",{"_index":2313,"title":{"modules/NgxAmapModule.html":{}},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["modules",{"_index":2315,"title":{"modules.html":{}},"body":{"modules/NgxAmapModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":2332,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["mouse",{"_index":960,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["mousedown",{"_index":443,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["mouseout",{"_index":444,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["mouseover",{"_index":445,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["mousetool",{"_index":30,"title":{"interfaces/MouseTool.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["mouseup",{"_index":446,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["movealong",{"_index":2563,"title":{},"body":{"interfaces/Text.html":{}}}],["movealong(path",{"_index":1562,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["moveto",{"_index":2564,"title":{},"body":{"interfaces/Text.html":{}}}],["moveto(lnglat",{"_index":1568,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["name",{"_index":56,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CPlaceSearch.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"injectables/DebugLoggerService.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Road.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/Walking.html":{}}}],["native",{"_index":381,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["neighborhood",{"_index":211,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["neighborhoodtype",{"_index":212,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["new",{"_index":317,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"interfaces/Geocoder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["new(map",{"_index":1459,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["ngmodule",{"_index":2333,"title":{},"body":{"modules/NgxAmapModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":237,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngonchanges(changes",{"_index":280,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngondestroy",{"_index":238,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngoninit",{"_index":239,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngx",{"_index":690,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["ngxamapapiloader",{"_index":2010,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["ngxamapcomponent",{"_index":935,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["ngxamapmodule",{"_index":2314,"title":{"modules/NgxAmapModule.html":{}},"body":{"modules/NgxAmapModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxamapmodule.forroot",{"_index":2835,"title":{},"body":{"index.html":{}}}],["ngxamapmodule的forroot()方法设置ngx",{"_index":2839,"title":{},"body":{"index.html":{}}}],["nightflag",{"_index":2664,"title":{},"body":{"interfaces/TransferOptions.html":{}}}],["nightline",{"_index":2668,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["noiplocate",{"_index":1150,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":2921,"title":{},"body":{"license.html":{}}}],["noob9527",{"_index":2730,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["northeast",{"_index":1419,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["notempty",{"_index":1653,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["notempty(key",{"_index":1661,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["notice",{"_index":2905,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2807,"title":{},"body":{"index.html":{}}}],["null",{"_index":1012,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"classes/Utils.html":{}}}],["number",{"_index":460,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CHeatmap.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Discount.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocodeResult.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/InfoWindow.html":{},"classes/KeyMap.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/WalkingResult.html":{}}}],["number[][]|lnglat",{"_index":1563,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["obj",{"_index":674,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Text.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["object",{"_index":2244,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["object.create(null",{"_index":1960,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["object.keys(queryparams",{"_index":2035,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["object.keys(this._map",{"_index":1970,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["object.keys(this._map).map(key",{"_index":1972,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["observable",{"_index":361,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["observable.create(observer",{"_index":1885,"title":{},"body":{"classes/EventBinder.html":{}}}],["observer.next(e",{"_index":1890,"title":{},"body":{"classes/EventBinder.html":{}}}],["obtaining",{"_index":2879,"title":{},"body":{"license.html":{}}}],["of()'方法可以得到promise",{"_index":686,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["of(changes",{"_index":1663,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["of(map",{"_index":964,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["of(opts",{"_index":357,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["of(value",{"_index":1669,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["off(eventname",{"_index":1360,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["offset",{"_index":832,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{},"interfaces/ILabel.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["offset(w",{"_index":1484,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["ok",{"_index":711,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["on(event",{"_index":384,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["on(eventname",{"_index":1362,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["onchanges",{"_index":226,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ondestroy",{"_index":228,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["oninit",{"_index":227,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["opacity",{"_index":751,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/HeatmapOptions.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":823,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{}}}],["open').subscribe(e",{"_index":904,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["open(infowindow",{"_index":2093,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["open(map",{"_index":1478,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["open(position",{"_index":868,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["openingtime",{"_index":1674,"title":{},"body":{"interfaces/Cinema.html":{}}}],["opentime",{"_index":1769,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["opentime_gdf",{"_index":1675,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["opt",{"_index":502,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["optional",{"_index":58,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/ClusterStyle.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{}}}],["options",{"_index":326,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{}}}],["options).size",{"_index":2064,"title":{},"body":{"injectables/IconService.html":{}}}],["options.content",{"_index":2121,"title":{},"body":{"injectables/LabelService.html":{}}}],["options.height",{"_index":2560,"title":{},"body":{"injectables/SizeService.html":{}}}],["options.icon",{"_index":2295,"title":{},"body":{"injectables/MarkerService.html":{}}}],["options.input",{"_index":328,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["options.interface",{"_index":1325,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/IPoiObject.html":{},"interfaces/InfoWindow.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["options.interface.ts",{"_index":1329,"title":{},"body":{"interfaces/AutocompleteOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RidingOptions.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"miscellaneous/typealiases.html":{}}}],["options.label",{"_index":2299,"title":{},"body":{"injectables/MarkerService.html":{}}}],["options.map",{"_index":1411,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{}}}],["options.offset",{"_index":2096,"title":{},"body":{"injectables/InfoWindowService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["options.shadow",{"_index":2297,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["options.size",{"_index":2098,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["options.styles",{"_index":2260,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["options.styles.map(style",{"_index":2261,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["options.y",{"_index":2390,"title":{},"body":{"injectables/PixelService.html":{}}}],["options[key",{"_index":2687,"title":{},"body":{"classes/Utils.html":{}}}],["opts",{"_index":359,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"injectables/BezierCurveService.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["ordering_app_url",{"_index":1770,"title":{},"body":{"interfaces/Dining.html":{}}}],["ordering_wap_url",{"_index":1771,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["ordering_web_url",{"_index":1772,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["orientation",{"_index":1817,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["origin",{"_index":672,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Riding.html":{},"interfaces/RidingResult.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["original_price",{"_index":1911,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["otherwise",{"_index":2931,"title":{},"body":{"license.html":{}}}],["out",{"_index":2325,"title":{},"body":{"modules/NgxAmapModule.html":{},"license.html":{},"overview.html":{}}}],["outlinecolor",{"_index":1376,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":301,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["outputs",{"_index":246,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["overlays/amap.bezier",{"_index":127,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.circle",{"_index":123,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.ellipse",{"_index":129,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.marker",{"_index":120,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["overlays/amap.polygon",{"_index":122,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/Editor.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["overlays/amap.polyline",{"_index":121,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.rectangle",{"_index":130,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.text",{"_index":124,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["override",{"_index":514,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["overview",{"_index":2938,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":2456,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["p.setdataset(data",{"_index":799,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["p.setoptions(opt",{"_index":798,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["package",{"_index":2775,"title":{"dependencies.html":{}},"body":{}}],["pageindex",{"_index":1101,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PoiList.html":{}}}],["pagesize",{"_index":1103,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PoiList.html":{}}}],["panby(x",{"_index":1526,"title":{},"body":{"interfaces/CMap.html":{}}}],["panel",{"_index":1842,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["panto(position",{"_index":1525,"title":{},"body":{"interfaces/CMap.html":{}}}],["param",{"_index":383,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{}}}],["params",{"_index":2034,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["parking",{"_index":1676,"title":{},"body":{"interfaces/Cinema.html":{}}}],["particular",{"_index":2919,"title":{},"body":{"license.html":{}}}],["path",{"_index":676,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CTruckDriving.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TransferPlan.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"miscellaneous/variables.html":{}}}],["pausemove",{"_index":1570,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["pcode",{"_index":2425,"title":{},"body":{"interfaces/Poi.html":{}}}],["permission",{"_index":2873,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2898,"title":{},"body":{"license.html":{}}}],["person",{"_index":2878,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2899,"title":{},"body":{"license.html":{}}}],["photo",{"_index":1679,"title":{"interfaces/Photo.html":{}},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Hotel.html":{},"interfaces/Photo.html":{},"interfaces/Scenic.html":{}}}],["photos",{"_index":1677,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["pitch",{"_index":2191,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["pitchenable",{"_index":2192,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["pixel",{"_index":31,"title":{"interfaces/Pixel.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPixel.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/ClusterStyle.html":{},"injectables/IconService.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{}}}],["pixel.interface",{"_index":1950,"title":{},"body":{"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{}}}],["pixel.x",{"_index":2391,"title":{},"body":{"injectables/PixelService.html":{}}}],["pixel.y",{"_index":2392,"title":{},"body":{"injectables/PixelService.html":{}}}],["pixel/pixel.service",{"_index":2061,"title":{},"body":{"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["pixels",{"_index":2640,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["pixelservice",{"_index":1158,"title":{"injectables/PixelService.html":{}},"body":{"directives/AmapToolBarDirective.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["pixeltolnglat(pixel",{"_index":1534,"title":{},"body":{"interfaces/CMap.html":{}}}],["place",{"_index":112,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/DrivingResult.html":{},"modules/NgxAmapModule.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{},"miscellaneous/variables.html":{}}}],["placesearch",{"_index":32,"title":{"interfaces/PlaceSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["placesearchoptions",{"_index":1042,"title":{"interfaces/PlaceSearchOptions.html":{}},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{}}}],["placesearch事件，返回可以被subscribe的observable",{"_index":1052,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["plan",{"_index":170,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/TransferResult.html":{}}}],["plan.ts",{"_index":2667,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["plans",{"_index":2674,"title":{},"body":{"interfaces/TransferResult.html":{}}}],["plugin",{"_index":46,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["plugin(name",{"_index":47,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMap.html":{}}}],["pluginloaderservice",{"_index":355,"title":{"injectables/PluginLoaderService.html":{}},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["plugins",{"_index":354,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["pname",{"_index":2426,"title":{},"body":{"interfaces/Poi.html":{}}}],["poi",{"_index":148,"title":{"interfaces/Poi.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"interfaces/DrivingResult.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/ReGeocode.html":{},"interfaces/RidingResult.html":{},"interfaces/SearchResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["poi.ts",{"_index":2497,"title":{},"body":{"interfaces/ReGeocodePoi.html":{}}}],["poiid",{"_index":1089,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["poilist",{"_index":2433,"title":{"interfaces/PoiList.html":{}},"body":{"interfaces/PoiList.html":{},"interfaces/SearchResult.html":{}}}],["point",{"_index":1427,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Pixel.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["points",{"_index":1447,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["poionamap",{"_index":1079,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["poionamap(obj",{"_index":1071,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["pois",{"_index":2435,"title":{},"body":{"interfaces/PoiList.html":{},"interfaces/ReGeocode.html":{}}}],["policy",{"_index":680,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/DriveRoute.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["polyeditor",{"_index":33,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"miscellaneous/typealiases.html":{}}}],["polygon",{"_index":34,"title":{"interfaces/Polygon.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/Editor.html":{},"interfaces/IPoiObject.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"changelog.html":{},"index.html":{}}}],["polygon'},{'name",{"_index":950,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["polygon(options",{"_index":995,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["polygon.directive",{"_index":2347,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["polygon.directive.ts",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polygon.then(m",{"_index":2463,"title":{},"body":{"injectables/PolygonService.html":{}}}],["polygon/amap",{"_index":2346,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["polygonoptions",{"_index":969,"title":{"interfaces/PolygonOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolygon.html":{},"interfaces/MouseTool.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{}}}],["polygonpath",{"_index":1620,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["polygonservice",{"_index":2450,"title":{"injectables/PolygonService.html":{}},"body":{"injectables/PolygonService.html":{}}}],["polyline",{"_index":35,"title":{"interfaces/Polyline.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CPolyline.html":{},"interfaces/Editor.html":{},"interfaces/MouseTool.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"changelog.html":{},"index.html":{}}}],["polyline'},{'name",{"_index":952,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["polyline(options",{"_index":993,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["polyline.directive",{"_index":2345,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["polyline.directive.ts",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polyline.then(m",{"_index":2491,"title":{},"body":{"injectables/PolylineService.html":{}}}],["polyline/amap",{"_index":2344,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["polylineoptions",{"_index":970,"title":{"interfaces/PolylineOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolyline.html":{},"interfaces/MouseTool.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{}}}],["polylineservice",{"_index":2480,"title":{"injectables/PolylineService.html":{}},"body":{"injectables/PolylineService.html":{}}}],["portions",{"_index":2909,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1479,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["position",{"_index":833,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["postcode",{"_index":2427,"title":{},"body":{"interfaces/Poi.html":{}}}],["price",{"_index":2539,"title":{},"body":{"interfaces/Scenic.html":{}}}],["private",{"_index":232,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["projects/.../amap",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../amap.editor.ts",{"_index":2949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../amap.heatmap.ts",{"_index":2951,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../amap.polygon.ts",{"_index":2954,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../bezier",{"_index":2950,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../callback.type.ts",{"_index":2948,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../circle",{"_index":2971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../circle.service.ts",{"_index":2970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ellipse.service.ts",{"_index":2972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../event",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../heatmap.service.ts",{"_index":2973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../icon.service.ts",{"_index":2974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../info",{"_index":2975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../label.service.ts",{"_index":2976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../lng",{"_index":2952,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../map",{"_index":2977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../marker",{"_index":2980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../marker.service.ts",{"_index":2979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ngx",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pixel.service.ts",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../plugin",{"_index":2982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polygon.service.ts",{"_index":2983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polyline.service.ts",{"_index":2984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../rectangle.service.ts",{"_index":2985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../size.service.ts",{"_index":2987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../text.service.ts",{"_index":2986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../toolbar.service.ts",{"_index":2978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":293,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["promise((resolve",{"_index":2020,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["promise(resolve",{"_index":387,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/Cinema.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"injectables/IconService.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Photo.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{}}}],["property",{"_index":513,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CMap.html":{}}}],["provide",{"_index":2373,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["provided",{"_index":2910,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1780,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{}}}],["providers",{"_index":2319,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["province",{"_index":213,"title":{},"body":{"interfaces/AddressComponent.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["public",{"_index":565,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["publish",{"_index":2892,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2920,"title":{},"body":{"license.html":{}}}],["queryparams",{"_index":2030,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["queryparams[k",{"_index":2037,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["queryparams[k].length",{"_index":2041,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["r",{"_index":2518,"title":{},"body":{"injectables/RectangleService.html":{}}}],["radius",{"_index":433,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"miscellaneous/variables.html":{}}}],["railway_distance",{"_index":2669,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["raiseondrag",{"_index":2278,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["rating",{"_index":1678,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["raw",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":1456,"title":{},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderResult.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodeResult.html":{}}}],["ready",{"_index":250,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["recommend",{"_index":1773,"title":{},"body":{"interfaces/Dining.html":{}}}],["recommened",{"_index":2540,"title":{},"body":{"interfaces/Scenic.html":{}}}],["rectangle",{"_index":36,"title":{"interfaces/Rectangle.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CRectangle.html":{},"interfaces/Editor.html":{},"interfaces/MouseTool.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"changelog.html":{},"index.html":{}}}],["rectangle'},{'name",{"_index":954,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["rectangle(options",{"_index":1001,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["rectangle.directive",{"_index":2367,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["rectangle.directive.ts",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rectangle.then(m",{"_index":2525,"title":{},"body":{"injectables/RectangleService.html":{}}}],["rectangle/amap",{"_index":2366,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["rectangleeditor",{"_index":37,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"injectables/RectangleService.html":{},"miscellaneous/typealiases.html":{}}}],["rectangleoptions",{"_index":1625,"title":{"interfaces/RectangleOptions.html":{}},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{}}}],["rectangleservice",{"_index":2512,"title":{"injectables/RectangleService.html":{}},"body":{"injectables/RectangleService.html":{}}}],["rectzoomin",{"_index":1021,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["rectzoomin(options",{"_index":1007,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["rectzoomout",{"_index":1022,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["rectzoomout(options",{"_index":1009,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["regeocode",{"_index":1906,"title":{"interfaces/ReGeocode.html":{}},"body":{"interfaces/GeocoderResult.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodeResult.html":{}}}],["regeocodepoi",{"_index":2496,"title":{"interfaces/ReGeocodePoi.html":{}},"body":{"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{}}}],["regeocoderesult",{"_index":1455,"title":{"interfaces/ReGeocodeResult.html":{}},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{},"interfaces/ReGeocodeResult.html":{}}}],["reject",{"_index":2021,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["reject(error",{"_index":2024,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["related",{"_index":984,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["remove",{"_index":2038,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["remove(overlayers",{"_index":1513,"title":{},"body":{"interfaces/CMap.html":{}}}],["removecontrol(obj",{"_index":1532,"title":{},"body":{"interfaces/CMap.html":{}}}],["removelistener",{"_index":182,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["removelistener(listener",{"_index":196,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["removemarker",{"_index":2207,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["removemarker(marker",{"_index":1587,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["removemarkers",{"_index":2208,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["removemarkers(markers",{"_index":1601,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["renderclusermarker",{"_index":2240,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["renderobject",{"_index":2245,"title":{"interfaces/RenderObject.html":{}},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["renderstyle",{"_index":2408,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["repo",{"_index":2864,"title":{},"body":{"index.html":{}}}],["reset",{"_index":2324,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["resizeenable",{"_index":2193,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["resolve",{"_index":598,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["resolve(obj",{"_index":1018,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["resolve({status",{"_index":390,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["restriction",{"_index":1805,"title":{},"body":{"interfaces/DriveRoute.html":{},"license.html":{}}}],["result",{"_index":51,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":1331,"title":{},"body":{"interfaces/AutocompleteResult.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DrivingResult.html":{},"interfaces/GeocodeResult.html":{},"interfaces/GeocoderResult.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/RidingResult.html":{},"interfaces/SearchResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["resultnum",{"_index":1898,"title":{},"body":{"interfaces/GeocodeResult.html":{},"interfaces/GeocoderResult.html":{}}}],["results",{"_index":177,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resumemove",{"_index":1571,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["return",{"_index":345,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{},"injectables/WindowRef.html":{}}}],["returns",{"_index":60,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"injectables/DocumentRef.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"injectables/WindowRef.html":{}}}],["ride",{"_index":2531,"title":{},"body":{"interfaces/RideRoute.html":{},"interfaces/RidingResult.html":{}}}],["rideroute",{"_index":2528,"title":{"interfaces/RideRoute.html":{}},"body":{"interfaces/RideRoute.html":{},"interfaces/RidingResult.html":{}}}],["ridestep",{"_index":2530,"title":{"interfaces/RideStep.html":{}},"body":{"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{}}}],["riding",{"_index":38,"title":{"interfaces/Riding.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["riding.service",{"_index":2372,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["riding.service.ts",{"_index":1108,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"miscellaneous/variables.html":{}}}],["riding.service.ts:17",{"_index":1112,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding.service.ts:19",{"_index":1109,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding.service.ts:24",{"_index":1113,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding.service.ts:32",{"_index":1111,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding.service.ts:41",{"_index":1127,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:48",{"_index":1131,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:57",{"_index":1129,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:61",{"_index":1130,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:73",{"_index":1128,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding/amap",{"_index":1107,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["riding/amap.riding",{"_index":137,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["riding/ride",{"_index":174,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["riding/riding",{"_index":175,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["ridingoptions",{"_index":1110,"title":{"interfaces/RidingOptions.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{}}}],["ridingresult",{"_index":1114,"title":{"interfaces/RidingResult.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{},"interfaces/RidingResult.html":{}}}],["riding事件，返回可以被subscribe的observable",{"_index":1123,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["rightclick",{"_index":447,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["rights",{"_index":2889,"title":{},"body":{"license.html":{}}}],["road",{"_index":678,"title":{"interfaces/Road.html":{}},"body":{"classes/AmapDrivingWrapper.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/ReGeocode.html":{},"interfaces/RideStep.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["roads",{"_index":2495,"title":{},"body":{"interfaces/ReGeocode.html":{}}}],["rollup",{"_index":979,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["rotateenable",{"_index":2194,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":166,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/WalkingResult.html":{}}}],["route.ts",{"_index":1804,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/RideRoute.html":{},"interfaces/WalkRoute.html":{}}}],["routes",{"_index":1846,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/WalkingResult.html":{}}}],["rule",{"_index":1023,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["rule(options",{"_index":1003,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["ruler",{"_index":1151,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":2867,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":303,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"dependencies.html":{}}}],["s",{"_index":1485,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["save",{"_index":2831,"title":{},"body":{"index.html":{}}}],["scenic",{"_index":2428,"title":{"interfaces/Scenic.html":{}},"body":{"interfaces/Poi.html":{},"interfaces/Scenic.html":{}}}],["script",{"_index":2011,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.async",{"_index":2015,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.defer",{"_index":2017,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.onerror",{"_index":2023,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.src",{"_index":2018,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.type",{"_index":2013,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["scrollwheel",{"_index":2195,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":114,"title":{},"body":{"interfaces/AMapClass.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/Driving.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["search(address",{"_index":386,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["search(keyword",{"_index":1318,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["search(origin",{"_index":634,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["search(path",{"_index":1285,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/TruckDriving.html":{}}}],["search(points",{"_index":1831,"title":{},"body":{"interfaces/Driving.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["search.service",{"_index":2356,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["search.service.ts",{"_index":581,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"miscellaneous/variables.html":{}}}],["search.service.ts:103",{"_index":1096,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:107",{"_index":1104,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:111",{"_index":1097,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:115",{"_index":1087,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:16",{"_index":1044,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{}}}],["search.service.ts:17",{"_index":585,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{}}}],["search.service.ts:18",{"_index":1041,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{}}}],["search.service.ts:19",{"_index":582,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{}}}],["search.service.ts:22",{"_index":1043,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{}}}],["search.service.ts:24",{"_index":584,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{}}}],["search.service.ts:35",{"_index":1085,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:37",{"_index":605,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:42",{"_index":1105,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:44",{"_index":611,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:51",{"_index":1091,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:53",{"_index":606,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:55",{"_index":1093,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:57",{"_index":607,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:61",{"_index":1095,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:63",{"_index":608,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:67",{"_index":610,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:73",{"_index":1088,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:79",{"_index":1100,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:83",{"_index":1102,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:87",{"_index":1098,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:91",{"_index":1090,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:95",{"_index":1086,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:99",{"_index":1092,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.ts",{"_index":1441,"title":{},"body":{"interfaces/CDistrictSearch.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["search.ts:10",{"_index":1787,"title":{},"body":{"interfaces/DistrictSearch.html":{}}}],["search.ts:13",{"_index":2398,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:14",{"_index":2399,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:15",{"_index":1788,"title":{},"body":{"interfaces/DistrictSearch.html":{},"interfaces/PlaceSearch.html":{}}}],["search.ts:16",{"_index":1789,"title":{},"body":{"interfaces/DistrictSearch.html":{},"interfaces/PlaceSearch.html":{}}}],["search.ts:17",{"_index":2405,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:18",{"_index":2401,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:19",{"_index":2403,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:20",{"_index":2404,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:21",{"_index":2400,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:22",{"_index":2402,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:23",{"_index":2396,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:24",{"_index":2394,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:25",{"_index":2397,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:26",{"_index":2395,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search/amap",{"_index":580,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["search/amap.district",{"_index":116,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["search/amap.place",{"_index":113,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["search/cinema",{"_index":152,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/cinema.ts",{"_index":1671,"title":{},"body":{"interfaces/Cinema.html":{}}}],["search/city",{"_index":153,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CityInfo.html":{}}}],["search/dining",{"_index":154,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/dining.ts",{"_index":1762,"title":{},"body":{"interfaces/Dining.html":{}}}],["search/discount",{"_index":155,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/discount.ts",{"_index":1777,"title":{},"body":{"interfaces/Discount.html":{}}}],["search/district",{"_index":163,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["search/district.ts",{"_index":1784,"title":{},"body":{"interfaces/District.html":{}}}],["search/groupbuy",{"_index":156,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/groupbuy.ts",{"_index":1908,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["search/hotel",{"_index":157,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/hotel.ts",{"_index":1940,"title":{},"body":{"interfaces/Hotel.html":{}}}],["search/photo",{"_index":158,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/photo.ts",{"_index":2377,"title":{},"body":{"interfaces/Photo.html":{}}}],["search/poi",{"_index":159,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/DrivingResult.html":{},"interfaces/PoiList.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["search/poi.ts",{"_index":2416,"title":{},"body":{"interfaces/Poi.html":{}}}],["search/scenic",{"_index":161,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/scenic.ts",{"_index":2538,"title":{},"body":{"interfaces/Scenic.html":{}}}],["search/search",{"_index":162,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/SearchResult.html":{}}}],["searchinbounds",{"_index":1080,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["searchinbounds(keyword",{"_index":1057,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["searchnearby",{"_index":1081,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["searchnearby(keyword",{"_index":1055,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["searchonamap",{"_index":659,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["searchonamap(obj",{"_index":657,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["searchresult",{"_index":1616,"title":{"interfaces/SearchResult.html":{}},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/SearchResult.html":{}}}],["season",{"_index":2541,"title":{},"body":{"interfaces/Scenic.html":{}}}],["second_id",{"_index":1740,"title":{},"body":{"interfaces/Cross.html":{}}}],["second_name",{"_index":1741,"title":{},"body":{"interfaces/Cross.html":{}}}],["segment",{"_index":2545,"title":{"interfaces/Segment.html":{}},"body":{"interfaces/Segment.html":{},"interfaces/TransferPlan.html":{}}}],["segments",{"_index":2670,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["select",{"_index":251,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["selector",{"_index":230,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["sell",{"_index":2896,"title":{},"body":{"license.html":{}}}],["seperated",{"_index":2045,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["service",{"_index":1403,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"index.html":{}}}],["service_rating",{"_index":1774,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Hotel.html":{}}}],["services/amap",{"_index":307,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"modules/NgxAmapModule.html":{}}}],["services/circle",{"_index":508,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["services/heatmap/heatmap.service",{"_index":783,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["services/icon/icon.service",{"_index":2351,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/info",{"_index":882,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["services/label/label.service",{"_index":2352,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/logger/debug",{"_index":2335,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/logger/logger.service",{"_index":304,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"modules/NgxAmapModule.html":{}}}],["services/map",{"_index":2334,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/pixel/pixel.service",{"_index":1199,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"modules/NgxAmapModule.html":{}}}],["services/plugin",{"_index":2354,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/size/size.service",{"_index":885,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{}}}],["services/toolbar/toolbar.service",{"_index":1198,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["service和wrapper",{"_index":688,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["service构造wrapper",{"_index":692,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["set",{"_index":2104,"title":{},"body":{"classes/KeyMap.html":{}}}],["set(key",{"_index":1964,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["setangle",{"_index":2565,"title":{},"body":{"interfaces/Text.html":{}}}],["setangle(angle",{"_index":1548,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setanimation",{"_index":2566,"title":{},"body":{"interfaces/Text.html":{}}}],["setanimation(animate",{"_index":1544,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setaveragecenter",{"_index":2209,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setaveragecenter(averagecenter",{"_index":1603,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setavoidpolygons",{"_index":660,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"interfaces/Driving.html":{}}}],["setavoidpolygons(path",{"_index":641,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["setavoidroad",{"_index":661,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"interfaces/Driving.html":{}}}],["setavoidroad(road",{"_index":643,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["setbounds",{"_index":2498,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["setbounds(bound",{"_index":1517,"title":{},"body":{"interfaces/CMap.html":{}}}],["setbounds(bounds",{"_index":1627,"title":{},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["setcenter",{"_index":421,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{}}}],["setcenter(center",{"_index":1451,"title":{},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["setcenter(lnglat",{"_index":495,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["setcenter(position",{"_index":1515,"title":{},"body":{"interfaces/CMap.html":{}}}],["setcity",{"_index":240,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/Geocoder.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Transfer.html":{}}}],["setcity(city",{"_index":286,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CGeocoder.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CTransfer.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Transfer.html":{}}}],["setcityd",{"_index":1264,"title":{},"body":{"classes/AmapTransferWrapper.html":{},"interfaces/Transfer.html":{}}}],["setcityd(city",{"_index":1257,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["setcitylimit",{"_index":241,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/PlaceSearch.html":{}}}],["setcitylimit(limit",{"_index":288,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setclickable",{"_index":2567,"title":{},"body":{"interfaces/Text.html":{}}}],["setclickable(clickable",{"_index":1546,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setcontent",{"_index":824,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindow.html":{}}}],["setcontent(content",{"_index":870,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["setcontent(html",{"_index":1560,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setcursor",{"_index":2568,"title":{},"body":{"interfaces/Text.html":{}}}],["setcursor(cursor",{"_index":1559,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setdataset",{"_index":747,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/Heatmap.html":{}}}],["setdataset(data",{"_index":775,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["setdataset(dataset",{"_index":1461,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["setdefaultcursor(cursor",{"_index":1522,"title":{},"body":{"interfaces/CMap.html":{}}}],["setdraggable",{"_index":2569,"title":{},"body":{"interfaces/Text.html":{}}}],["setdraggable(draggable",{"_index":1557,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setextdata",{"_index":422,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setextdata(ext",{"_index":497,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setfeatures(feature",{"_index":1540,"title":{},"body":{"interfaces/CMap.html":{}}}],["setfitview(overlaylist",{"_index":1528,"title":{},"body":{"interfaces/CMap.html":{}}}],["setgridsize",{"_index":2210,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setgridsize(size",{"_index":1593,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["seticon(content",{"_index":1554,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setimagesize",{"_index":2054,"title":{},"body":{"interfaces/Icon.html":{}}}],["setimagesize(size",{"_index":1474,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["setlabel(label",{"_index":1549,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setlabelzindex(index",{"_index":1510,"title":{},"body":{"interfaces/CMap.html":{}}}],["setlang",{"_index":1082,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["setlang(lang",{"_index":1066,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setlayers(layers",{"_index":1511,"title":{},"body":{"interfaces/CMap.html":{}}}],["setlevel",{"_index":603,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{},"interfaces/DistrictSearch.html":{}}}],["setlevel(level",{"_index":599,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["setlimitbounds(bound",{"_index":1518,"title":{},"body":{"interfaces/CMap.html":{}}}],["setmap",{"_index":1340,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setmap(map",{"_index":1350,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setmapstyle(style",{"_index":1538,"title":{},"body":{"interfaces/CMap.html":{}}}],["setmarkers",{"_index":2211,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setmarkers(markers",{"_index":1598,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setmaxzoom",{"_index":2212,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setmaxzoom(zoom",{"_index":1594,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setminclustersize",{"_index":2213,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setminclustersize(size",{"_index":1595,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setoffset",{"_index":1141,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["setoffset(offset",{"_index":1189,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["setoptions",{"_index":423,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["setoptions(opt",{"_index":500,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["setpageindex",{"_index":1083,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["setpageindex(pageindex",{"_index":1062,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setpagesize",{"_index":1084,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["setpagesize(pagesize",{"_index":1064,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["setpagesize(setpagesize",{"_index":1617,"title":{},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setpath",{"_index":1341,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{}}}],["setpath(path",{"_index":1353,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{}}}],["setpolicy",{"_index":662,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{}}}],["setpolicy(policy",{"_index":639,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTransfer.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{}}}],["setposition",{"_index":825,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["setposition(lnglat",{"_index":1480,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["setposition(position",{"_index":872,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["setprovinceandnumber",{"_index":663,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/TruckDriving.html":{}}}],["setprovinceandnumber(province",{"_index":655,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Driving.html":{},"interfaces/TruckDriving.html":{}}}],["setradius",{"_index":424,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["setradius(radius",{"_index":503,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["setrotation(rotation",{"_index":1520,"title":{},"body":{"interfaces/CMap.html":{}}}],["setshadow",{"_index":2570,"title":{},"body":{"interfaces/Text.html":{}}}],["setshadow(icon",{"_index":1576,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setshape(shape",{"_index":1578,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setsize",{"_index":826,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindow.html":{}}}],["setsize(size",{"_index":874,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["setstatus(status",{"_index":1521,"title":{},"body":{"interfaces/CMap.html":{}}}],["setstyle",{"_index":2571,"title":{},"body":{"interfaces/Text.html":{}}}],["setstyle(obj",{"_index":1641,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setstyles",{"_index":2214,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setstyles(styles",{"_index":1596,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setsubdistrict",{"_index":604,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{},"interfaces/DistrictSearch.html":{}}}],["setsubdistrict(district",{"_index":601,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["setters",{"_index":344,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["settext",{"_index":2572,"title":{},"body":{"interfaces/Text.html":{}}}],["settext(text",{"_index":1640,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["settimeout",{"_index":1889,"title":{},"body":{"classes/EventBinder.html":{}}}],["settitle",{"_index":2573,"title":{},"body":{"interfaces/Text.html":{}}}],["settitle(title",{"_index":1572,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["settop",{"_index":2574,"title":{},"body":{"interfaces/Text.html":{}}}],["settop(istop",{"_index":1574,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["settype",{"_index":242,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/PlaceSearch.html":{}}}],["settype(type",{"_index":291,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setzindex",{"_index":2575,"title":{},"body":{"interfaces/Text.html":{}}}],["setzindex(index",{"_index":1552,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setzoom(level",{"_index":1509,"title":{},"body":{"interfaces/CMap.html":{}}}],["setzoomandcenter(zoomlevel",{"_index":1516,"title":{},"body":{"interfaces/CMap.html":{}}}],["shadow",{"_index":2279,"title":{},"body":{"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":2906,"title":{},"body":{"license.html":{}}}],["shape",{"_index":2280,"title":{},"body":{"interfaces/MarkerOptions.html":{},"miscellaneous/variables.html":{}}}],["show",{"_index":425,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["showbiz",{"_index":1792,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{}}}],["showbuildingblock",{"_index":2196,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["showcover",{"_index":2409,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["showdir",{"_index":1377,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["showdirection",{"_index":1142,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["showindoormap",{"_index":2197,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["showlocation",{"_index":1143,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["showruler",{"_index":1144,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["showshadow",{"_index":834,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["showtraffic",{"_index":1843,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["simplechanges",{"_index":281,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/ChangeFilter.html":{}}}],["size",{"_index":39,"title":{"interfaces/Size.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CSize.html":{},"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TruckDrivingOptions.html":{},"miscellaneous/variables.html":{}}}],["size.height",{"_index":2562,"title":{},"body":{"injectables/SizeService.html":{}}}],["size.interface",{"_index":1949,"title":{},"body":{"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{}}}],["size.width",{"_index":2561,"title":{},"body":{"injectables/SizeService.html":{}}}],["size/size.service",{"_index":2062,"title":{},"body":{"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{}}}],["sizes",{"_index":842,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["sizeservice",{"_index":843,"title":{"injectables/SizeService.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/SizeService.html":{}}}],["skycolor",{"_index":2198,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":2881,"title":{},"body":{"license.html":{}}}],["sold_num",{"_index":1781,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{}}}],["southwest",{"_index":1420,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["speed",{"_index":1564,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["src/app/app.module.ts",{"_index":2865,"title":{},"body":{"index.html":{}}}],["star",{"_index":1944,"title":{},"body":{"interfaces/Hotel.html":{}}}],["start",{"_index":1847,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["start_location",{"_index":1818,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["start_time",{"_index":1782,"title":{},"body":{"interfaces/Discount.html":{}}}],["started",{"_index":2700,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":1654,"title":{},"body":{"classes/ChangeFilter.html":{},"modules/NgxAmapModule.html":{},"classes/Utils.html":{}}}],["status",{"_index":389,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["step",{"_index":167,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/DriveRoute.html":{},"interfaces/RideRoute.html":{},"interfaces/WalkRoute.html":{}}}],["step.ts",{"_index":1811,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["steps",{"_index":1806,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/RideRoute.html":{},"interfaces/WalkRoute.html":{}}}],["stime",{"_index":1912,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["stopmove",{"_index":1569,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["street",{"_index":214,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["streetnumber",{"_index":215,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["string",{"_index":48,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RideStep.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"index.html":{}}}],["strings",{"_index":2046,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["string|array",{"_index":1530,"title":{},"body":{"interfaces/CMap.html":{}}}],["string|htmldivelement",{"_index":1495,"title":{},"body":{"interfaces/CMap.html":{}}}],["string|htmlelement",{"_index":1561,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/PlaceSearchOptions.html":{}}}],["string|icon",{"_index":1555,"title":{},"body":{"interfaces/CMarker.html":{},"injectables/IconService.html":{},"interfaces/MarkerOptions.html":{}}}],["string|icon|iicon",{"_index":2063,"title":{},"body":{"injectables/IconService.html":{}}}],["strokecolor",{"_index":434,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokedasharray",{"_index":1378,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokeopacity",{"_index":435,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokestyle",{"_index":1379,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokeweight",{"_index":436,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["stub",{"_index":2136,"title":{},"body":{"injectables/LoggerService.html":{}}}],["style",{"_index":109,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["style.imageoffset",{"_index":2271,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["style.interface",{"_index":2243,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["style.interface.ts",{"_index":1948,"title":{},"body":{"interfaces/IClusterStyle.html":{}}}],["style.offset",{"_index":2269,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["style.size",{"_index":2267,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["style.ts",{"_index":1730,"title":{},"body":{"interfaces/ClusterStyle.html":{}}}],["styles",{"_index":805,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["styleurls",{"_index":811,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["subdistrict",{"_index":1793,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{}}}],["subject",{"_index":2901,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2894,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1017,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["subscription",{"_index":294,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{}}}],["substantial",{"_index":2908,"title":{},"body":{"license.html":{}}}],["super",{"_index":378,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["support",{"_index":2935,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":512,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["svg",{"_index":2936,"title":{},"body":{"modules.html":{}}}],["t",{"_index":405,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{}}}],["t.dolocation",{"_index":1230,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.getdataset",{"_index":800,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["t.getlocation",{"_index":1234,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.getmap",{"_index":801,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["t.getoffset",{"_index":1233,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.hide",{"_index":796,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["t.hidedirection",{"_index":1227,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.hidelocation",{"_index":1229,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.hideruler",{"_index":1225,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.setoffset(value",{"_index":1232,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.show",{"_index":795,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["t.showdirection",{"_index":1226,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.showlocation",{"_index":1228,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.showruler",{"_index":1224,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["tag",{"_index":235,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["target",{"_index":408,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["target.then(m",{"_index":1887,"title":{},"body":{"classes/EventBinder.html":{}}}],["taste_rating",{"_index":1775,"title":{},"body":{"interfaces/Dining.html":{}}}],["taxi_cost",{"_index":1848,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/TransferResult.html":{}}}],["taxi_distance",{"_index":2671,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["tel",{"_index":2429,"title":{},"body":{"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{}}}],["template",{"_index":804,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["templateurl",{"_index":813,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["text",{"_index":40,"title":{"interfaces/Text.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text'},{'name",{"_index":956,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["text.directive",{"_index":2361,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["text.directive.ts",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text.then(m",{"_index":2625,"title":{},"body":{"injectables/TextService.html":{}}}],["text/amap",{"_index":2360,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["text/javascript",{"_index":2014,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["textalign",{"_index":2615,"title":{},"body":{"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["textcolor",{"_index":1732,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{}}}],["textoptions",{"_index":1637,"title":{"interfaces/TextOptions.html":{}},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{}}}],["textservice",{"_index":2617,"title":{"injectables/TextService.html":{}},"body":{"injectables/TextService.html":{}}}],["textsize",{"_index":1733,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{}}}],["theme",{"_index":2542,"title":{},"body":{"interfaces/Scenic.html":{}}}],["then(data",{"_index":702,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["then(map",{"_index":1935,"title":{},"body":{"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["this._autocomplete",{"_index":379,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.search(address",{"_index":388,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.setcity(city",{"_index":391,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.setcitylimit(limit",{"_index":393,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.settype(type",{"_index":392,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._changes[key",{"_index":1667,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["this._changes[key].currentvalue",{"_index":1668,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["this._cm",{"_index":517,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._cm.then(c",{"_index":566,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._cm.then(p",{"_index":521,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._config",{"_index":2003,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._config.apikey",{"_index":2033,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._config.apiversion",{"_index":2031,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._config.urlpath",{"_index":2028,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._defaulturl",{"_index":2029,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._defaultversion",{"_index":2032,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._districtsearch",{"_index":593,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._districtsearch.search(address",{"_index":597,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._districtsearch.setlevel(level",{"_index":600,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._districtsearch.setsubdistrict(district",{"_index":602,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._documentref",{"_index":2005,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._documentref.getnativedocument().body.appendchild(script",{"_index":2025,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._documentref.getnativedocument().createelement('script",{"_index":2012,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._driving",{"_index":630,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._driving.clear",{"_index":650,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._driving.clearavoidpolygons",{"_index":648,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.clearavoidroad",{"_index":646,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.getavoidpolygons",{"_index":652,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.getavoidroad",{"_index":654,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.search(origin",{"_index":638,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.search(path",{"_index":1286,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._driving.searchonamap(obj",{"_index":658,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setavoidpolygons(path",{"_index":642,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setavoidroad(road",{"_index":644,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setpolicy(policy",{"_index":640,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setprovinceandnumber(province",{"_index":656,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._editorplugin",{"_index":1415,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["this._exec('circle",{"_index":998,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('marker",{"_index":992,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('measurearea",{"_index":1006,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('polygon",{"_index":996,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('polyline",{"_index":994,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rectangle",{"_index":1002,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rectzoomin",{"_index":1008,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rectzoomout",{"_index":1010,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rule",{"_index":1004,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._geocoder",{"_index":720,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._geocoder.getaddress(location",{"_index":729,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._geocoder.getlocation(address",{"_index":725,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._geocoder.setcity(city",{"_index":726,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._heatmap",{"_index":785,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this._heatmap.then(p",{"_index":797,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this._heatmap.then(t",{"_index":787,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this._infowindow",{"_index":889,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this._infowindow.then(infowindow",{"_index":914,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this._map",{"_index":1408,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["this._map.then(map",{"_index":1410,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["this._map[key",{"_index":1965,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["this._maploaded",{"_index":2007,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._mappromise",{"_index":2165,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mappromise.then(map",{"_index":2171,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mapresolver",{"_index":2166,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mapresolver(this._map",{"_index":2169,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mousetool",{"_index":988,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._mousetool.close(clear",{"_index":1013,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._mousetool[method](opts",{"_index":1015,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._placesearch",{"_index":1050,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.clear",{"_index":1070,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.getdetails(poiid",{"_index":1061,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.getlang",{"_index":1069,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.poionamap(obj",{"_index":1072,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.search(address",{"_index":1054,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.searchinbounds(keyword",{"_index":1059,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.searchnearby(keyword",{"_index":1056,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setcity(city",{"_index":1073,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setcitylimit(limit",{"_index":1075,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setlang(lang",{"_index":1067,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setpageindex(pageindex",{"_index":1063,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setpagesize(pagesize",{"_index":1065,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.settype(type",{"_index":1074,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._plugin",{"_index":318,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["this._plugin.then",{"_index":372,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["this._plugin.then(wrapper",{"_index":331,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._riding",{"_index":1121,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this._riding.clear",{"_index":1126,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this._riding.search(origin",{"_index":1125,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this._size",{"_index":1963,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["this._subscription",{"_index":334,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._subscription.add(wrapper.on('choose').subscribe(e",{"_index":342,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._subscription.add(wrapper.on('error').subscribe(e",{"_index":338,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._subscription.add(wrapper.on('select').subscribe(e",{"_index":340,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._subscription.unsubscribe",{"_index":335,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._subscriptions",{"_index":537,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.bindevent('change').subscribe(e",{"_index":556,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('dblclick').subscribe(e",{"_index":540,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('hide').subscribe(e",{"_index":544,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mousedown').subscribe(e",{"_index":548,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mouseout').subscribe(e",{"_index":554,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mouseover').subscribe(e",{"_index":552,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mouseup').subscribe(e",{"_index":550,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('rightclick').subscribe(e",{"_index":542,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('show').subscribe(e",{"_index":546,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('touchend').subscribe(e",{"_index":562,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('touchmove').subscribe(e",{"_index":560,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('touchstart').subscribe(e",{"_index":558,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindtoolbarevent('hide').subscribe(e",{"_index":1221,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.bindtoolbarevent('location').subscribe(e",{"_index":1217,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.bindtoolbarevent('show').subscribe(e",{"_index":1219,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.infowindows.bindevent(this._infowindow",{"_index":903,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this._subscriptions.unsubscribe",{"_index":535,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["this._toolbar",{"_index":1200,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._toolbar.then(t",{"_index":1202,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._transfer",{"_index":1250,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.clear",{"_index":1261,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.leaveat(time",{"_index":1260,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.search(origin",{"_index":1254,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.searchonamap(obj",{"_index":1262,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.setcity(city",{"_index":1256,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.setcityd(city",{"_index":1258,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.setpolicy(policy",{"_index":1255,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._walking",{"_index":1304,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._walking.clear",{"_index":1309,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._walking.search(origin",{"_index":1308,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._walking.searchonamap(obj",{"_index":1310,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._windowref",{"_index":2004,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._windowref.getnativewindow())[callbackname",{"_index":2022,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this.address",{"_index":705,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.autos.of(options",{"_index":330,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.bindevent('click').subscribe(e",{"_index":538,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.bindevent(this._autocomplete",{"_index":385,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this.bindevent(this._districtsearch",{"_index":596,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this.bindevent(this._driving",{"_index":633,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this.bindevent(this._geocoder",{"_index":723,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.bindevent(this._mappromise",{"_index":2174,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this.bindevent(this._mousetool",{"_index":990,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.bindevent(this._placesearch",{"_index":1053,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this.bindevent(this._riding",{"_index":1124,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this.bindevent(this._transfer",{"_index":1253,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this.bindevent(this._walking",{"_index":1307,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this.bindevents",{"_index":520,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.bindevents(wrapper",{"_index":332,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.bindtoolbarevent('zoomchanged').subscribe(e",{"_index":1215,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.change.emit(e",{"_index":557,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.choose.emit(e",{"_index":343,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.circlemarkerclick.emit(e",{"_index":539,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.circlemarkerhide.emit(e",{"_index":545,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.circlemarkershow.emit(e",{"_index":547,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.close",{"_index":913,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.cms.bindevent(this._cm",{"_index":564,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.cms.create(options",{"_index":519,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.cms.destroy(this._cm",{"_index":536,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.complete.emit(e",{"_index":337,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.content",{"_index":886,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.createstyle(style",{"_index":2262,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.dblclick.emit(e",{"_index":541,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.el.nativeelement",{"_index":329,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.el.nativeelement.queryselector('.amap",{"_index":887,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.error.emit(e",{"_index":339,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.geopromise",{"_index":694,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.geopromise.then(geocoder",{"_index":700,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.getsrcfromconfig(callbackname",{"_index":2019,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this.hidden",{"_index":789,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.hide",{"_index":533,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.hidedirection",{"_index":1208,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.hidelocation",{"_index":1211,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.hideruler",{"_index":1205,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.hms.bindevent(this._heatmap",{"_index":794,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.hms.create(options",{"_index":786,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.hms.destroy(this._heatmap",{"_index":793,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.hostmarker",{"_index":915,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.hostmarker.then(marker",{"_index":916,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.icon.create(options.icon",{"_index":2296,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.icon.create(options.shadow",{"_index":2298,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["this.infowindows.bindevent(this._infowindow",{"_index":900,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.infowindows.create(options",{"_index":890,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.infowindows.destroy(this._infowindow",{"_index":899,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.infowindows.open(infowindow",{"_index":917,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.isopen",{"_index":906,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.isopenchange.emit(false",{"_index":910,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.isopenchange.emit(true",{"_index":907,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.label.create(options.label",{"_index":2300,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.loaded.then",{"_index":625,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this.loader.load().then",{"_index":2167,"title":{},"body":{"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["this.location.emit(e",{"_index":1218,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.logger.d(this.tag",{"_index":888,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["this.logger.e(`${name",{"_index":2393,"title":{},"body":{"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["this.mousedown.emit(e",{"_index":549,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.mouseout.emit(e",{"_index":555,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.mouseover.emit(e",{"_index":553,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.mouseup.emit(e",{"_index":551,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.on('draw",{"_index":1016,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.open",{"_index":912,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.options",{"_index":518,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["this.pixel.create(iconoption.imageoffset",{"_index":2072,"title":{},"body":{"injectables/IconService.html":{}}}],["this.pixel.create(offset",{"_index":1231,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.pixel.create(options.offset",{"_index":2097,"title":{},"body":{"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["this.pixel.create(style.imageoffset",{"_index":2272,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.pixel.create(style.offset",{"_index":2270,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.pixels.create(options.offset",{"_index":2648,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["this.plugins.load('amap.autocomplete",{"_index":371,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this.plugins.load('amap.beziercurveeditor",{"_index":1416,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["this.plugins.load('amap.circleeditor",{"_index":1725,"title":{},"body":{"injectables/CircleService.html":{}}}],["this.plugins.load('amap.districtsearch",{"_index":588,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this.plugins.load('amap.driving",{"_index":624,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this.plugins.load('amap.ellipseeditor",{"_index":1879,"title":{},"body":{"injectables/EllipseService.html":{}}}],["this.plugins.load('amap.geocoder",{"_index":730,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.plugins.load('amap.heatmap",{"_index":1934,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["this.plugins.load('amap.markerclusterer",{"_index":2259,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.plugins.load('amap.mousetool",{"_index":971,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.plugins.load('amap.placesearch",{"_index":1045,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this.plugins.load('amap.polyeditor",{"_index":2464,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["this.plugins.load('amap.rectangleeditor",{"_index":2526,"title":{},"body":{"injectables/RectangleService.html":{}}}],["this.plugins.load('amap.riding",{"_index":1116,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this.plugins.load('amap.toolbar",{"_index":2647,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["this.plugins.load('amap.transfer",{"_index":1245,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this.plugins.load('amap.truckdriving",{"_index":1279,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this.plugins.load('amap.walking",{"_index":1299,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this.position",{"_index":919,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.ready.emit(p",{"_index":522,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.ready.emit(t",{"_index":788,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.ready.emit(wrapper",{"_index":333,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.rightclick.emit(e",{"_index":543,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.select.emit(e",{"_index":341,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.setcenter(v",{"_index":530,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.setcity(v",{"_index":321,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.setcitylimit(v",{"_index":325,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.setcontent(v",{"_index":893,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.setdataset(v",{"_index":791,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.setextdata(v",{"_index":526,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.setoffset(v",{"_index":1213,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.setoptions(v",{"_index":524,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["this.setposition(v",{"_index":896,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.setradius(v",{"_index":528,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.setsize(v",{"_index":898,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.settype(v",{"_index":323,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.show",{"_index":534,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.showdirection",{"_index":1207,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.showlocation",{"_index":1210,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.showruler",{"_index":1204,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.size.create(iconoption.size",{"_index":2067,"title":{},"body":{"injectables/IconService.html":{}}}],["this.size.create(options.size",{"_index":2099,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["this.size.create(style.size",{"_index":2268,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.sizes.create(size",{"_index":923,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.toggleopen",{"_index":891,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.toolbarhide.emit(e",{"_index":1222,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbars.bindevent(this._toolbar",{"_index":1223,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbars.create(options",{"_index":1201,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbars.destroy(this._toolbar",{"_index":1214,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbarshow.emit(e",{"_index":1220,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.touchend.emit(e",{"_index":563,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.touchmove.emit(e",{"_index":561,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.touchstart.emit(e",{"_index":559,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.unbindevents",{"_index":792,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.verify(options",{"_index":2388,"title":{},"body":{"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["this.windowchange.emit(e",{"_index":902,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.windowclose.emit(e",{"_index":909,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.windowopen.emit(e",{"_index":905,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.zoomchanged.emit(e",{"_index":1216,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["ticket_address",{"_index":1913,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["ticket_tel",{"_index":1914,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["tilelayer",{"_index":1498,"title":{},"body":{"interfaces/CMap.html":{},"interfaces/MapOptions.html":{}}}],["time",{"_index":1268,"title":{},"body":{"classes/AmapTransferWrapper.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Segment.html":{},"interfaces/TMC.html":{},"interfaces/Transfer.html":{},"interfaces/TransferPlan.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["tip",{"_index":1334,"title":{"interfaces/Tip.html":{}},"body":{"interfaces/AutocompleteResult.html":{},"interfaces/Tip.html":{}}}],["tips",{"_index":1333,"title":{},"body":{"interfaces/AutocompleteResult.html":{}}}],["title",{"_index":1783,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Photo.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["tmc",{"_index":1822,"title":{"interfaces/TMC.html":{}},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tmcs",{"_index":1819,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["todo",{"_index":999,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Segment.html":{}}}],["toggle",{"_index":911,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["toggleopen",{"_index":827,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["toll_road",{"_index":1820,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tolls",{"_index":1807,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tolls_distance",{"_index":1808,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tool",{"_index":118,"title":{},"body":{"interfaces/AMapClass.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/ToolBarService.html":{},"index.html":{}}}],["tool.service",{"_index":2359,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["tool.service.ts",{"_index":962,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"miscellaneous/variables.html":{}}}],["tool.service.ts:14",{"_index":966,"title":{},"body":{"injectables/AmapMouseToolService.html":{}}}],["tool.service.ts:16",{"_index":963,"title":{},"body":{"injectables/AmapMouseToolService.html":{}}}],["tool.service.ts:21",{"_index":965,"title":{},"body":{"injectables/AmapMouseToolService.html":{}}}],["tool.service.ts:30",{"_index":1025,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:32",{"_index":1024,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:43",{"_index":1032,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:47",{"_index":1039,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:51",{"_index":1030,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:55",{"_index":1034,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:59",{"_index":1033,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:63",{"_index":1028,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:68",{"_index":1035,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:72",{"_index":1038,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:76",{"_index":1031,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:80",{"_index":1036,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:84",{"_index":1037,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:88",{"_index":1029,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:96",{"_index":1026,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.ts",{"_index":1605,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["tool.ts:12",{"_index":2305,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:13",{"_index":2308,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:14",{"_index":2307,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:15",{"_index":2309,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:16",{"_index":2303,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:17",{"_index":2312,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:18",{"_index":2306,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:19",{"_index":2310,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:20",{"_index":2311,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:21",{"_index":2304,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool/amap",{"_index":961,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":41,"title":{"interfaces/ToolBar.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{}}}],["toolbar.directive",{"_index":2348,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["toolbar.directive.ts",{"_index":1133,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"miscellaneous/variables.html":{}}}],["toolbar.directive.ts:103",{"_index":1182,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:107",{"_index":1194,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:111",{"_index":1185,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:115",{"_index":1192,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:119",{"_index":1183,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:123",{"_index":1193,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:127",{"_index":1184,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:131",{"_index":1179,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:136",{"_index":1190,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:146",{"_index":1181,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:150",{"_index":1180,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:30",{"_index":1196,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:33",{"_index":1167,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:34",{"_index":1168,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:35",{"_index":1169,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:36",{"_index":1166,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:37",{"_index":1164,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:38",{"_index":1163,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:39",{"_index":1161,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:40",{"_index":1160,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:41",{"_index":1165,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:42",{"_index":1170,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:45",{"_index":1162,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:48",{"_index":1175,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:49",{"_index":1171,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:50",{"_index":1172,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:51",{"_index":1173,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:52",{"_index":1174,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:54",{"_index":1195,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:55",{"_index":1159,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:63",{"_index":1188,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:71",{"_index":1186,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:82",{"_index":1187,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:87",{"_index":1176,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:94",{"_index":1178,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:99",{"_index":1191,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.then(t",{"_index":2651,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["toolbar/amap",{"_index":1132,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["toolbarhide",{"_index":1153,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbaroptions",{"_index":1197,"title":{"interfaces/ToolbarOptions.html":{}},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{}}}],["toolbars",{"_index":1156,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbarservice",{"_index":1157,"title":{"injectables/ToolBarService.html":{}},"body":{"directives/AmapToolBarDirective.html":{},"injectables/ToolBarService.html":{}}}],["toolbarshow",{"_index":1154,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["topwhenclick",{"_index":2281,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":2930,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1424,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CLngLat.html":{},"interfaces/CPixel.html":{},"interfaces/CSize.html":{},"interfaces/LngLat.html":{},"interfaces/Pixel.html":{},"interfaces/Size.html":{}}}],["touchend",{"_index":448,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["touchmove",{"_index":449,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["touchstart",{"_index":450,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["touchzoom",{"_index":2199,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["township",{"_index":216,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["traffic",{"_index":1945,"title":{},"body":{"interfaces/Hotel.html":{}}}],["transfer",{"_index":42,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{}}}],["transfer.service",{"_index":2370,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["transfer.service.ts",{"_index":1237,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"miscellaneous/variables.html":{}}}],["transfer.service.ts:17",{"_index":1241,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer.service.ts:19",{"_index":1238,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer.service.ts:24",{"_index":1242,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer.service.ts:32",{"_index":1240,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer.service.ts:41",{"_index":1265,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:48",{"_index":1275,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:57",{"_index":1269,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:61",{"_index":1270,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:73",{"_index":1274,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:77",{"_index":1272,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:81",{"_index":1273,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:85",{"_index":1267,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:89",{"_index":1266,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:93",{"_index":1271,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer/amap",{"_index":1236,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["transfer/amap.transfer",{"_index":135,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["transfer/segment",{"_index":171,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["transfer/transfer",{"_index":169,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["transferoptions",{"_index":1239,"title":{"interfaces/TransferOptions.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{}}}],["transferplan",{"_index":2665,"title":{"interfaces/TransferPlan.html":{}},"body":{"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{}}}],["transferresult",{"_index":1243,"title":{"interfaces/TransferResult.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{}}}],["transfer事件，返回可以被subscribe的observable",{"_index":1252,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["transit",{"_index":2547,"title":{},"body":{"interfaces/Segment.html":{}}}],["transit_distance",{"_index":2672,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["transit_mode",{"_index":2548,"title":{},"body":{"interfaces/Segment.html":{}}}],["transitdetail",{"_index":2549,"title":{},"body":{"interfaces/Segment.html":{}}}],["tree",{"_index":807,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["trigger",{"_index":183,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["trigger(instance",{"_index":199,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["truck",{"_index":1277,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["truckdriving",{"_index":43,"title":{"interfaces/TruckDriving.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["truckdrivingoptions",{"_index":1278,"title":{"interfaces/TruckDrivingOptions.html":{}},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["truckdriving事件，返回可以被subscribe的observable",{"_index":1284,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["true",{"_index":2016,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{}}}],["type",{"_index":57,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CHeatmap.html":{},"interfaces/CPolygon.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type_code",{"_index":1915,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["typealiases",{"_index":2946,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":636,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/IconService.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["types/class",{"_index":362,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["types/class/amap.editor",{"_index":1407,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["types/class/district",{"_index":587,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["types/class/driving/driving",{"_index":623,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["types/class/riding/riding",{"_index":1115,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["types/class/transfer/transfer",{"_index":1244,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["types/class/walking/walking",{"_index":1298,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["types/interface",{"_index":306,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["typescript",{"_index":2833,"title":{},"body":{"index.html":{}}}],["unbindevents",{"_index":748,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["undefined",{"_index":637,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"interfaces/IKeyMap.html":{},"injectables/IconService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{},"classes/Utils.html":{}}}],["url",{"_index":1734,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/IClusterStyle.html":{},"interfaces/Photo.html":{}}}],["urlbase",{"_index":2027,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["urlbase}?${params",{"_index":2051,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["urlpath",{"_index":1984,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["use",{"_index":976,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"license.html":{}}}],["useclass",{"_index":2375,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["usenative",{"_index":1152,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":2374,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["utils",{"_index":309,"title":{"classes/Utils.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/Utils.html":{}}}],["utils.getoptionsfor(this",{"_index":327,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["utils/browser",{"_index":1987,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{}}}],["utils/change",{"_index":312,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["utils/event",{"_index":367,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["utils/utils",{"_index":310,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["v",{"_index":532,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["v1.3.1",{"_index":2827,"title":{},"body":{"index.html":{}}}],["v1.3.2",{"_index":2825,"title":{},"body":{"index.html":{}}}],["v1.3.3",{"_index":2818,"title":{},"body":{"index.html":{}}}],["v1.4.0",{"_index":2809,"title":{},"body":{"index.html":{}}}],["v1.4.3",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["v1.x",{"_index":2813,"title":{},"body":{"index.html":{}}}],["v2.0.0",{"_index":2823,"title":{},"body":{"index.html":{}}}],["v2.1.0",{"_index":2821,"title":{},"body":{"index.html":{}}}],["v2.1.1",{"_index":2817,"title":{},"body":{"index.html":{}}}],["v2.2.0",{"_index":2815,"title":{},"body":{"index.html":{}}}],["v2.x",{"_index":2808,"title":{},"body":{"index.html":{}}}],["value",{"_index":297,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1971,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["var",{"_index":932,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["variables",{"_index":2957,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":2383,"title":{},"body":{"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["verify(pixel",{"_index":2386,"title":{},"body":{"injectables/PixelService.html":{}}}],["verify(size",{"_index":2557,"title":{},"body":{"injectables/SizeService.html":{}}}],["verticalalign",{"_index":2616,"title":{},"body":{"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["viacity",{"_index":1821,"title":{"interfaces/ViaCity.html":{}},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["view",{"_index":2200,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["view2d",{"_index":2204,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["viewmode",{"_index":2201,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":2282,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":52,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"classes/KeyMap.html":{},"injectables/LoggerService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/RenderObject.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["w",{"_index":1747,"title":{},"body":{"injectables/DebugLoggerService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{}}}],["w(tag",{"_index":1756,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["w.close",{"_index":2102,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["walk",{"_index":2691,"title":{},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkingResult.html":{}}}],["walkdetails",{"_index":2550,"title":{},"body":{"interfaces/Segment.html":{}}}],["walking",{"_index":44,"title":{"interfaces/Walking.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["walking.service",{"_index":2371,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["walking.service.ts",{"_index":1291,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"miscellaneous/variables.html":{}}}],["walking.service.ts:17",{"_index":1295,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking.service.ts:19",{"_index":1292,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking.service.ts:24",{"_index":1296,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking.service.ts:32",{"_index":1294,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking.service.ts:41",{"_index":1311,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:48",{"_index":1316,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:57",{"_index":1313,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:61",{"_index":1314,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:73",{"_index":1312,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:77",{"_index":1315,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking/amap",{"_index":1290,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["walking/amap.walking",{"_index":136,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["walking/walk",{"_index":172,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["walking/walking",{"_index":173,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["walking_distance",{"_index":2673,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["walkingoptions",{"_index":1293,"title":{"interfaces/WalkingOptions.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{}}}],["walkingresult",{"_index":1297,"title":{"interfaces/WalkingResult.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["walking事件，返回可以被subscribe的observable",{"_index":1306,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["walkroute",{"_index":2688,"title":{"interfaces/WalkRoute.html":{}},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkingResult.html":{}}}],["walkstep",{"_index":2690,"title":{"interfaces/WalkStep.html":{}},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["warranties",{"_index":2916,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2911,"title":{},"body":{"license.html":{}}}],["waypoints",{"_index":1849,"title":{},"body":{"interfaces/DrivingResult.html":{}}}],["website",{"_index":2430,"title":{},"body":{"interfaces/Poi.html":{}}}],["weight",{"_index":2680,"title":{},"body":{"interfaces/TruckDrivingOptions.html":{}}}],["whether",{"_index":2928,"title":{},"body":{"license.html":{}}}],["width",{"_index":1634,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/ISize.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["window",{"_index":105,"title":{},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"injectables/DocumentRef.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["window'},{'name",{"_index":934,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component",{"_index":2343,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["window.component.html",{"_index":814,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.scss",{"_index":812,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts",{"_index":810,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"miscellaneous/variables.html":{}}}],["window.component.ts:103",{"_index":876,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:108",{"_index":869,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:122",{"_index":860,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:127",{"_index":871,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:131",{"_index":873,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:135",{"_index":875,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:143",{"_index":862,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:147",{"_index":861,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:151",{"_index":863,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:155",{"_index":864,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:30",{"_index":880,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:33",{"_index":847,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:34",{"_index":845,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:35",{"_index":846,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:36",{"_index":854,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:37",{"_index":850,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:38",{"_index":851,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:39",{"_index":852,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:42",{"_index":848,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:45",{"_index":855,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:46",{"_index":858,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:47",{"_index":857,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:48",{"_index":856,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:50",{"_index":878,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:51",{"_index":879,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:52",{"_index":877,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:53",{"_index":844,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:62",{"_index":867,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:71",{"_index":865,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:81",{"_index":866,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:86",{"_index":859,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.service",{"_index":884,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.service.ts",{"_index":2088,"title":{},"body":{"injectables/InfoWindowService.html":{},"miscellaneous/variables.html":{}}}],["window.service.ts:15",{"_index":2095,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:16",{"_index":2089,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:28",{"_index":2090,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:42",{"_index":2092,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:48",{"_index":2094,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.ts",{"_index":1476,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["window.ts:11",{"_index":2080,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:12",{"_index":2075,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:13",{"_index":2077,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:14",{"_index":2081,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:15",{"_index":2076,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:16",{"_index":2082,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:17",{"_index":2078,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:18",{"_index":2083,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:19",{"_index":2079,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window/amap",{"_index":809,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["window/info",{"_index":883,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/InfoWindowService.html":{},"miscellaneous/variables.html":{}}}],["windowchange",{"_index":836,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["windowclose",{"_index":837,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["windowopen",{"_index":838,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["windowref",{"_index":1799,"title":{"injectables/WindowRef.html":{}},"body":{"injectables/DocumentRef.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{},"injectables/WindowRef.html":{}}}],["window现在会跟随它的hostmarker",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":2886,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":279,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["wrapper.on('complete').subscribe(e",{"_index":336,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["wrapper.setcity(city",{"_index":346,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["wrapper.setcitylimit(limit",{"_index":348,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["wrapper.settype(type",{"_index":347,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["x",{"_index":1613,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/IPixel.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{}}}],["xie",{"_index":2871,"title":{},"body":{"license.html":{}}}],["y",{"_index":1527,"title":{},"body":{"interfaces/CMap.html":{},"interfaces/CPixel.html":{},"interfaces/IPixel.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{}}}],["yarn",{"_index":2832,"title":{},"body":{"index.html":{}}}],["yes",{"_index":190,"title":{},"body":{"interfaces/AMapEvent.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Editor.html":{},"interfaces/Heatmap.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{}}}],["zindex",{"_index":437,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["ziyu",{"_index":2872,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2202,"title":{},"body":{"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"modules/NgxAmapModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["zoomchanged",{"_index":1155,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["zoomenable",{"_index":2203,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["zoomin",{"_index":1523,"title":{},"body":{"interfaces/CMap.html":{}}}],["zoomonclick",{"_index":2241,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["zoomout",{"_index":1524,"title":{},"body":{"interfaces/CMap.html":{}}}],["zooms",{"_index":752,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AMapClass.html":{"url":"interfaces/AMapClass.html","title":"interface - AMapClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AMapClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Autocomplete\n                                \n                                \n                                        BezierCurve\n                                \n                                \n                                        BezierCurveEditor\n                                \n                                \n                                        Bounds\n                                \n                                \n                                        Circle\n                                \n                                \n                                        CircleEditor\n                                \n                                \n                                        CircleMarker\n                                \n                                \n                                        DistrictSearch\n                                \n                                \n                                        Driving\n                                \n                                \n                                        Ellipse\n                                \n                                \n                                        EllipseEditor\n                                \n                                \n                                        event\n                                \n                                \n                                        Geocoder\n                                \n                                \n                                        Heatmap\n                                \n                                \n                                        Icon\n                                \n                                \n                                        InfoWindow\n                                \n                                \n                                        LngLat\n                                \n                                \n                                        Map\n                                \n                                \n                                        Marker\n                                \n                                \n                                        MarkerClusterer\n                                \n                                \n                                        MouseTool\n                                \n                                \n                                        Pixel\n                                \n                                \n                                        PlaceSearch\n                                \n                                \n                                        PolyEditor\n                                \n                                \n                                        Polygon\n                                \n                                \n                                        Polyline\n                                \n                                \n                                        Rectangle\n                                \n                                \n                                        RectangleEditor\n                                \n                                \n                                        Riding\n                                \n                                \n                                        Size\n                                \n                                \n                                        Text\n                                \n                                \n                                        ToolBar\n                                \n                                \n                                        Transfer\n                                \n                                \n                                        TruckDriving\n                                \n                                \n                                        Walking\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugin\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin(name: string | string[], callback: (result: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/index.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Autocomplete\n                                    \n                                \n                                \n                                    \n                                        Autocomplete:         CAutocomplete\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CAutocomplete\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BezierCurve\n                                    \n                                \n                                \n                                    \n                                        BezierCurve:         CBezierCurve\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CBezierCurve\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BezierCurveEditor\n                                    \n                                \n                                \n                                    \n                                        BezierCurveEditor:         CBezierCurveEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CBezierCurveEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Bounds\n                                    \n                                \n                                \n                                    \n                                        Bounds:         CBounds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CBounds\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Circle\n                                    \n                                \n                                \n                                    \n                                        Circle:         CCircle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CCircle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CircleEditor\n                                    \n                                \n                                \n                                    \n                                        CircleEditor:         CCircleEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CCircleEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CircleMarker\n                                    \n                                \n                                \n                                    \n                                        CircleMarker:         CCircleMarker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CCircleMarker\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DistrictSearch\n                                    \n                                \n                                \n                                    \n                                        DistrictSearch:         CDistrictSearch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CDistrictSearch\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Driving\n                                    \n                                \n                                \n                                    \n                                        Driving:         CDriving\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CDriving\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Ellipse\n                                    \n                                \n                                \n                                    \n                                        Ellipse:         CEllipse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CEllipse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EllipseEditor\n                                    \n                                \n                                \n                                    \n                                        EllipseEditor:         CEllipseEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CEllipseEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         AMapEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AMapEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Geocoder\n                                    \n                                \n                                \n                                    \n                                        Geocoder:         CGeocoder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CGeocoder\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Heatmap\n                                    \n                                \n                                \n                                    \n                                        Heatmap:         CHeatmap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CHeatmap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         CIcon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CIcon\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        InfoWindow\n                                    \n                                \n                                \n                                    \n                                        InfoWindow:         CInfoWindow\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CInfoWindow\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LngLat\n                                    \n                                \n                                \n                                    \n                                        LngLat:         CLngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CLngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Map\n                                    \n                                \n                                \n                                    \n                                        Map:         CMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Marker\n                                    \n                                \n                                \n                                    \n                                        Marker:         CMarker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMarker\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MarkerClusterer\n                                    \n                                \n                                \n                                    \n                                        MarkerClusterer:         CMarkerClusterer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMarkerClusterer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MouseTool\n                                    \n                                \n                                \n                                    \n                                        MouseTool:         CMouseTool\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMouseTool\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Pixel\n                                    \n                                \n                                \n                                    \n                                        Pixel:         CPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPixel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PlaceSearch\n                                    \n                                \n                                \n                                    \n                                        PlaceSearch:         CPlaceSearch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPlaceSearch\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PolyEditor\n                                    \n                                \n                                \n                                    \n                                        PolyEditor:         CPolyEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPolyEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Polygon\n                                    \n                                \n                                \n                                    \n                                        Polygon:         CPolygon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPolygon\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Polyline\n                                    \n                                \n                                \n                                    \n                                        Polyline:         CPolyline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPolyline\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rectangle\n                                    \n                                \n                                \n                                    \n                                        Rectangle:         CRectangle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CRectangle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RectangleEditor\n                                    \n                                \n                                \n                                    \n                                        RectangleEditor:         CRectangleEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CRectangleEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Riding\n                                    \n                                \n                                \n                                    \n                                        Riding:         CRiding\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CRiding\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Size\n                                    \n                                \n                                \n                                    \n                                        Size:         CSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         CText\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CText\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ToolBar\n                                    \n                                \n                                \n                                    \n                                        ToolBar:         CToolBar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CToolBar\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Transfer\n                                    \n                                \n                                \n                                    \n                                        Transfer:         CTransfer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CTransfer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TruckDriving\n                                    \n                                \n                                \n                                    \n                                        TruckDriving:         CTruckDriving\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CTruckDriving\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Walking\n                                    \n                                \n                                \n                                    \n                                        Walking:         CWalking\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CWalking\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map, CMap } from './amap.map';\nimport { LngLat, CLngLat } from './amap.lng-lat';\nimport { Pixel, CPixel } from './amap.pixel';\nimport { Size, CSize } from './amap.size';\nimport { CIcon, Icon } from './amap.icon';\nimport { AMapEvent } from './amap.event';\nimport { CInfoWindow, InfoWindow } from './amap.info-window';\nimport { CToolBar, ToolBar } from './amap.toolbar';\nimport { ClusterStyle } from './cluster-style';\nimport { CGeocoder, Geocoder } from './geocoder/amap.geocoder';\nimport { CAutocomplete, Autocomplete } from './autocomplete/amap.autocomplete';\nimport { CPlaceSearch, PlaceSearch } from './place-search/amap.place-search';\nimport { CDistrictSearch, DistrictSearch } from './district-search/amap.district-search';\nimport { CMouseTool, MouseTool } from './amap.mouse-tool';\nimport { Bounds, CBounds } from './amap.bounds';\nimport { CMarker, Marker } from './overlays/amap.marker';\nimport { CPolyline, Polyline } from './overlays/amap.polyline';\nimport { CPolygon, Polygon } from './overlays/amap.polygon';\nimport { CCircle, Circle } from './overlays/amap.circle';\nimport { CCircleMarker, CircleMarker } from './overlays/amap.circle-marker';\nimport { Text, CText } from './overlays/amap.text';\nimport { CMarkerClusterer, MarkerClusterer } from './amap.marker-clusterer';\nimport { BezierCurve, CBezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse, CEllipse } from './overlays/amap.ellipse';\nimport { Rectangle, CRectangle } from './overlays/amap.rectangle';\nimport { CircleEditor, CCircleEditor } from './amap.editor';\nimport { PolyEditor, CPolyEditor } from './amap.editor';\nimport { BezierCurveEditor, CBezierCurveEditor } from './amap.editor';\nimport { EllipseEditor, CEllipseEditor } from './amap.editor';\nimport { RectangleEditor, CRectangleEditor } from './amap.editor';\nimport { Heatmap, CHeatmap } from './layers/amap.heatmap';\nimport { Driving, CDriving } from './driving/amap.driving';\nimport { TruckDriving, CTruckDriving } from './driving/amap.truck-driving';\nimport { Transfer, CTransfer } from './transfer/amap.transfer';\nimport { Walking, CWalking } from './walking/amap.walking';\nimport { Riding, CRiding } from './riding/amap.riding';\n\nexport interface AMapClass {\n  Map: CMap;\n  LngLat: CLngLat;\n  Pixel: CPixel;\n  Size: CSize;\n  Marker: CMarker;\n  Icon: CIcon;\n  event: AMapEvent;\n  InfoWindow: CInfoWindow;\n  Polyline: CPolyline;\n  Polygon: CPolygon;\n  ToolBar: CToolBar;\n  MarkerClusterer: CMarkerClusterer;\n  Geocoder: CGeocoder;\n  Autocomplete: CAutocomplete;\n  PlaceSearch: CPlaceSearch;\n  DistrictSearch: CDistrictSearch;\n  MouseTool: CMouseTool;\n  Circle: CCircle;\n  CircleMarker: CCircleMarker;\n  Bounds: CBounds;\n  Text: CText;\n  BezierCurve: CBezierCurve;\n  Ellipse: CEllipse;\n  Rectangle: CRectangle;\n  CircleEditor: CCircleEditor;\n  PolyEditor: CPolyEditor;\n  BezierCurveEditor: CBezierCurveEditor;\n  EllipseEditor: CEllipseEditor;\n  RectangleEditor: CRectangleEditor;\n  Heatmap: CHeatmap;\n  Driving: CDriving;\n  Transfer: CTransfer;\n  Walking: CWalking;\n  Riding: CRiding;\n  TruckDriving: CTruckDriving;\n\n  plugin(name: string | string[], callback: (result: any) => void): void;\n}\n\nexport {\n  Map, LngLat, Pixel, Size, Marker, Icon,\n  InfoWindow, Polyline, Polygon, ToolBar, MarkerClusterer,\n  ClusterStyle, Geocoder, Autocomplete, PlaceSearch, DistrictSearch,\n  Circle, CircleMarker, MouseTool, Bounds, Text, BezierCurve,\n  Ellipse, Rectangle, CircleEditor, PolyEditor, BezierCurveEditor,\n  EllipseEditor, RectangleEditor, Heatmap, Driving, Transfer, Walking,\n  Riding, TruckDriving\n};\n\n// Geocoder\nexport * from './geocoder/address-component';\nexport * from './geocoder/business-area';\nexport * from './geocoder/cross';\nexport * from './geocoder/geocode-result';\nexport * from './geocoder/geocode';\nexport * from './geocoder/geocoder-result';\nexport * from './geocoder/re-geocode-poi';\nexport * from './geocoder/re-geocode-result';\nexport * from './geocoder/re-geocode';\nexport * from './geocoder/road';\n\n// Autocomplete\nexport * from './autocomplete/autocomplete-result';\nexport * from './autocomplete/tip';\n\n// PlaceSearch\nexport * from './place-search/cinema';\nexport * from './place-search/city-info';\nexport * from './place-search/dining';\nexport * from './place-search/discount';\nexport * from './place-search/groupbuy';\nexport * from './place-search/hotel';\nexport * from './place-search/photo';\nexport * from './place-search/poi-list';\nexport * from './place-search/poi';\nexport * from './place-search/scenic';\nexport * from './place-search/search-result';\n\n// DistrictSearch\nexport * from './district-search/district-search-result';\nexport * from './district-search/district';\n\n// Layers\nexport * from './layers/amap.heatmap';\n\n// Driving\nexport * from './driving/amap.driving';\nexport * from './driving/amap.truck-driving';\nexport * from './driving/drive-route';\nexport * from './driving/drive-step';\nexport * from './driving/driving-result';\n\n// Transfer\nexport * from './transfer/amap.transfer';\nexport * from './transfer/transfer-result';\nexport * from './transfer/transfer-plan';\nexport * from './transfer/segment';\n\n// Walking\nexport * from './walking/amap.walking';\nexport * from './walking/walk-route';\nexport * from './walking/walk-step';\nexport * from './walking/walking-result';\n\n// Riding\nexport * from './riding/amap.riding';\nexport * from './riding/ride-route';\nexport * from './riding/ride-step';\nexport * from './riding/riding-result';\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AMapEvent.html":{"url":"interfaces/AMapEvent.html","title":"interface - AMapEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AMapEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addDomListener\n                                \n                                \n                                    addListener\n                                \n                                \n                                    addListenerOnce\n                                \n                                \n                                    removeListener\n                                \n                                \n                                    trigger\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDomListener\n                        \n                        \n                    \n                \n            \n            \n                \naddDomListener(instance: any, eventName: string, handler: (event: any) => void, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EventListener\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addListener\n                        \n                        \n                    \n                \n            \n            \n                \naddListener(instance: any, eventName: string, handler: (event: any) => void, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EventListener\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addListenerOnce\n                        \n                        \n                    \n                \n            \n            \n                \naddListenerOnce(instance: any, eventName: string, handler: (event: any) => void, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EventListener\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeListener\n                        \n                        \n                    \n                \n            \n            \n                \nremoveListener(listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger(instance: any, eventName: string, extArgs)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    extArgs\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AMapEvent {\n  addDomListener(instance: any, eventName: string, handler: (event?: any) => void, context?: any): EventListener;\n  addListener(instance: any, eventName: string, handler: (event?: any) => void, context?: any): EventListener;\n  addListenerOnce(instance: any, eventName: string, handler: (event?: any) => void, context?: any): EventListener;\n  removeListener(listener: EventListener): void;\n  trigger(instance: any, eventName: string, extArgs): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddressComponent.html":{"url":"interfaces/AddressComponent.html","title":"interface - AddressComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/address-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        building\n                                \n                                \n                                        buildingType\n                                \n                                \n                                        businessAreas\n                                \n                                \n                                        city\n                                \n                                \n                                        citycode\n                                \n                                \n                                        district\n                                \n                                \n                                        neighborhood\n                                \n                                \n                                        neighborhoodType\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                                \n                                        streetNumber\n                                \n                                \n                                        township\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        building\n                                    \n                                \n                                \n                                    \n                                        building:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buildingType\n                                    \n                                \n                                \n                                    \n                                        buildingType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        businessAreas\n                                    \n                                \n                                \n                                    \n                                        businessAreas:         BusinessArea[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BusinessArea[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        district\n                                    \n                                \n                                \n                                    \n                                        district:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighborhood\n                                    \n                                \n                                \n                                    \n                                        neighborhood:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighborhoodType\n                                    \n                                \n                                \n                                    \n                                        neighborhoodType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetNumber\n                                    \n                                \n                                \n                                    \n                                        streetNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        township\n                                    \n                                \n                                \n                                    \n                                        township:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BusinessArea } from './business-area';\n\nexport interface AddressComponent {\n  province: string;\n  city: string;\n  citycode: string;\n  district: string;\n  adcode: string;\n  township: string;\n  street: string;\n  streetNumber: string;\n  neighborhood: string;\n  neighborhoodType: string;\n  building: string;\n  buildingType: string;\n  businessAreas: BusinessArea[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapAutocompleteDirective.html":{"url":"directives/AmapAutocompleteDirective.html","title":"directive - AmapAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[amapAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityLimit\n                            \n                            \n                                setType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                citylimit\n                            \n                            \n                                datatype\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choose\n                            \n                            \n                                complete\n                            \n                            \n                                error\n                            \n                            \n                                ready\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, autos: AmapAutocompleteService, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autos\n                                                  \n                                                        \n                                                                        AmapAutocompleteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        city\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:28\n                            \n                        \n                \n                    \n                        输入提示时限定城市 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        citylimit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:32\n                            \n                        \n                \n                    \n                        是否强制限制在设置的城市内搜索 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        datatype\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:30\n                            \n                        \n                \n                    \n                        返回的数据类型 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:26\n                            \n                        \n                \n                    \n                        输入提示时限定POI类型，多个类型用“|”分隔，默认值：所有类别 \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        choose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:43\n                            \n                        \n                \n                    \n                        Autocomplete插件触发choose事件时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        complete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:37\n                            \n                        \n                \n                    \n                        Autocomplete插件触发complete事件时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:39\n                            \n                        \n                \n                    \n                        Autocomplete插件触发error事件时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:35\n                            \n                        \n                \n                    \n                        插件载入完毕时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:41\n                            \n                        \n                \n                    \n                        Autocomplete插件触发select事件时触发 \n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents(wrapper: AmapAutocompleteWrapper)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    wrapper\n                                    \n                                                AmapAutocompleteWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-autocomplete'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive, Input, Output, OnDestroy, OnInit, ElementRef,\n  EventEmitter, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { AutocompleteOptions } from '../../types/interface';\nimport { AmapAutocompleteService, AmapAutocompleteWrapper } from '../../services/amap-autocomplete/amap-autocomplete.service';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\n\nconst ALL_OPTIONS = [\n  'type',\n  'city',\n  'datatype',\n  'citylimit'\n];\n\n@Directive({\n  selector: 'input[amapAutocomplete]'\n})\nexport class AmapAutocompleteDirective implements OnChanges, OnInit, OnDestroy {\n  TAG = 'amap-autocomplete';\n\n  /** 输入提示时限定POI类型，多个类型用“|”分隔，默认值：所有类别 */\n  @Input() type: string;\n  /** 输入提示时限定城市 */\n  @Input() city: string;\n  /** 返回的数据类型 */\n  @Input() datatype: string;\n  /** 是否强制限制在设置的城市内搜索 */\n  @Input() citylimit: boolean;\n\n  /** 插件载入完毕时触发 */\n  @Output() ready = new EventEmitter();\n  /** Autocomplete插件触发complete事件时触发 */\n  @Output() complete = new EventEmitter();\n  /** Autocomplete插件触发error事件时触发 */\n  @Output() error = new EventEmitter();\n  /** Autocomplete插件触发select事件时触发 */\n  @Output() select = new EventEmitter();\n  /** Autocomplete插件触发choose事件时触发 */\n  @Output() choose = new EventEmitter();\n\n  private _subscription: Subscription;\n  private _plugin: Promise;\n\n  constructor(\n    private logger: LoggerService,\n    private autos: AmapAutocompleteService,\n    private el: ElementRef\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._plugin) {\n      const filter = ChangeFilter.of(changes);\n      filter.has('city').subscribe(v => this.setCity(v));\n      filter.has('type').subscribe(v => this.setType(v));\n      filter.has('citylimit').subscribe(v => this.setCityLimit(v));\n    }\n  }\n\n  ngOnInit() {\n    const options = Utils.getOptionsFor(this, ALL_OPTIONS);\n    options.input = this.el.nativeElement;\n    this._plugin = this.autos.of(options);\n    this._plugin.then(wrapper => {\n      this.bindEvents(wrapper);\n      this.ready.emit(wrapper);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private bindEvents(wrapper: AmapAutocompleteWrapper) {\n    this._subscription = wrapper.on('complete').subscribe(e => this.complete.emit(e));\n    this._subscription.add(wrapper.on('error').subscribe(e => this.error.emit(e)));\n    this._subscription.add(wrapper.on('select').subscribe(e => this.select.emit(e)));\n    this._subscription.add(wrapper.on('choose').subscribe(e => this.choose.emit(e)));\n  }\n\n  // Setters\n  setCity(city: string) {\n    return this._plugin.then(wrapper => wrapper.setCity(city));\n  }\n\n  setType(type: string) {\n    return this._plugin.then(wrapper => wrapper.setType(type));\n  }\n\n  setCityLimit(limit: boolean) {\n    return this._plugin.then(wrapper => wrapper.setCityLimit(limit));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapAutocompleteService.html":{"url":"injectables/AmapAutocompleteService.html","title":"injectable - AmapAutocompleteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapAutocompleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts\n        \n\n            \n                Description\n            \n            \n                根据输入关键字提示匹配信息，可将Poi类型和城市作为输入提示的限制条件\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: AutocompleteOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                AutocompleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-autocomplete'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Autocomplete } from '../../types/class';\nimport { AutocompleteOptions } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 根据输入关键字提示匹配信息，可将Poi类型和城市作为输入提示的限制条件\n */\n@Injectable()\nexport class AmapAutocompleteService {\n  TAG = 'amap-autocomplete';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {}\n\n  of(opts?: AutocompleteOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Autocomplete');\n    }\n\n    return this._plugin.then(() => new AmapAutocompleteWrapper(opts));\n  }\n}\n\n/**\n * AmapAutocompleteWrapper对象将高德原生的Autocomplete对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapAutocompleteWrapper extends EventBinder {\n  private _autocomplete: Autocomplete;\n\n  constructor(opts?: AutocompleteOptions) {\n    super();\n    this._autocomplete = new AMap.Autocomplete(opts);\n  }\n\n  get native(): Autocomplete {\n    return this._autocomplete;\n  }\n\n  /**\n   * 用于侦听Autocomplete事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._autocomplete, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._autocomplete.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string) {\n    this._autocomplete.setCity(city);\n  }\n\n  setType(type: string) {\n    this._autocomplete.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._autocomplete.setCityLimit(limit);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapAutocompleteWrapper.html":{"url":"classes/AmapAutocompleteWrapper.html","title":"class - AmapAutocompleteWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapAutocompleteWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapAutocompleteWrapper对象将高德原生的Autocomplete对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _autocomplete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityLimit\n                            \n                            \n                                setType\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: AutocompleteOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        AutocompleteOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _autocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:51\n                \n            \n\n\n            \n                \n                    用于侦听Autocomplete事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Autocomplete } from '../../types/class';\nimport { AutocompleteOptions } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 根据输入关键字提示匹配信息，可将Poi类型和城市作为输入提示的限制条件\n */\n@Injectable()\nexport class AmapAutocompleteService {\n  TAG = 'amap-autocomplete';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {}\n\n  of(opts?: AutocompleteOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Autocomplete');\n    }\n\n    return this._plugin.then(() => new AmapAutocompleteWrapper(opts));\n  }\n}\n\n/**\n * AmapAutocompleteWrapper对象将高德原生的Autocomplete对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapAutocompleteWrapper extends EventBinder {\n  private _autocomplete: Autocomplete;\n\n  constructor(opts?: AutocompleteOptions) {\n    super();\n    this._autocomplete = new AMap.Autocomplete(opts);\n  }\n\n  get native(): Autocomplete {\n    return this._autocomplete;\n  }\n\n  /**\n   * 用于侦听Autocomplete事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._autocomplete, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._autocomplete.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string) {\n    this._autocomplete.setCity(city);\n  }\n\n  setType(type: string) {\n    this._autocomplete.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._autocomplete.setCityLimit(limit);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapCircleMarkerDirective.html":{"url":"directives/AmapCircleMarkerDirective.html","title":"directive - AmapCircleMarkerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapCircleMarkerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        amap-circle-marker\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cm\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvent\n                            \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                getCenter\n                            \n                            \n                                getExtData\n                            \n                            \n                                getOptions\n                            \n                            \n                                getRadius\n                            \n                            \n                                hide\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setCenter\n                            \n                            \n                                setExtData\n                            \n                            \n                                setOptions\n                            \n                            \n                                setRadius\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bubble\n                            \n                            \n                                center\n                            \n                            \n                                cursor\n                            \n                            \n                                extData\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                hidden\n                            \n                            \n                                options\n                            \n                            \n                                radius\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                circleMarkerClick\n                            \n                            \n                                circleMarkerHide\n                            \n                            \n                                circleMarkerShow\n                            \n                            \n                                dblClick\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                ready\n                            \n                            \n                                rightClick\n                            \n                            \n                                touchEnd\n                            \n                            \n                                touchMove\n                            \n                            \n                                touchStart\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, cms: CircleMarkerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cms\n                                                  \n                                                        \n                                                                        CircleMarkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bubble\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :         ILngLat\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cursor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        extData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         CircleMarkerOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        circleMarkerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        circleMarkerHide\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        circleMarkerShow\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dblClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:63\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvent(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(lnglat: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: CircleMarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                CircleMarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _cm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-circle-marker'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, Output, OnDestroy,\n  EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { CircleMarker, Map, LngLat } from '../../types/class';\nimport { CircleMarkerOptions, ILngLat } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { CircleMarkerService } from '../../services/circle-marker/circle-marker.service';\n\nconst ALL_OPTIONS = [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'extData'\n];\n\n@Directive({\n  selector: 'amap-circle-marker',\n  exportAs: 'circle-marker'\n})\nexport class AmapCircleMarkerDirective implements OnChanges, OnDestroy {\n  TAG = 'amap-circle-marker';\n\n  // These properties are supported in CircleMarkerOptions:\n  @Input() zIndex: number;\n  @Input() center: ILngLat;\n  @Input() bubble: boolean;\n  @Input() cursor: string;\n  @Input() radius: number;\n  @Input() strokeColor: string;\n  @Input() strokeOpacity: number;\n  @Input() strokeWeight: number;\n  @Input() fillColor: string;\n  @Input() fillOpacity: number;\n  @Input() extData: any;\n\n  // This options property will override other property:\n  @Input() options: CircleMarkerOptions;\n\n  // Extra property:\n  @Input() hidden = false;\n\n  // amap-circle events:\n  @Output() circleMarkerClick = new EventEmitter();\n  @Output() ready = new EventEmitter();\n  @Output() dblClick = new EventEmitter();\n  @Output() rightClick = new EventEmitter();\n  @Output() circleMarkerHide = new EventEmitter();\n  @Output() circleMarkerShow = new EventEmitter();\n  @Output() mouseDown = new EventEmitter();\n  @Output() mouseUp = new EventEmitter();\n  @Output() mouseOver = new EventEmitter();\n  @Output() mouseOut = new EventEmitter();\n  @Output() change = new EventEmitter();\n  @Output() touchStart = new EventEmitter();\n  @Output() touchMove = new EventEmitter();\n  @Output() touchEnd = new EventEmitter();\n\n  private _cm: Promise;\n  private _subscriptions: Subscription;\n\n  constructor(\n    private logger: LoggerService,\n    private cms: CircleMarkerService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n\n    if (!this._cm) {\n      const options = this.options || Utils.getOptionsFor(this, ALL_OPTIONS);\n      this._cm = this.cms.create(options);\n      this.bindEvents();\n      this._cm.then(p => this.ready.emit(p));\n    } else {\n      filter.has('options').subscribe(v => this.setOptions(v || {}));\n      filter.has('extData').subscribe(v => this.setExtData(v));\n      filter.has('radius').subscribe(v => this.setRadius(v));\n      filter.notEmpty('center').subscribe(v => this.setCenter(v));\n    }\n\n    filter.has('hidden').subscribe(v => v ? this.hide() : this.show());\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this.cms.destroy(this._cm);\n  }\n\n  private bindEvents() {\n    this._subscriptions = this.bindEvent('click').subscribe(e => this.circleMarkerClick.emit(e));\n    this._subscriptions.add(this.bindEvent('dblclick').subscribe(e => this.dblClick.emit(e)));\n    this._subscriptions.add(this.bindEvent('rightclick').subscribe(e => this.rightClick.emit(e)));\n    this._subscriptions.add(this.bindEvent('hide').subscribe(e => this.circleMarkerHide.emit(e)));\n    this._subscriptions.add(this.bindEvent('show').subscribe(e => this.circleMarkerShow.emit(e)));\n    this._subscriptions.add(this.bindEvent('mousedown').subscribe(e => this.mouseDown.emit(e)));\n    this._subscriptions.add(this.bindEvent('mouseup').subscribe(e => this.mouseUp.emit(e)));\n    this._subscriptions.add(this.bindEvent('mouseover').subscribe(e => this.mouseOver.emit(e)));\n    this._subscriptions.add(this.bindEvent('mouseout').subscribe(e => this.mouseOut.emit(e)));\n    this._subscriptions.add(this.bindEvent('change').subscribe(e => this.change.emit(e)));\n    this._subscriptions.add(this.bindEvent('touchstart').subscribe(e => this.touchStart.emit(e)));\n    this._subscriptions.add(this.bindEvent('touchmove').subscribe(e => this.touchMove.emit(e)));\n    this._subscriptions.add(this.bindEvent('touchend').subscribe(e => this.touchEnd.emit(e)));\n  }\n\n  private bindEvent(event: string) {\n    return this.cms.bindEvent(this._cm, event);\n  }\n\n  // Public methods:\n  show(): Promise {\n    return this._cm.then(c => c.show());\n  }\n\n  hide(): Promise {\n    return this._cm.then(c => c.hide());\n  }\n\n  // Setters:\n  setCenter(lnglat: LngLat|ILngLat): Promise {\n    return this._cm.then(c => c.setCenter(lnglat));\n  }\n\n  setRadius(radius: number): Promise {\n    return this._cm.then(c => c.setRadius(radius));\n  }\n\n  setOptions(opt: CircleMarkerOptions): Promise {\n    return this._cm.then(c => c.setOptions(opt));\n  }\n\n  setExtData(ext: any): Promise {\n    return this._cm.then(c => c.setExtData(ext));\n  }\n\n  // Getters:\n  getCenter(): Promise {\n    return this._cm.then(c => c.getCenter());\n  }\n\n  getRadius(): Promise {\n    return this._cm.then(c => c.getRadius());\n  }\n\n  getOptions(): Promise {\n    return this._cm.then(c => c.getOptions());\n  }\n\n  getExtData(): Promise {\n    return this._cm.then(c => c.getExtData());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapDistrictSearchService.html":{"url":"injectables/AmapDistrictSearchService.html","title":"injectable - AmapDistrictSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapDistrictSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts\n        \n\n            \n                Description\n            \n            \n                行政区域搜索服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: DistrictSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                DistrictSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-district-search'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, DistrictSearch } from '../../types/class';\nimport { DistrictSearchOptions } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DistrictSearchResult } from '../../types/class/district-search/district-search-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 行政区域搜索服务\n */\n@Injectable()\nexport class AmapDistrictSearchService {\n  TAG = 'amap-district-search';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  of(opts?: DistrictSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.DistrictSearch');\n    }\n\n    return this._plugin.then(() => new AmapDistrictSearchWrapper(opts));\n  }\n}\n\n/**\n * AmapDistrictSearchWrapper对象将高德原生的DistrictSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDistrictSearchWrapper extends EventBinder {\n  private _districtSearch: DistrictSearch;\n\n  constructor(opts?: DistrictSearchOptions) {\n    super();\n    this._districtSearch = new AMap.DistrictSearch(opts);\n  }\n\n  get native(): DistrictSearch {\n    return this._districtSearch;\n  }\n\n  /**\n   * 用于侦听DistrictSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._districtSearch, event);\n  }\n\n  search(address: string, opts?: DistrictSearchOptions): Promise {\n    return new Promise(resolve => this._districtSearch.search(address, (status, result) => {\n      resolve({ status, result });\n    }, opts));\n  }\n\n  setLevel(level: string) {\n    this._districtSearch.setLevel(level);\n  }\n\n  setSubdistrict(district: number) {\n    this._districtSearch.setSubdistrict(district);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapDistrictSearchWrapper.html":{"url":"classes/AmapDistrictSearchWrapper.html","title":"class - AmapDistrictSearchWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapDistrictSearchWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapDistrictSearchWrapper对象将高德原生的DistrictSearch对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _districtSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                setLevel\n                            \n                            \n                                setSubdistrict\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: DistrictSearchOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        DistrictSearchOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _districtSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DistrictSearch\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:53\n                \n            \n\n\n            \n                \n                    用于侦听DistrictSearch事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(address: string, opts?: DistrictSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                DistrictSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLevel\n                        \n                        \n                    \n                \n            \n            \n                \nsetLevel(level: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubdistrict\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubdistrict(district: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    district\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, DistrictSearch } from '../../types/class';\nimport { DistrictSearchOptions } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DistrictSearchResult } from '../../types/class/district-search/district-search-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 行政区域搜索服务\n */\n@Injectable()\nexport class AmapDistrictSearchService {\n  TAG = 'amap-district-search';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  of(opts?: DistrictSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.DistrictSearch');\n    }\n\n    return this._plugin.then(() => new AmapDistrictSearchWrapper(opts));\n  }\n}\n\n/**\n * AmapDistrictSearchWrapper对象将高德原生的DistrictSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDistrictSearchWrapper extends EventBinder {\n  private _districtSearch: DistrictSearch;\n\n  constructor(opts?: DistrictSearchOptions) {\n    super();\n    this._districtSearch = new AMap.DistrictSearch(opts);\n  }\n\n  get native(): DistrictSearch {\n    return this._districtSearch;\n  }\n\n  /**\n   * 用于侦听DistrictSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._districtSearch, event);\n  }\n\n  search(address: string, opts?: DistrictSearchOptions): Promise {\n    return new Promise(resolve => this._districtSearch.search(address, (status, result) => {\n      resolve({ status, result });\n    }, opts));\n  }\n\n  setLevel(level: string) {\n    this._districtSearch.setLevel(level);\n  }\n\n  setSubdistrict(district: number) {\n    this._districtSearch.setSubdistrict(district);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapDrivingService.html":{"url":"injectables/AmapDrivingService.html","title":"injectable - AmapDrivingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapDrivingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                驾车路线规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: DrivingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                DrivingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-driving'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Driving, LngLat } from '../../types/class';\nimport { DrivingOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 驾车路线规划服务\n */\n@Injectable()\nexport class AmapDrivingService {\n  TAG = 'amap-driving';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Driving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: DrivingOptions): Promise {\n    return this.loaded.then(() => new AmapDrivingWrapper(opts));\n  }\n}\n\n/**\n * AmapDrivingWrapper对象将高德原生的Driving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDrivingWrapper extends EventBinder {\n  private _driving: Driving;\n\n  constructor(opts?: DrivingOptions) {\n    super();\n    this._driving = new AMap.Driving(opts);\n  }\n\n  get native(): Driving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听Driving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(origin: any[], destination?: ILngLat, opts?: any): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._driving.search(origin, destination, opts, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._driving.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._driving.setPolicy(policy);\n  }\n\n  setAvoidPolygons(path: ILngLat[]) {\n    this._driving.setAvoidPolygons(path);\n  }\n\n  setAvoidRoad(road: string) {\n    this._driving.setAvoidRoad(road);\n  }\n\n  clearAvoidRoad() {\n    this._driving.clearAvoidRoad();\n  }\n\n  clearAvoidPolygons() {\n    this._driving.clearAvoidPolygons();\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  getAvoidPolygons(): LngLat[] {\n    return this._driving.getAvoidPolygons();\n  }\n  getAvoidRoad(): string {\n    return this._driving.getAvoidRoad();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n\n  searchOnAMAP(obj: any) {\n    this._driving.searchOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapDrivingWrapper.html":{"url":"classes/AmapDrivingWrapper.html","title":"class - AmapDrivingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapDrivingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapDrivingWrapper对象将高德原生的Driving对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _driving\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                clearAvoidPolygons\n                            \n                            \n                                clearAvoidRoad\n                            \n                            \n                                getAvoidPolygons\n                            \n                            \n                                getAvoidRoad\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                searchOnAMAP\n                            \n                            \n                                setAvoidPolygons\n                            \n                            \n                                setAvoidRoad\n                            \n                            \n                                setPolicy\n                            \n                            \n                                setProvinceAndNumber\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: DrivingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        DrivingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _driving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Driving\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:57\n                \n            \n\n\n            \n                \n                    用于侦听Driving事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat, opts?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidPolygons(path: ILngLat[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidRoad(road: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    road\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Driving, LngLat } from '../../types/class';\nimport { DrivingOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 驾车路线规划服务\n */\n@Injectable()\nexport class AmapDrivingService {\n  TAG = 'amap-driving';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Driving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: DrivingOptions): Promise {\n    return this.loaded.then(() => new AmapDrivingWrapper(opts));\n  }\n}\n\n/**\n * AmapDrivingWrapper对象将高德原生的Driving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDrivingWrapper extends EventBinder {\n  private _driving: Driving;\n\n  constructor(opts?: DrivingOptions) {\n    super();\n    this._driving = new AMap.Driving(opts);\n  }\n\n  get native(): Driving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听Driving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(origin: any[], destination?: ILngLat, opts?: any): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._driving.search(origin, destination, opts, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._driving.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._driving.setPolicy(policy);\n  }\n\n  setAvoidPolygons(path: ILngLat[]) {\n    this._driving.setAvoidPolygons(path);\n  }\n\n  setAvoidRoad(road: string) {\n    this._driving.setAvoidRoad(road);\n  }\n\n  clearAvoidRoad() {\n    this._driving.clearAvoidRoad();\n  }\n\n  clearAvoidPolygons() {\n    this._driving.clearAvoidPolygons();\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  getAvoidPolygons(): LngLat[] {\n    return this._driving.getAvoidPolygons();\n  }\n  getAvoidRoad(): string {\n    return this._driving.getAvoidRoad();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n\n  searchOnAMAP(obj: any) {\n    this._driving.searchOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapGeocoderService.html":{"url":"injectables/AmapGeocoderService.html","title":"injectable - AmapGeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapGeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts\n        \n\n            \n                Description\n            \n            \n                地理编码与逆地理编码服务，用于地址描述与坐标之间的转换。\n使用'of()'方法可以得到Promise对象。\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            // 引入service和wrapper类型声明\nimport { AmapGeocoderService, AmapGeocoderWrapper } from 'ngx-amap';\n\n// 定义wrapper的缓存：\nprivate geoPromise: Promise;\n\n// 使用service构造wrapper对象\nconstructor(private AmapGeocoder: AmapGeocoderService) {\n// 使用 AmapGeocoderService 创建 promise wrapper\nthis.geoPromise = AmapGeocoder.of({\ncity: \"010\", //城市，默认：“全国”\nradius: 1000 //范围，默认：500\n});\n}\n\n// 使用AMap.Geocoder的wrapper对象\nthis.geoPromise.then(geocoder => geocoder.getLocation(this.address))\n.then(data => {\nconsole.log('get location of address:', this.address);\nconsole.log('status:', data.status);\nconsole.log('result:', data.result);\n\nif (data.status === 'complete' && data.result.info === 'OK') {\nconsole.log(data.result.geocodes[0].location);\nconsole.log(data.result.geocodes[0].formattedAddress);\n}\n});\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: GeocoderOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GeocoderOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-geocoder'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:87\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Geocoder } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { GeocoderOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapGeocoderWrapper对象将高德原生的Geocoder对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapGeocoderWrapper extends EventBinder {\n  private _geocoder: Geocoder;\n\n  constructor(opts?: GeocoderOptions) {\n    super();\n    this._geocoder = new AMap.Geocoder(opts);\n  }\n\n  get native(): Geocoder {\n    return this._geocoder;\n  }\n\n  /**\n   * 用于侦听Geocoder事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._geocoder, event);\n  }\n\n  getLocation(address: string): Promise {\n    return new Promise(resolve => this._geocoder.getLocation(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string): void {\n    this._geocoder.setCity(city);\n  }\n\n  getAddress(location: ILngLat|ILngLat[]): Promise {\n    return new Promise(resolve => this._geocoder.getAddress(location, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n}\n\n/**\n * 地理编码与逆地理编码服务，用于地址描述与坐标之间的转换。\n * 使用'of()'方法可以得到Promise对象。\n *\n * @example\n * // 引入service和wrapper类型声明\n * import { AmapGeocoderService, AmapGeocoderWrapper } from 'ngx-amap';\n *\n * // 定义wrapper的缓存：\n * private geoPromise: Promise;\n *\n * // 使用service构造wrapper对象\n * constructor(private AmapGeocoder: AmapGeocoderService) {\n *   // 使用 AmapGeocoderService 创建 promise wrapper\n *   this.geoPromise = AmapGeocoder.of({\n *     city: \"010\", //城市，默认：“全国”\n *     radius: 1000 //范围，默认：500\n *   });\n * }\n *\n * // 使用AMap.Geocoder的wrapper对象\n * this.geoPromise.then(geocoder => geocoder.getLocation(this.address))\n *   .then(data => {\n *     console.log('get location of address:', this.address);\n *     console.log('status:', data.status);\n *     console.log('result:', data.result);\n *\n *     if (data.status === 'complete' && data.result.info === 'OK') {\n *       console.log(data.result.geocodes[0].location);\n *       console.log(data.result.geocodes[0].formattedAddress);\n *     }\n *  });\n */\n@Injectable()\nexport class AmapGeocoderService {\n  TAG = 'amap-geocoder';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {}\n\n  of(opts?: GeocoderOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Geocoder');\n    }\n\n    return this._plugin.then(() => new AmapGeocoderWrapper(opts));\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapGeocoderWrapper.html":{"url":"classes/AmapGeocoderWrapper.html","title":"class - AmapGeocoderWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapGeocoderWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapGeocoderWrapper对象将高德原生的Geocoder对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAddress\n                            \n                            \n                                getLocation\n                            \n                            \n                                on\n                            \n                            \n                                setCity\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: GeocoderOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        GeocoderOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _geocoder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddress\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddress(location: ILngLat | ILngLat[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                ILngLat | ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:31\n                \n            \n\n\n            \n                \n                    用于侦听Geocoder事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Geocoder } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { GeocoderOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapGeocoderWrapper对象将高德原生的Geocoder对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapGeocoderWrapper extends EventBinder {\n  private _geocoder: Geocoder;\n\n  constructor(opts?: GeocoderOptions) {\n    super();\n    this._geocoder = new AMap.Geocoder(opts);\n  }\n\n  get native(): Geocoder {\n    return this._geocoder;\n  }\n\n  /**\n   * 用于侦听Geocoder事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._geocoder, event);\n  }\n\n  getLocation(address: string): Promise {\n    return new Promise(resolve => this._geocoder.getLocation(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string): void {\n    this._geocoder.setCity(city);\n  }\n\n  getAddress(location: ILngLat|ILngLat[]): Promise {\n    return new Promise(resolve => this._geocoder.getAddress(location, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n}\n\n/**\n * 地理编码与逆地理编码服务，用于地址描述与坐标之间的转换。\n * 使用'of()'方法可以得到Promise对象。\n *\n * @example\n * // 引入service和wrapper类型声明\n * import { AmapGeocoderService, AmapGeocoderWrapper } from 'ngx-amap';\n *\n * // 定义wrapper的缓存：\n * private geoPromise: Promise;\n *\n * // 使用service构造wrapper对象\n * constructor(private AmapGeocoder: AmapGeocoderService) {\n *   // 使用 AmapGeocoderService 创建 promise wrapper\n *   this.geoPromise = AmapGeocoder.of({\n *     city: \"010\", //城市，默认：“全国”\n *     radius: 1000 //范围，默认：500\n *   });\n * }\n *\n * // 使用AMap.Geocoder的wrapper对象\n * this.geoPromise.then(geocoder => geocoder.getLocation(this.address))\n *   .then(data => {\n *     console.log('get location of address:', this.address);\n *     console.log('status:', data.status);\n *     console.log('result:', data.result);\n *\n *     if (data.status === 'complete' && data.result.info === 'OK') {\n *       console.log(data.result.geocodes[0].location);\n *       console.log(data.result.geocodes[0].formattedAddress);\n *     }\n *  });\n */\n@Injectable()\nexport class AmapGeocoderService {\n  TAG = 'amap-geocoder';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {}\n\n  of(opts?: GeocoderOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Geocoder');\n    }\n\n    return this._plugin.then(() => new AmapGeocoderWrapper(opts));\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapHeatmapDirective.html":{"url":"directives/AmapHeatmapDirective.html","title":"directive - AmapHeatmapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapHeatmapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        amap-heatmap\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _heatmap\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                    Private\n                                bindHeatmapEvent\n                            \n                            \n                                getDataSet\n                            \n                            \n                                getMap\n                            \n                            \n                                hide\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDataSet\n                            \n                            \n                                setOptions\n                            \n                            \n                                show\n                            \n                            \n                                    Private\n                                unbindEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataset\n                            \n                            \n                                gradient\n                            \n                            \n                                hidden\n                            \n                            \n                                opacity\n                            \n                            \n                                options\n                            \n                            \n                                radius\n                            \n                            \n                                zooms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ready\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, hms: HeatmapService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hms\n                                                  \n                                                        \n                                                                        HeatmapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataset\n                    \n                \n                \n                    \n                        Type :         HeatmapData\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gradient\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         HeatmapOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zooms\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:29\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:39\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindHeatmapEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindHeatmapEvent(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataSet\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataSet()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDataSet\n                        \n                        \n                    \n                \n            \n            \n                \nsetDataSet(data: HeatmapData)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                HeatmapData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: HeatmapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                HeatmapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unbindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unbindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _heatmap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-heatmap'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, Output, OnDestroy, OnInit,\n  EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { Heatmap, Map, HeatmapData } from '../../types/class';\nimport { HeatmapOptions } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { HeatmapService } from '../../services/heatmap/heatmap.service';\n\nconst ALL_OPTIONS = [\n  'radius',\n  'gradient',\n  'opacity',\n  'zooms'\n];\n\n@Directive({\n  selector: 'amap-heatmap',\n  exportAs: 'heatmap'\n})\nexport class AmapHeatmapDirective implements OnChanges, OnInit, OnDestroy {\n  TAG = 'amap-heatmap';\n\n  // These properties are supported in HeatmapOptions:\n  @Input() radius: number;\n  @Input() gradient: any;\n  @Input() opacity: number[];\n  @Input() zooms: number[];\n\n  // This options property will override other property:\n  @Input() options: HeatmapOptions;\n  @Input() dataset: HeatmapData;\n\n  // Extra property:\n  @Input() hidden = false;\n\n  // amap-tool-bar events:\n  @Output() ready = new EventEmitter();\n\n  private _heatmap: Promise;\n  private _subscriptions: Subscription;\n\n  constructor(\n    private logger: LoggerService,\n    private hms: HeatmapService\n  ) {}\n\n  ngOnInit() { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n\n    if (!this._heatmap) {\n      const options = this.options || Utils.getOptionsFor(this, ALL_OPTIONS);\n      this._heatmap = this.hms.create(options);\n      this.bindEvents();\n      this._heatmap.then(t => this.ready.emit(t));\n      this.hidden ? this.hide() : this.show();\n    } else {\n      filter.has('options').subscribe(v => this.setOptions(v || {}));\n    }\n\n    filter.notEmpty('dataset').subscribe(v => this.setDataSet(v));\n    filter.has('hidden').subscribe(v => v ? this.hide() : this.show());\n  }\n\n  ngOnDestroy() {\n    this.unbindEvents();\n    this.hms.destroy(this._heatmap);\n  }\n\n  private bindEvents() {\n  }\n\n  private bindHeatmapEvent(event: string) {\n    return this.hms.bindEvent(this._heatmap, event);\n  }\n\n  private unbindEvents() {\n  }\n\n  // Public methods:\n  show(): Promise {\n    return this._heatmap.then(t => t.show());\n  }\n\n  hide(): Promise {\n    return this._heatmap.then(t => t.hide());\n  }\n\n  // Setters:\n  setOptions(opt: HeatmapOptions): Promise {\n    return this._heatmap.then(p => p.setOptions(opt));\n  }\n\n  setDataSet(data: HeatmapData): Promise {\n    return this._heatmap.then(p => p.setDataSet(data));\n  }\n\n  // Getters:\n  getDataSet(): Promise {\n    return this._heatmap.then(t => t.getDataSet());\n  }\n\n  getMap(): Promise {\n    return this._heatmap.then(t => t.getMap());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmapInfoWindowComponent.html":{"url":"components/AmapInfoWindowComponent.html","title":"component - AmapInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmapInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                info-window\n            \n\n\n\n\n\n\n\n            \n                selector\n                amap-info-window\n            \n\n            \n                styleUrls\n                amap-info-window.component.scss\n            \n\n\n\n            \n                templateUrl\n                amap-info-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _infoWindow\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                content\n                            \n                            \n                                hostMarker\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                close\n                            \n                            \n                                getContent\n                            \n                            \n                                getIsOpen\n                            \n                            \n                                getPosition\n                            \n                            \n                                getSize\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                setContent\n                            \n                            \n                                setPosition\n                            \n                            \n                                setSize\n                            \n                            \n                                toggleOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoMove\n                            \n                            \n                                closeWhenClickMap\n                            \n                            \n                                isCustom\n                            \n                            \n                                isOpen\n                            \n                            \n                                offset\n                            \n                            \n                                position\n                            \n                            \n                                showShadow\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpenChange\n                            \n                            \n                                windowChange\n                            \n                            \n                                windowClose\n                            \n                            \n                                windowOpen\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, logger: LoggerService, infoWindows: InfoWindowService, sizes: SizeService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        infoWindows\n                                                  \n                                                        \n                                                                        InfoWindowService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sizes\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoMove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeWhenClickMap\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCustom\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Type :         IPixel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         ILngLat\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         ISize\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isOpenChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        windowChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        windowClose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        windowOpen\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:46\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsOpen\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsOpen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(position?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContent\n                        \n                        \n                    \n                \n            \n            \n                \nsetContent(content: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(position: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetSize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOpen\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOpen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hostMarker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-info-window'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, Input,\n  OnDestroy, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { LngLat, InfoWindow, Marker, Size, Text } from '../../types/class';\nimport { ILngLat, ISize, IPixel, InfoWindowOptions } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { InfoWindowService } from '../../services/info-window/info-window.service';\nimport { SizeService } from '../../services/size/size.service';\n\nconst ALL_OPTIONS = [\n  'isCustom',\n  'autoMove',\n  'closeWhenClickMap',\n  'content',\n  'size',\n  'offset',\n  'position',\n  'showShadow'\n];\n\n@Component({\n  selector: 'amap-info-window',\n  templateUrl: 'amap-info-window.component.html',\n  styleUrls: ['amap-info-window.component.scss'],\n  exportAs: 'info-window'\n})\nexport class AmapInfoWindowComponent implements OnInit, OnDestroy, OnChanges {\n  TAG = 'amap-info-window';\n\n  // These properties are supported in InfoWindowOptions:\n  @Input() isCustom: boolean;\n  @Input() autoMove: boolean;\n  @Input() closeWhenClickMap: boolean;\n  @Input() size: ISize;\n  @Input() offset: IPixel;\n  @Input() position: ILngLat;\n  @Input() showShadow: boolean;\n\n  // Extra property:\n  @Input() isOpen = false;\n\n  // amap-info-window events:\n  @Output() isOpenChange = new EventEmitter();\n  @Output() windowOpen = new EventEmitter();\n  @Output() windowClose = new EventEmitter();\n  @Output() windowChange = new EventEmitter();\n\n  content: any;\n  hostMarker: Promise;\n  private _infoWindow: Promise;\n  private _subscriptions: Subscription;\n\n  constructor(\n    private el: ElementRef,\n    private logger: LoggerService,\n    private infoWindows: InfoWindowService,\n    private sizes: SizeService\n  ) {}\n\n  ngOnInit() {\n    this.content = this.el.nativeElement.querySelector('.amap-info-window-content');\n    const options = Utils.getOptionsFor(this, ALL_OPTIONS);\n    this.logger.d(this.TAG, 'info window options:', options);\n    this._infoWindow = this.infoWindows.create(options);\n    this.bindEvents();\n    this.toggleOpen();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindow) { return; }\n\n    const filter = ChangeFilter.of(changes);\n    filter.has('content').subscribe(v => this.setContent(v));\n    filter.has('isOpen').subscribe(v => this.toggleOpen());\n    filter.notEmpty('position').subscribe(v => this.setPosition(v));\n    filter.notEmpty('size').subscribe(v => this.setSize(v));\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this.infoWindows.destroy(this._infoWindow);\n  }\n\n  private bindEvents() {\n    this._subscriptions = this.infoWindows.bindEvent(this._infoWindow, 'change').subscribe(e => this.windowChange.emit(e));\n    this._subscriptions.add(this.infoWindows.bindEvent(this._infoWindow, 'open').subscribe(e => {\n      this.windowOpen.emit(e);\n      if (!this.isOpen) {\n        this.isOpenChange.emit(true);\n      }\n    }));\n    this._subscriptions.add(this.infoWindows.bindEvent(this._infoWindow, 'close').subscribe(e => {\n      this.windowClose.emit(e);\n      if (this.isOpen) {\n        this.isOpenChange.emit(false);\n      }\n    }));\n  }\n\n  // public methods:\n  toggleOpen() {\n    this.logger.d(this.TAG, 'toggle open');\n    this.isOpen ? this.open() : this.close();\n  }\n\n  open(position?: ILngLat): Promise {\n    return this._infoWindow.then(infoWindow => {\n      if (this.hostMarker) {\n        return this.hostMarker.then(marker => this.infoWindows.open(infoWindow, marker.getPosition()));\n      } else if (position) {\n        return this.infoWindows.open(infoWindow, position);\n      } else if (this.position) {\n        return this.infoWindows.open(infoWindow, this.position);\n      } else {\n        return this.infoWindows.open(infoWindow);\n      }\n    });\n  }\n\n  close(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.close());\n  }\n\n  // Setters:\n  setContent(content: any): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.setContent(content));\n  }\n\n  setPosition(position: ILngLat): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.setPosition(position));\n  }\n\n  setSize(size: ISize): Promise {\n    return this._infoWindow.then(infoWindow => {\n      const value = this.sizes.create(size, 'size');\n      infoWindow.setSize(value);\n    });\n  }\n\n  // Getters:\n  getIsOpen(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getIsOpen());\n  }\n\n  getContent(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getContent());\n  }\n\n  getPosition(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getPosition());\n  }\n\n  getSize(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getSize());\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n    \n                \n                    amap-info-window.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmapInfoWindowComponent', 'selector': 'amap-info-window'},{'name': 'NgxAmapComponent', 'selector': 'ngx-amap'}];\n    var DIRECTIVES = [{'name': 'AmapAutocompleteDirective', 'selector': 'input[amapAutocomplete]'},{'name': 'AmapBezierCurveDirective', 'selector': 'amap-bezier-curve'},{'name': 'AmapCircleDirective', 'selector': 'amap-circle'},{'name': 'AmapCircleMarkerDirective', 'selector': 'amap-circle-marker'},{'name': 'AmapEllipseDirective', 'selector': 'amap-ellipse'},{'name': 'AmapHeatmapDirective', 'selector': 'amap-heatmap'},{'name': 'AmapMarkerClustererDirective', 'selector': 'amap-marker-clusterer'},{'name': 'AmapMarkerDirective', 'selector': 'amap-marker'},{'name': 'AmapPolygonDirective', 'selector': 'amap-polygon'},{'name': 'AmapPolylineDirective', 'selector': 'amap-polyline'},{'name': 'AmapRectangleDirective', 'selector': 'amap-rectangle'},{'name': 'AmapTextDirective', 'selector': 'amap-text'},{'name': 'AmapToolBarDirective', 'selector': 'amap-tool-bar'}];\n    var ACTUAL_COMPONENT = {'name': 'AmapInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapMouseToolService.html":{"url":"injectables/AmapMouseToolService.html","title":"injectable - AmapMouseToolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapMouseToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-mouse-tool'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { LoggerService } from '../logger/logger.service';\nimport { AMapClass, Circle, Marker, MouseTool, Polyline, Polygon, Map } from '../../types/class';\nimport { Observable } from 'rxjs';\nimport { CircleOptions, MarkerOptions, PolygonOptions, PolylineOptions } from '../../types/interface';\nimport { Subscription } from 'rxjs';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class AmapMouseToolService {\n  TAG = 'amap-mouse-tool';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  of(map: Map) {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.MouseTool');\n    }\n    return this._plugin.then(() => new AmapMouseToolWrapper(map));\n  }\n}\n\nexport class AmapMouseToolWrapper extends EventBinder {\n  private _mouseTool: MouseTool;\n\n  private _subscription: Subscription;\n\n  // I'm not able to use declared type 'Map' here, rollup complains:\n  // 'Map' is not exported by lib/.ng_pkg_build/ngx-amap/ts/types/class/amap.map.js\n  // it may be related to this issue\n  // https://github.com/rollup/rollup/issues/1048\n  constructor(map: any) {\n    super();\n    this._mouseTool = new AMap.MouseTool(map);\n  }\n\n  on(event: string): Observable {\n    return this.bindEvent(this._mouseTool, event);\n  }\n\n  get native(): MouseTool {\n    return this._mouseTool;\n  }\n\n  marker(options?: MarkerOptions): Promise {\n    return this._exec('marker', options);\n  }\n\n  polyline(options?: PolylineOptions): Promise {\n    return this._exec('polyline', options);\n  }\n\n  polygon(options?: PolygonOptions): Promise {\n    return this._exec('polygon', options);\n  }\n\n  circle(options?: CircleOptions): Promise {\n    return this._exec('circle', options);\n  }\n\n  // todo add rectangle class\n  rectangle(options?: PolygonOptions): Promise {\n    return this._exec('rectangle', options);\n  }\n\n  rule(options?: PolylineOptions) {\n    return this._exec('rule', options);\n  }\n\n  measureArea(options?: PolygonOptions) {\n    return this._exec('measureArea', options);\n  }\n\n  rectZoomIn(options?: PolygonOptions) {\n    return this._exec('rectZoomIn', options);\n  }\n\n  rectZoomOut(options?: PolygonOptions) {\n    return this._exec('rectZoomOut', options);\n  }\n\n  close(clear: boolean = false) {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n      this._subscription = null;\n    }\n    return this._mouseTool.close(clear);\n  }\n\n  private _exec(method: string, opts: any): Promise {\n    this._mouseTool[method](opts);\n    return new Promise(resolve => {\n      this._subscription = this.on('draw')\n        .subscribe(({ obj }) => {\n          this.close();\n          resolve(obj);\n        });\n    });\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapMouseToolWrapper.html":{"url":"classes/AmapMouseToolWrapper.html","title":"class - AmapMouseToolWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapMouseToolWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mouseTool\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _exec\n                            \n                            \n                                circle\n                            \n                            \n                                close\n                            \n                            \n                                marker\n                            \n                            \n                                measureArea\n                            \n                            \n                                on\n                            \n                            \n                                polygon\n                            \n                            \n                                polyline\n                            \n                            \n                                rectangle\n                            \n                            \n                                rectZoomIn\n                            \n                            \n                                rectZoomOut\n                            \n                            \n                                rule\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mouseTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MouseTool\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _exec(method: string, opts: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:96\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            circle\n                        \n                        \n                    \n                \n            \n            \n                \ncircle(options?: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(clear: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    clear\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            marker\n                        \n                        \n                    \n                \n            \n            \n                \nmarker(options?: MarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            measureArea\n                        \n                        \n                    \n                \n            \n            \n                \nmeasureArea(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polygon\n                        \n                        \n                    \n                \n            \n            \n                \npolygon(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polyline\n                        \n                        \n                    \n                \n            \n            \n                \npolyline(options?: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectangle\n                        \n                        \n                    \n                \n            \n            \n                \nrectangle(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomIn\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomIn(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomOut\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomOut(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rule\n                        \n                        \n                    \n                \n            \n            \n                \nrule(options?: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:47\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { LoggerService } from '../logger/logger.service';\nimport { AMapClass, Circle, Marker, MouseTool, Polyline, Polygon, Map } from '../../types/class';\nimport { Observable } from 'rxjs';\nimport { CircleOptions, MarkerOptions, PolygonOptions, PolylineOptions } from '../../types/interface';\nimport { Subscription } from 'rxjs';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class AmapMouseToolService {\n  TAG = 'amap-mouse-tool';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  of(map: Map) {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.MouseTool');\n    }\n    return this._plugin.then(() => new AmapMouseToolWrapper(map));\n  }\n}\n\nexport class AmapMouseToolWrapper extends EventBinder {\n  private _mouseTool: MouseTool;\n\n  private _subscription: Subscription;\n\n  // I'm not able to use declared type 'Map' here, rollup complains:\n  // 'Map' is not exported by lib/.ng_pkg_build/ngx-amap/ts/types/class/amap.map.js\n  // it may be related to this issue\n  // https://github.com/rollup/rollup/issues/1048\n  constructor(map: any) {\n    super();\n    this._mouseTool = new AMap.MouseTool(map);\n  }\n\n  on(event: string): Observable {\n    return this.bindEvent(this._mouseTool, event);\n  }\n\n  get native(): MouseTool {\n    return this._mouseTool;\n  }\n\n  marker(options?: MarkerOptions): Promise {\n    return this._exec('marker', options);\n  }\n\n  polyline(options?: PolylineOptions): Promise {\n    return this._exec('polyline', options);\n  }\n\n  polygon(options?: PolygonOptions): Promise {\n    return this._exec('polygon', options);\n  }\n\n  circle(options?: CircleOptions): Promise {\n    return this._exec('circle', options);\n  }\n\n  // todo add rectangle class\n  rectangle(options?: PolygonOptions): Promise {\n    return this._exec('rectangle', options);\n  }\n\n  rule(options?: PolylineOptions) {\n    return this._exec('rule', options);\n  }\n\n  measureArea(options?: PolygonOptions) {\n    return this._exec('measureArea', options);\n  }\n\n  rectZoomIn(options?: PolygonOptions) {\n    return this._exec('rectZoomIn', options);\n  }\n\n  rectZoomOut(options?: PolygonOptions) {\n    return this._exec('rectZoomOut', options);\n  }\n\n  close(clear: boolean = false) {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n      this._subscription = null;\n    }\n    return this._mouseTool.close(clear);\n  }\n\n  private _exec(method: string, opts: any): Promise {\n    this._mouseTool[method](opts);\n    return new Promise(resolve => {\n      this._subscription = this.on('draw')\n        .subscribe(({ obj }) => {\n          this.close();\n          resolve(obj);\n        });\n    });\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapPlaceSearchService.html":{"url":"injectables/AmapPlaceSearchService.html","title":"injectable - AmapPlaceSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapPlaceSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts\n        \n\n            \n                Description\n            \n            \n                地点搜索服务，提供某一特定地区的位置查询服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: PlaceSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                PlaceSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-place-search'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, PlaceSearch, Bounds, Polygon } from '../../types/class';\nimport { PlaceSearchOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 地点搜索服务，提供某一特定地区的位置查询服务\n */\n@Injectable()\nexport class AmapPlaceSearchService {\n  TAG = 'amap-place-search';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {}\n\n  of(opts?: PlaceSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.PlaceSearch');\n    }\n\n    return this._plugin.then(() => new AmapPlaceSearchWrapper(opts));\n  }\n}\n\n/**\n * AmapPlaceSearchWrapper对象将高德原生的PlaceSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapPlaceSearchWrapper extends EventBinder {\n  private _placeSearch: PlaceSearch;\n\n  constructor(opts?: PlaceSearchOptions) {\n    super();\n    this._placeSearch = new AMap.PlaceSearch(opts);\n  }\n\n  get native(): PlaceSearch {\n    return this._placeSearch;\n  }\n\n  /**\n   * 用于侦听PlaceSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._placeSearch, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._placeSearch.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchNearBy(keyword: string, center: ILngLat, radius: number): Promise {\n    return new Promise(resolve => this._placeSearch.searchNearBy(keyword, center, radius, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchInBounds(keyword: string, bounds: Bounds|Polygon): Promise {\n    return new Promise(resolve => this._placeSearch.searchInBounds(keyword, bounds, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  getDetails(POIID: string): Promise {\n    return new Promise(resolve => this._placeSearch.getDetails(POIID, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setPageIndex(pageIndex: number) {\n    this._placeSearch.setPageIndex(pageIndex);\n  }\n\n  setPageSize(pageSize: number) {\n    this._placeSearch.setPageSize(pageSize);\n  }\n\n  setLang(lang: string) {\n    this._placeSearch.setLang(lang);\n  }\n\n  getLang() {\n    return this._placeSearch.getLang();\n  }\n\n  clear() {\n    this._placeSearch.clear();\n  }\n\n  poiOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n\n  setCity(city: string) {\n    this._placeSearch.setCity(city);\n  }\n\n  setType(type: string) {\n    this._placeSearch.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._placeSearch.setCityLimit(limit);\n  }\n\n  detailOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapPlaceSearchWrapper.html":{"url":"classes/AmapPlaceSearchWrapper.html","title":"class - AmapPlaceSearchWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapPlaceSearchWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapPlaceSearchWrapper对象将高德原生的PlaceSearch对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _placeSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                detailOnAMAP\n                            \n                            \n                                getDetails\n                            \n                            \n                                getLang\n                            \n                            \n                                on\n                            \n                            \n                                poiOnAMAP\n                            \n                            \n                                search\n                            \n                            \n                                searchInBounds\n                            \n                            \n                                searchNearBy\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityLimit\n                            \n                            \n                                setLang\n                            \n                            \n                                setPageIndex\n                            \n                            \n                                setPageSize\n                            \n                            \n                                setType\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: PlaceSearchOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        PlaceSearchOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _placeSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlaceSearch\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detailOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \ndetailOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetDetails(POIID: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    POIID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLang\n                        \n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:51\n                \n            \n\n\n            \n                \n                    用于侦听PlaceSearch事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            poiOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \npoiOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchInBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsearchInBounds(keyword: string, bounds: Bounds | Polygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bounds\n                                    \n                                            Bounds | Polygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchNearBy\n                        \n                        \n                    \n                \n            \n            \n                \nsearchNearBy(keyword: string, center: ILngLat, radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    center\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLang\n                        \n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageIndex(pageIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageSize(pageSize: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, PlaceSearch, Bounds, Polygon } from '../../types/class';\nimport { PlaceSearchOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 地点搜索服务，提供某一特定地区的位置查询服务\n */\n@Injectable()\nexport class AmapPlaceSearchService {\n  TAG = 'amap-place-search';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {}\n\n  of(opts?: PlaceSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.PlaceSearch');\n    }\n\n    return this._plugin.then(() => new AmapPlaceSearchWrapper(opts));\n  }\n}\n\n/**\n * AmapPlaceSearchWrapper对象将高德原生的PlaceSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapPlaceSearchWrapper extends EventBinder {\n  private _placeSearch: PlaceSearch;\n\n  constructor(opts?: PlaceSearchOptions) {\n    super();\n    this._placeSearch = new AMap.PlaceSearch(opts);\n  }\n\n  get native(): PlaceSearch {\n    return this._placeSearch;\n  }\n\n  /**\n   * 用于侦听PlaceSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._placeSearch, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._placeSearch.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchNearBy(keyword: string, center: ILngLat, radius: number): Promise {\n    return new Promise(resolve => this._placeSearch.searchNearBy(keyword, center, radius, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchInBounds(keyword: string, bounds: Bounds|Polygon): Promise {\n    return new Promise(resolve => this._placeSearch.searchInBounds(keyword, bounds, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  getDetails(POIID: string): Promise {\n    return new Promise(resolve => this._placeSearch.getDetails(POIID, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setPageIndex(pageIndex: number) {\n    this._placeSearch.setPageIndex(pageIndex);\n  }\n\n  setPageSize(pageSize: number) {\n    this._placeSearch.setPageSize(pageSize);\n  }\n\n  setLang(lang: string) {\n    this._placeSearch.setLang(lang);\n  }\n\n  getLang() {\n    return this._placeSearch.getLang();\n  }\n\n  clear() {\n    this._placeSearch.clear();\n  }\n\n  poiOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n\n  setCity(city: string) {\n    this._placeSearch.setCity(city);\n  }\n\n  setType(type: string) {\n    this._placeSearch.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._placeSearch.setCityLimit(limit);\n  }\n\n  detailOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapRidingService.html":{"url":"injectables/AmapRidingService.html","title":"injectable - AmapRidingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapRidingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts\n        \n\n            \n                Description\n            \n            \n                骑行路径规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: RidingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                RidingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-riding'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Riding } from '../../types/class';\nimport { RidingOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { RidingResult } from '../../types/class/riding/riding-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 骑行路径规划服务\n */\n@Injectable()\nexport class AmapRidingService {\n  TAG = 'amap-riding';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Riding');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: RidingOptions): Promise {\n    return this.loaded.then(() => new AmapRidingWrapper(opts));\n  }\n}\n\n/**\n * AmapRidingWrapper对象将高德原生的Riding对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapRidingWrapper extends EventBinder {\n  private _riding: Riding;\n\n  constructor(opts?: RidingOptions) {\n    super();\n    this._riding = new AMap.Riding(opts);\n  }\n\n  get native(): Riding {\n    return this._riding;\n  }\n\n  /**\n   * 用于侦听Riding事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._riding, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._riding.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._riding.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._riding.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapRidingWrapper.html":{"url":"classes/AmapRidingWrapper.html","title":"class - AmapRidingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapRidingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapRidingWrapper对象将高德原生的Riding对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _riding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: RidingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        RidingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _riding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Riding\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:57\n                \n            \n\n\n            \n                \n                    用于侦听Riding事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Riding } from '../../types/class';\nimport { RidingOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { RidingResult } from '../../types/class/riding/riding-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 骑行路径规划服务\n */\n@Injectable()\nexport class AmapRidingService {\n  TAG = 'amap-riding';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Riding');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: RidingOptions): Promise {\n    return this.loaded.then(() => new AmapRidingWrapper(opts));\n  }\n}\n\n/**\n * AmapRidingWrapper对象将高德原生的Riding对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapRidingWrapper extends EventBinder {\n  private _riding: Riding;\n\n  constructor(opts?: RidingOptions) {\n    super();\n    this._riding = new AMap.Riding(opts);\n  }\n\n  get native(): Riding {\n    return this._riding;\n  }\n\n  /**\n   * 用于侦听Riding事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._riding, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._riding.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._riding.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._riding.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapToolBarDirective.html":{"url":"directives/AmapToolBarDirective.html","title":"directive - AmapToolBarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapToolBarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        amap-tool-bar\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                    Private\n                                _toolbar\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                    Private\n                                bindToolBarEvent\n                            \n                            \n                                doLocation\n                            \n                            \n                                getLocation\n                            \n                            \n                                getOffset\n                            \n                            \n                                hide\n                            \n                            \n                                hideDirection\n                            \n                            \n                                hideLocation\n                            \n                            \n                                hideRuler\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setOffset\n                            \n                            \n                                show\n                            \n                            \n                                showDirection\n                            \n                            \n                                showLocation\n                            \n                            \n                                showRuler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoPosition\n                            \n                            \n                                direction\n                            \n                            \n                                hidden\n                            \n                            \n                                liteStyle\n                            \n                            \n                                locate\n                            \n                            \n                                locationMarker\n                            \n                            \n                                noIpLocate\n                            \n                            \n                                offset\n                            \n                            \n                                position\n                            \n                            \n                                ruler\n                            \n                            \n                                useNative\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                ready\n                            \n                            \n                                toolbarHide\n                            \n                            \n                                toolbarShow\n                            \n                            \n                                zoomchanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, toolbars: ToolBarService, pixel: PixelService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbars\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoPosition\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        liteStyle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        locate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        locationMarker\n                    \n                \n                \n                    \n                        Type :         Marker\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noIpLocate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Type :         IPixel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ruler\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useNative\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:42\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toolbarHide\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toolbarShow\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomchanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:48\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindToolBarEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindToolBarEvent(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLocation\n                        \n                        \n                    \n                \n            \n            \n                \ndoLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDirection\n                        \n                        \n                    \n                \n            \n            \n                \nhideDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideLocation\n                        \n                        \n                    \n                \n            \n            \n                \nhideLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideRuler\n                        \n                        \n                    \n                \n            \n            \n                \nhideRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOffset\n                        \n                        \n                    \n                \n            \n            \n                \nsetOffset(offset: IPixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                IPixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDirection\n                        \n                        \n                    \n                \n            \n            \n                \nshowDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocation\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRuler\n                        \n                        \n                    \n                \n            \n            \n                \nshowRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _toolbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-tool-bar'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, Output, OnDestroy, OnInit,\n  EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { ToolBar, Marker, Pixel, LngLat } from '../../types/class';\nimport { ToolbarOptions, IPixel } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { ToolBarService } from '../../services/toolbar/toolbar.service';\nimport { PixelService } from '../../services/pixel/pixel.service';\n\nconst ALL_OPTIONS = [\n  'offset',\n  'position',\n  'ruler',\n  'noIpLocate',\n  'locate',\n  'liteStyle',\n  'direction',\n  'autoPosition',\n  'locationMarker',\n  'useNative'\n];\n\n@Directive({\n  selector: 'amap-tool-bar',\n  exportAs: 'toolbar'\n})\nexport class AmapToolBarDirective implements OnChanges, OnInit, OnDestroy {\n  TAG = 'amap-tool-bar';\n\n  // These properties are supported in ToolbarOptions:\n  @Input() offset: IPixel;\n  @Input() position: string;\n  @Input() ruler: boolean;\n  @Input() noIpLocate: boolean;\n  @Input() locate: boolean;\n  @Input() liteStyle: boolean;\n  @Input() direction: boolean;\n  @Input() autoPosition: boolean;\n  @Input() locationMarker: Marker;\n  @Input() useNative: boolean;\n\n  // Extra property:\n  @Input() hidden = false;\n\n  // amap-tool-bar events:\n  @Output() zoomchanged = new EventEmitter();\n  @Output() location = new EventEmitter();\n  @Output() ready = new EventEmitter();\n  @Output() toolbarHide = new EventEmitter();\n  @Output() toolbarShow = new EventEmitter();\n\n  private _toolbar: Promise;\n  private _subscriptions: Subscription;\n\n  constructor(\n    private logger: LoggerService,\n    private toolbars: ToolBarService,\n    private pixel: PixelService\n  ) {}\n\n  ngOnInit() {\n    const options = Utils.getOptionsFor(this, ALL_OPTIONS);\n    this._toolbar = this.toolbars.create(options);\n    this.bindEvents();\n    this._toolbar.then(t => this.ready.emit(t));\n    this.hidden ? this.hide() : this.show();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._toolbar) { return; }\n\n    const filter = ChangeFilter.of(changes);\n    filter.has('ruler').subscribe(v => v ? this.showRuler() : this.hideRuler());\n    filter.has('direction').subscribe(v => v ? this.showDirection() : this.hideDirection());\n    filter.has('locate').subscribe(v => v ? this.showLocation() : this.hideLocation());\n    filter.notEmpty('offset').subscribe(v => this.setOffset(v));\n    filter.has('hidden').subscribe(v => v ? this.hide() : this.show());\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this.toolbars.destroy(this._toolbar);\n  }\n\n  private bindEvents() {\n    this._subscriptions = this.bindToolBarEvent('zoomchanged').subscribe(e => this.zoomchanged.emit(e));\n    this._subscriptions.add(this.bindToolBarEvent('location').subscribe(e => this.location.emit(e)));\n    this._subscriptions.add(this.bindToolBarEvent('show').subscribe(e => this.toolbarShow.emit(e)));\n    this._subscriptions.add(this.bindToolBarEvent('hide').subscribe(e => this.toolbarHide.emit(e)));\n  }\n\n  private bindToolBarEvent(event: string) {\n    return this.toolbars.bindEvent(this._toolbar, event);\n  }\n\n  // Public methods:\n  show(): Promise {\n    return this._toolbar.then(t => t.show());\n  }\n\n  hide(): Promise {\n    return this._toolbar.then(t => t.hide());\n  }\n\n  showRuler(): Promise {\n    return this._toolbar.then(t => t.showRuler());\n  }\n\n  hideRuler(): Promise {\n    return this._toolbar.then(t => t.hideRuler());\n  }\n\n  showDirection(): Promise {\n    return this._toolbar.then(t => t.showDirection());\n  }\n\n  hideDirection(): Promise {\n    return this._toolbar.then(t => t.hideDirection());\n  }\n\n  showLocation(): Promise {\n    return this._toolbar.then(t => t.showLocation());\n  }\n\n  hideLocation(): Promise {\n    return this._toolbar.then(t => t.hideLocation());\n  }\n\n  doLocation(): Promise {\n    return this._toolbar.then(t => t.doLocation());\n  }\n\n  // Setters:\n  setOffset(offset: IPixel): Promise {\n    return this._toolbar.then(t => {\n      const value = this.pixel.create(offset, 'offset');\n      if (value) {\n        t.setOffset(value);\n      }\n    });\n  }\n\n  // Getters:\n  getOffset(): Promise {\n    return this._toolbar.then(t => t.getOffset());\n  }\n\n  getLocation(): Promise {\n    return this._toolbar.then(t => t.getLocation());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapTransferService.html":{"url":"injectables/AmapTransferService.html","title":"injectable - AmapTransferService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapTransferService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts\n        \n\n            \n                Description\n            \n            \n                公交换乘路径规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: TransferOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                TransferOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-transfer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Transfer } from '../../types/class';\nimport { TransferOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { TransferResult } from '../../types/class/transfer/transfer-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 公交换乘路径规划服务\n */\n@Injectable()\nexport class AmapTransferService {\n  TAG = 'amap-transfer';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Transfer');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TransferOptions): Promise {\n    return this.loaded.then(() => new AmapTransferWrapper(opts));\n  }\n}\n\n/**\n * AmapTransferWrapper对象将高德原生的Transfer对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTransferWrapper extends EventBinder {\n  private _transfer: Transfer;\n\n  constructor(opts?: TransferOptions) {\n    super();\n    this._transfer = new AMap.Transfer(opts);\n  }\n\n  get native(): Transfer {\n    return this._transfer;\n  }\n\n  /**\n   * 用于侦听Transfer事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._transfer, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._transfer.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._transfer.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._transfer.setPolicy(policy);\n  }\n\n  setCity(city: string) {\n    this._transfer.setCity(city);\n  }\n\n  setCityd(city: string) {\n    this._transfer.setCityd(city);\n  }\n\n  leaveAt(time: string, data: string) {\n    this._transfer.leaveAt(time, data);\n  }\n\n  clear() {\n    this._transfer.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._transfer.searchOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapTransferWrapper.html":{"url":"classes/AmapTransferWrapper.html","title":"class - AmapTransferWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapTransferWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapTransferWrapper对象将高德原生的Transfer对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _transfer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                leaveAt\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                searchOnAMAP\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityd\n                            \n                            \n                                setPolicy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: TransferOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        TransferOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _transfer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transfer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            leaveAt\n                        \n                        \n                    \n                \n            \n            \n                \nleaveAt(time: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:57\n                \n            \n\n\n            \n                \n                    用于侦听Transfer事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityd\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityd(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Transfer } from '../../types/class';\nimport { TransferOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { TransferResult } from '../../types/class/transfer/transfer-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 公交换乘路径规划服务\n */\n@Injectable()\nexport class AmapTransferService {\n  TAG = 'amap-transfer';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Transfer');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TransferOptions): Promise {\n    return this.loaded.then(() => new AmapTransferWrapper(opts));\n  }\n}\n\n/**\n * AmapTransferWrapper对象将高德原生的Transfer对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTransferWrapper extends EventBinder {\n  private _transfer: Transfer;\n\n  constructor(opts?: TransferOptions) {\n    super();\n    this._transfer = new AMap.Transfer(opts);\n  }\n\n  get native(): Transfer {\n    return this._transfer;\n  }\n\n  /**\n   * 用于侦听Transfer事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._transfer, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._transfer.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._transfer.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._transfer.setPolicy(policy);\n  }\n\n  setCity(city: string) {\n    this._transfer.setCity(city);\n  }\n\n  setCityd(city: string) {\n    this._transfer.setCityd(city);\n  }\n\n  leaveAt(time: string, data: string) {\n    this._transfer.leaveAt(time, data);\n  }\n\n  clear() {\n    this._transfer.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._transfer.searchOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapTruckDrivingService.html":{"url":"injectables/AmapTruckDrivingService.html","title":"injectable - AmapTruckDrivingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapTruckDrivingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                货车路线规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: TruckDrivingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                TruckDrivingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-truck-driving'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, TruckDriving } from '../../types/class';\nimport { TruckDrivingOptions } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 货车路线规划服务\n */\n@Injectable()\nexport class AmapTruckDrivingService {\n  TAG = 'amap-truck-driving';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.TruckDriving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TruckDrivingOptions): Promise {\n    return this.loaded.then(() => new AmapTruckDrivingWrapper(opts));\n  }\n}\n\n/**\n * AmapTruckDrivingWrapper对象将高德原生的TruckDriving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTruckDrivingWrapper extends EventBinder {\n  private _driving: TruckDriving;\n\n  constructor(opts?: TruckDrivingOptions) {\n    super();\n    this._driving = new AMap.TruckDriving(opts);\n  }\n\n  get native(): TruckDriving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听TruckDriving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(path: any[]): Promise {\n    return new Promise(resolve => this._driving.search(path, (status, result) => {\n      resolve({ status, result });\n    }));\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapTruckDrivingWrapper.html":{"url":"classes/AmapTruckDrivingWrapper.html","title":"class - AmapTruckDrivingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapTruckDrivingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapTruckDrivingWrapper对象将高德原生的TruckDriving对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _driving\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                setProvinceAndNumber\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: TruckDrivingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        TruckDrivingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _driving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TruckDriving\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:57\n                \n            \n\n\n            \n                \n                    用于侦听TruckDriving事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(path: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, TruckDriving } from '../../types/class';\nimport { TruckDrivingOptions } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 货车路线规划服务\n */\n@Injectable()\nexport class AmapTruckDrivingService {\n  TAG = 'amap-truck-driving';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.TruckDriving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TruckDrivingOptions): Promise {\n    return this.loaded.then(() => new AmapTruckDrivingWrapper(opts));\n  }\n}\n\n/**\n * AmapTruckDrivingWrapper对象将高德原生的TruckDriving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTruckDrivingWrapper extends EventBinder {\n  private _driving: TruckDriving;\n\n  constructor(opts?: TruckDrivingOptions) {\n    super();\n    this._driving = new AMap.TruckDriving(opts);\n  }\n\n  get native(): TruckDriving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听TruckDriving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(path: any[]): Promise {\n    return new Promise(resolve => this._driving.search(path, (status, result) => {\n      resolve({ status, result });\n    }));\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapWalkingService.html":{"url":"injectables/AmapWalkingService.html","title":"injectable - AmapWalkingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapWalkingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts\n        \n\n            \n                Description\n            \n            \n                步行路径规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: WalkingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                WalkingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-walking'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Walking } from '../../types/class';\nimport { WalkingOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { WalkingResult } from '../../types/class/walking/walking-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 步行路径规划服务\n */\n@Injectable()\nexport class AmapWalkingService {\n  TAG = 'amap-walking';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Walking');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: WalkingOptions): Promise {\n    return this.loaded.then(() => new AmapWalkingWrapper(opts));\n  }\n}\n\n/**\n * AmapWalkingWrapper对象将高德原生的Walking对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapWalkingWrapper extends EventBinder {\n  private _walking: Walking;\n\n  constructor(opts?: WalkingOptions) {\n    super();\n    this._walking = new AMap.Walking(opts);\n  }\n\n  get native(): Walking {\n    return this._walking;\n  }\n\n  /**\n   * 用于侦听Walking事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._walking, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._walking.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._walking.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._walking.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._walking.searchOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapWalkingWrapper.html":{"url":"classes/AmapWalkingWrapper.html","title":"class - AmapWalkingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapWalkingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapWalkingWrapper对象将高德原生的Walking对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _walking\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                searchOnAMAP\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: WalkingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        WalkingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _walking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Walking\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:57\n                \n            \n\n\n            \n                \n                    用于侦听Walking事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Walking } from '../../types/class';\nimport { WalkingOptions, ILngLat } from '../../types/interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { WalkingResult } from '../../types/class/walking/walking-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * 步行路径规划服务\n */\n@Injectable()\nexport class AmapWalkingService {\n  TAG = 'amap-walking';\n\n  private _plugin: Promise;\n\n  constructor(private logger: LoggerService, private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Walking');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: WalkingOptions): Promise {\n    return this.loaded.then(() => new AmapWalkingWrapper(opts));\n  }\n}\n\n/**\n * AmapWalkingWrapper对象将高德原生的Walking对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapWalkingWrapper extends EventBinder {\n  private _walking: Walking;\n\n  constructor(opts?: WalkingOptions) {\n    super();\n    this._walking = new AMap.Walking(opts);\n  }\n\n  get native(): Walking {\n    return this._walking;\n  }\n\n  /**\n   * 用于侦听Walking事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._walking, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._walking.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._walking.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._walking.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._walking.searchOnAMAP(obj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Autocomplete.html":{"url":"interfaces/Autocomplete.html","title":"interface - Autocomplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Autocomplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search\n                                \n                                \n                                    setCity\n                                \n                                \n                                    setCityLimit\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AutocompleteOptions } from '../../interface/autocomplete-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { AutocompleteResult } from './autocomplete-result';\n\nexport interface CAutocomplete {\n  new (opts?: AutocompleteOptions): Autocomplete;\n}\n\nexport interface Autocomplete {\n  search(keyword: string, callback: callbackFn);\n  setType(type: string);\n  setCity(city: string);\n  setCityLimit(limit: boolean);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutocompleteOptions.html":{"url":"interfaces/AutocompleteOptions.html","title":"interface - AutocompleteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AutocompleteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/autocomplete-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        citylimit\n                                \n                                \n                                            Optional\n                                        datatype\n                                \n                                \n                                            Optional\n                                        input\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citylimit\n                                    \n                                \n                                \n                                    \n                                        citylimit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datatype\n                                    \n                                \n                                \n                                    \n                                        datatype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutocompleteOptions {\n  type?: string;\n  city?: string;\n  datatype?: string;\n  citylimit?: boolean;\n  input?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutocompleteResult.html":{"url":"interfaces/AutocompleteResult.html","title":"interface - AutocompleteResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AutocompleteResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/autocomplete-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        info\n                                \n                                \n                                        tips\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tips\n                                    \n                                \n                                \n                                    \n                                        tips:         Tip[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tip[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Tip } from './tip';\n\nexport interface AutocompleteResult {\n  info: string;\n  count: number;\n  tips: Tip[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurve.html":{"url":"interfaces/BezierCurve.html","title":"interface - BezierCurve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getLength\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getPath\n                                \n                                \n                                    hide\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setPath\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetLength()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BezierCurveOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetPath()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: BezierCurveOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                BezierCurveOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(path: CurvePath)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                CurvePath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { BezierCurveOptions, CurvePath } from '../../interface/overlays/bezier-curve-options.interface';\n\nexport interface CBezierCurve {\n  new (opts: BezierCurveOptions): BezierCurve;\n}\n\nexport interface BezierCurve {\n  setPath(path: CurvePath);\n  getPath();\n  setOptions(opt: BezierCurveOptions);\n  getOptions(): BezierCurveOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurveEditor.html":{"url":"interfaces/BezierCurveEditor.html","title":"interface - BezierCurveEditor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurveEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    off\n                                \n                                \n                                    on\n                                \n                                \n                                    open\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            off\n                        \n                        \n                    \n                \n            \n            \n                \noff(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurveEditorOptions.html":{"url":"interfaces/BezierCurveEditorOptions.html","title":"interface - BezierCurveEditorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurveEditorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        getCtrlLineOptions\n                                \n                                \n                                            Optional\n                                        getMarkerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getCtrlLineOptions\n                                    \n                                \n                                \n                                    \n                                        getCtrlLineOptions:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getMarkerOptions\n                                    \n                                \n                                \n                                    \n                                        getMarkerOptions:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurveOptions.html":{"url":"interfaces/BezierCurveOptions.html","title":"interface - BezierCurveOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurveOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/bezier-curve-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        borderWeight\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        showDir\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        borderWeight\n                                    \n                                \n                                \n                                    \n                                        borderWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         CurvePath\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurvePath\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDir\n                                    \n                                \n                                \n                                    \n                                        showDir:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport type CurvePath = Array>|Array>>;\n\nexport interface BezierCurveOptions {\n  path?: CurvePath;\n  map?: Map;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  zIndex?: number;\n  showDir?: boolean;\n  bubble?: boolean;\n  cursor?: string;\n  isOutline?: boolean;\n  outlineColor?: string;\n  borderWeight?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BezierCurveService.html":{"url":"injectables/BezierCurveService.html","title":"injectable - BezierCurveService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BezierCurveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: BezierCurveOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                BezierCurveOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(c: BezierCurve, opts: BezierCurveEditorOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                BezierCurve\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                BezierCurveEditorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(bezierCurve: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bezierCurve\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'bezier-curve-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, BezierCurve, Map } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { BezierCurveOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { BezierCurveEditor, BezierCurveEditorOptions } from '../../types/class/amap.editor';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class BezierCurveService extends EventBinder {\n  TAG = 'bezier-curve-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n    private logger: LoggerService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: BezierCurveOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.BezierCurve(options);\n    });\n  }\n\n  destroy(bezierCurve: Promise): Promise {\n    return bezierCurve.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.BezierCurveEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(c: BezierCurve, opts: BezierCurveEditorOptions): Promise {\n    return this._map.then(map => new AMap.BezierCurveEditor(map, c, opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bounds.html":{"url":"interfaces/Bounds.html","title":"interface - Bounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Bounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.bounds.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        northEast\n                                \n                                \n                                        southWest\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getCenter\n                                \n                                \n                                    getNorthEast\n                                \n                                \n                                    getSouthWest\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNorthEast\n                        \n                        \n                    \n                \n            \n            \n                \ngetNorthEast()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSouthWest\n                        \n                        \n                    \n                \n            \n            \n                \ngetSouthWest()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        northEast\n                                    \n                                \n                                \n                                    \n                                        northEast:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        southWest\n                                    \n                                \n                                \n                                    \n                                        southWest:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\n\n// AMap.Bounds\nexport interface Bounds {\n  southWest: LngLat;\n  northEast: LngLat;\n\n  contains(point: LngLat): boolean;\n  getCenter(): LngLat;\n  getSouthWest(): LngLat;\n  getNorthEast(): LngLat;\n  toString(): string;\n}\n\nexport interface CBounds {\n  new (southWest: LngLat, northEast: LngLat): Bounds;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BusinessArea.html":{"url":"interfaces/BusinessArea.html","title":"interface - BusinessArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BusinessArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/business-area.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BusinessArea {\n  id: string;\n  name: string;\n  location: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CAutocomplete.html":{"url":"interfaces/CAutocomplete.html","title":"interface - CAutocomplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CAutocomplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { AutocompleteOptions } from '../../interface/autocomplete-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { AutocompleteResult } from './autocomplete-result';\n\nexport interface CAutocomplete {\n  new (opts?: AutocompleteOptions): Autocomplete;\n}\n\nexport interface Autocomplete {\n  search(keyword: string, callback: callbackFn);\n  setType(type: string);\n  setCity(city: string);\n  setCityLimit(limit: boolean);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CBezierCurve.html":{"url":"interfaces/CBezierCurve.html","title":"interface - CBezierCurve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CBezierCurve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { BezierCurveOptions, CurvePath } from '../../interface/overlays/bezier-curve-options.interface';\n\nexport interface CBezierCurve {\n  new (opts: BezierCurveOptions): BezierCurve;\n}\n\nexport interface BezierCurve {\n  setPath(path: CurvePath);\n  getPath();\n  setOptions(opt: BezierCurveOptions);\n  getOptions(): BezierCurveOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CBezierCurveEditor.html":{"url":"interfaces/CBezierCurveEditor.html","title":"interface - CBezierCurveEditor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CBezierCurveEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CBounds.html":{"url":"interfaces/CBounds.html","title":"interface - CBounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.bounds.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\n\n// AMap.Bounds\nexport interface Bounds {\n  southWest: LngLat;\n  northEast: LngLat;\n\n  contains(point: LngLat): boolean;\n  getCenter(): LngLat;\n  getSouthWest(): LngLat;\n  getNorthEast(): LngLat;\n  toString(): string;\n}\n\nexport interface CBounds {\n  new (southWest: LngLat, northEast: LngLat): Bounds;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCircle.html":{"url":"interfaces/CCircle.html","title":"interface - CCircle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCircle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { CircleOptions } from '../../interface/overlays/circle-options.interface';\n\nexport interface CCircle {\n  new (opts: CircleOptions): Circle;\n}\n\nexport interface Circle {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  getBounds(): Bounds;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleOptions): void;\n  getOptions(): CircleOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|number[]): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCircleMarker.html":{"url":"interfaces/CCircleMarker.html","title":"interface - CCircleMarker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCircleMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { CircleMarkerOptions } from '../../interface/overlays/circle-marker-options.interface';\n\nexport interface CCircleMarker {\n  new (opts: CircleMarkerOptions): CircleMarker;\n}\n\nexport interface CircleMarker {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleMarkerOptions): void;\n  getOptions(): CircleMarkerOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CDistrictSearch.html":{"url":"interfaces/CDistrictSearch.html","title":"interface - CDistrictSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CDistrictSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/amap.district-search.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { DistrictSearchOptions } from '../../interface/district-search-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { DistrictSearchResult } from './district-search-result';\n\nexport interface CDistrictSearch {\n  new (opts?: DistrictSearchOptions): DistrictSearch;\n}\n\nexport interface DistrictSearch {\n  search(\n    keyword: string,\n    callback: callbackFn,\n    opts?: DistrictSearchOptions\n  );\n  setLevel(level: string);\n  setSubdistrict(district: number);\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CDriving.html":{"url":"interfaces/CDriving.html","title":"interface - CDriving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CDriving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.driving.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { DrivingOptions } from '../../interface/driving/driving-options.interface';\n\nexport interface CDriving {\n  new (opts?: DrivingOptions): Driving;\n}\n\nexport interface Driving {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    opts: any,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setAvoidPolygons(path: ILngLat[]);\n  setAvoidRoad(road: string);\n  clearAvoidRoad();\n  clearAvoidPolygons();\n  getAvoidPolygons(): LngLat[];\n  getAvoidRoad(): string;\n  clear();\n  searchOnAMAP(obj: any);\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CEditor.html":{"url":"interfaces/CEditor.html","title":"interface - CEditor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CEllipse.html":{"url":"interfaces/CEllipse.html","title":"interface - CEllipse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CEllipse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { EllipseOptions } from '../../interface/overlays/ellipse-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CEllipse {\n  new (opts: EllipseOptions): Ellipse;\n}\n\nexport interface Ellipse {\n  setOptions(opt: EllipseOptions);\n  getOptions(): EllipseOptions;\n  getCenter(): LngLat;\n  setCenter(center: LngLat|ILngLat): void;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CGeocoder.html":{"url":"interfaces/CGeocoder.html","title":"interface - CGeocoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CGeocoder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { GeocoderOptions } from '../../interface/geocoder-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { GeocodeResult } from './geocode-result';\nimport { ReGeocodeResult } from './re-geocode-result';\n\nexport interface CGeocoder {\n  new (opts?: GeocoderOptions): Geocoder;\n}\n\nexport interface Geocoder {\n  getLocation(address: string, callback: callbackFn);\n  setCity(city: string);\n  getAddress(location: ILngLat|ILngLat[], callback: callbackFn);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CHeatmap.html":{"url":"interfaces/CHeatmap.html","title":"interface - CHeatmap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CHeatmap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CIcon.html":{"url":"interfaces/CIcon.html","title":"interface - CIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.icon.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Size } from './amap.size';\nimport { IIcon } from '../interface/icon.interface';\n\n// AMap.Icon\nexport interface Icon {\n  getImageSize(): Size;\n  setImageSize(size: Size): void;\n}\n\nexport interface CIcon {\n  new (opts: IIcon): Icon;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CInfoWindow.html":{"url":"interfaces/CInfoWindow.html","title":"interface - CInfoWindow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CInfoWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.info-window.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\nimport { Map } from './amap.map';\nimport { Size } from './amap.size';\nimport { InfoWindowOptions } from '../interface/info-window-options.interface';\n\nexport interface CInfoWindow {\n  new (opts: InfoWindowOptions): InfoWindow;\n}\n\nexport interface InfoWindow {\n  open(map: Map, pos?: LngLat|number[]): void;\n  close(): void;\n  getIsOpen(): boolean;\n  setContent(content: any): void;\n  getContent(): string;\n  setPosition(lnglat: LngLat|number[]): void;\n  getPosition(): LngLat;\n  setSize(size: Size): void;\n  getSize(): Size;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CLngLat.html":{"url":"interfaces/CLngLat.html","title":"interface - CLngLat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CLngLat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.lng-lat.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface LngLat extends Array {\n  offset(w: number, s: number): LngLat;\n  distance(lnglat: LngLat|Array): number;\n  getLng(): number;\n  getLat(): number;\n  equals(lnglat: LngLat): boolean;\n  toString(): string;\n}\n\nexport interface CLngLat {\n  new (lng: number, lat: number): LngLat;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMap.html":{"url":"interfaces/CMap.html","title":"interface - CMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.map.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\nimport { Pixel } from './amap.pixel';\nimport { Size } from './amap.size';\nimport { Bounds } from './amap.bounds';\nimport { MapOptions } from '../interface/map-options.interface';\n\nexport interface CMap {\n  new (container: string|HTMLDivElement, opts: MapOptions): Map;\n}\n\nexport interface Map {\n  getZoom(): number;\n  getLayers(): Array;  // TODO: TileLayer\n  getCenter(): LngLat;\n  getContainer(): HTMLDivElement;\n  getCity(callback: (result: any) => void): void; // TODO: city property\n  getBounds(): Bounds;\n  getlabelzIndex(): number;\n  getLimitBounds(): Bounds;\n  getLang(): string;\n  getSize(): Size;\n  getRotation(): number;\n  getStatus(): any;\n  getDefaultCursor(): string;\n  getResolution(point?: LngLat|number[]): number;\n  getScale(dpi: number): number;\n  setZoom(level: number): void;\n  setlabelzIndex(index: number): void;\n  setLayers(layers: Array): void;  // TODO: TileLayer\n  add(overlayers: Array): void;  // TODO: TileLayer\n  remove(overlayers: Array): void; // TODO: TileLayer\n  getAllOverlays(type?: string): any;\n  setCenter(position: LngLat|number[]): void;\n  setZoomAndCenter(zoomLevel: number, center: LngLat|number[]): void;\n  setCity(city: string, callback?: (result: any) => void): void;\n  setBounds(bound: Bounds): void;\n  setLimitBounds(bound: Bounds): void;\n  clearLimitBounds(): void;\n  setLang(lang: string): string;\n  setRotation(rotation: number): number;\n  setStatus(status: any): void;\n  setDefaultCursor(cursor: string): void;\n  zoomIn(): void;\n  zoomOut(): void;\n  panTo(position: LngLat|number[]): void;\n  panBy(x: number, y: number): void;\n  setFitView(overlayList?: Array): void;\n  clearMap(): void;\n  destroy(): void;\n  plugin(name: string|Array, callback: (result: any) => void): void;\n  addControl(obj: any): void;\n  removeControl(obj: any): void;\n  clearInfoWindow(): void;\n  pixelToLngLat(pixel: Pixel, level: number): LngLat;\n  lnglatToPixel(lngLat: LngLat|number[], level: number): Pixel;\n  containerToLngLat(pixel: Pixel): LngLat;\n  lngLatToContainer(lnglat: LngLat|number[]): Pixel;\n  setMapStyle(style: string): void;\n  getMapStyle(): string;\n  setFeatures(feature: Array): void;\n  getFeatures(): Array;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMarker.html":{"url":"interfaces/CMarker.html","title":"interface - CMarker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.marker.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Map } from '../amap.map';\nimport { Pixel } from '../amap.pixel';\nimport { Icon } from '../amap.icon';\nimport { MarkerOptions } from '../../interface/overlays/marker-options.interface';\n\nexport interface CMarker {\n  new (opts: MarkerOptions): Marker;\n}\n\nexport interface Marker {\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  setAnimation(animate: string): void;\n  getAnimation(): string;\n  setClickable(clickable: boolean): void;\n  getClickable(): boolean;\n  getPosition(): LngLat;\n  setPosition(lnglat: LngLat|number[]): void;\n  setAngle(angle: number): void;\n  setLabel(label: any): void;\n  getLabel(): any;\n  getAngle(): number;\n  setzIndex(index: number): void;\n  getzIndex(): number;\n  setIcon(content: string|Icon): void;\n  getIcon(): string|Icon;\n  setDraggable(draggable: boolean): void;\n  getDraggable(): boolean;\n  hide(): void;\n  show(): void;\n  setCursor(cursor: string): void;\n  setContent(html: string|HTMLElement): void;\n  getContent(): string;\n  moveAlong(path: number[][]|LngLat[], speed: number, f?: (k: any) => any, circlable?: boolean): void;\n  moveTo(lnglat: LngLat|number[], speed: number, f?: (k: any) => any): void;\n  stopMove(): void;\n  pauseMove(): void;\n  resumeMove(): void;\n  setMap(map: Map): void;\n  getMap(): Map;\n  setTitle(title: string): void;\n  getTitle(): string;\n  setTop(isTop: boolean): void;\n  getTop(): boolean;\n  setShadow(icon: Icon): void;\n  getShadow(): Icon;\n  setShape(shape: any); // TODO: MarkerShape\n  getShape(): any; // TODO: MarkerShape\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMarkerClusterer.html":{"url":"interfaces/CMarkerClusterer.html","title":"interface - CMarkerClusterer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMarkerClusterer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.marker-clusterer.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { MarkerClustererOptions } from '../interface/marker-cluster-options.interface';\nimport { ClusterStyle } from './cluster-style';\nimport { Marker } from './overlays/amap.marker';\nimport { Map } from './amap.map';\n\nexport interface CMarkerClusterer {\n  new (map: Map, markers: Marker[], opts: MarkerClustererOptions): MarkerClusterer;\n}\n\nexport interface MarkerClusterer {\n  addMarker(marker: Marker);\n  removeMarker(marker: Marker);\n  getClustersCount(): number;\n  getGridSize(): number;\n  getMaxZoom(): number;\n  getMinClusterSize(): number;\n  getStyles(): ClusterStyle[];\n  setGridSize(size: number);\n  setMaxZoom(zoom: number);\n  setMinClusterSize(size: number);\n  setStyles(styles: ClusterStyle[]);\n  clearMarkers();\n  setMap(map: Map);\n  setMarkers(markers: Marker[]);\n  getMap(): Map;\n  getMarkers(): Marker[];\n  addMarkers(markers: Marker[]);\n  removeMarkers(markers: Marker[]);\n  isAverageCenter(): boolean;\n  setAverageCenter(averageCenter: boolean);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMouseTool.html":{"url":"interfaces/CMouseTool.html","title":"interface - CMouseTool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMouseTool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.mouse-tool.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { CircleOptions } from '../interface/overlays/circle-options.interface';\nimport { MarkerOptions } from '../interface/overlays/marker-options.interface';\nimport { PolygonOptions } from '../interface/overlays/polygon-options.interface';\nimport { PolylineOptions } from '../interface/overlays/polyline-options.interface';\n\nexport interface CMouseTool {\n  new (map: Map): MouseTool;\n}\n\nexport interface MouseTool {\n  marker(options: MarkerOptions);\n  polyline(options: PolylineOptions);\n  polygon(options: PolygonOptions);\n  rectangle(options: PolygonOptions);\n  circle(options: CircleOptions);\n  rule(options: PolylineOptions);\n  measureArea(options: PolygonOptions);\n  rectZoomIn(options: PolygonOptions);\n  rectZoomOut(options: PolygonOptions);\n  close(clear: boolean);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPixel.html":{"url":"interfaces/CPixel.html","title":"interface - CPixel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPixel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.pixel.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { IPixel } from '../interface/pixel.interface';\n\n// AMap.Pixel\nexport interface Pixel extends IPixel {\n  getX(): number;\n  getY(): number;\n  equals(point: Pixel): boolean;\n  toString(): string;\n}\n\nexport interface CPixel {\n  new (x: number, y: number): Pixel;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPlaceSearch.html":{"url":"interfaces/CPlaceSearch.html","title":"interface - CPlaceSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPlaceSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/amap.place-search.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { PlaceSearchOptions } from '../../interface/place-search-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { SearchResult } from './search-result';\nimport { Bounds } from '../amap.bounds';\nimport { Polygon } from '../overlays/amap.polygon';\n\nexport interface CPlaceSearch {\n  new (opts?: PlaceSearchOptions): PlaceSearch;\n}\n\nexport interface PlaceSearch {\n  search(keyword: string, callback: callbackFn);\n  searchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn);\n  searchInBounds(keyword: string, bounds: Bounds|Polygon, callback: callbackFn);\n  getDetails(POIID: string, callback: callbackFn);\n  setType(type: string);\n  setCityLimit(limit: boolean);\n  setPageIndex(pageIndex: number);\n  setPageSize(setPageSize: number);\n  setCity(city: string);\n  setLang(lang: string);\n  getLang(): string;\n  clear();\n  poiOnAMAP(obj: IPoiObject);\n  detailOnAMAP(obj: IPoiObject);\n}\n\nexport interface IPoiObject {\n  id: string;\n  name: string;\n  location: ILngLat;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPolygon.html":{"url":"interfaces/CPolygon.html","title":"interface - CPolygon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPolygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polygon.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { PolygonOptions, ILngLat } from '../../interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\n\nexport interface CPolygon {\n  new (opts: PolygonOptions): Polygon;\n}\n\nexport type PolygonPath = Array|Array>|Array|Array>;\n\nexport interface Polygon {\n  setPath(path: PolygonPath): void;\n  getPath(): number[][];\n  setOptions(opt: PolygonOptions): void;\n  getOptions(): PolygonOptions;\n  getBounds(): Bounds;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPolyline.html":{"url":"interfaces/CPolyline.html","title":"interface - CPolyline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPolyline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polyline.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { PolylineOptions } from '../../interface/overlays/polyline-options.interface';\n\nexport interface CPolyline {\n  new (opts: PolylineOptions): Polyline;\n}\n\nexport interface Polyline {\n  setPath(path: number[][]): void;\n  getPath(): number[][];\n  setOptions(opt: PolylineOptions): void;\n  getOptions(): PolylineOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CRectangle.html":{"url":"interfaces/CRectangle.html","title":"interface - CRectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CRectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { RectangleOptions } from '../../interface/overlays/rectangle-options.interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CRectangle {\n  new (opts: RectangleOptions): Rectangle;\n}\n\nexport interface Rectangle {\n  setOptions(opt: RectangleOptions): void;\n  getOptions(): RectangleOptions;\n  getBounds(): Bounds;\n  setBounds(bounds: Bounds): void;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CRiding.html":{"url":"interfaces/CRiding.html","title":"interface - CRiding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CRiding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/amap.riding.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { RidingResult } from './riding-result';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { RidingOptions } from '../../interface/riding/riding-options.interface';\n\nexport interface CRiding {\n  new (opts?: RidingOptions): Riding;\n}\n\nexport interface Riding {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CSize.html":{"url":"interfaces/CSize.html","title":"interface - CSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.size.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { ISize } from '../interface/size.interface';\n\n// AMap.Size\nexport interface Size extends ISize {\n  getWidth(): number;\n  getHeight(): number;\n  toString(): string;\n}\n\nexport interface CSize {\n  new (width: number, height: number): Size;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CText.html":{"url":"interfaces/CText.html","title":"interface - CText","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CText\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.text.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Map } from '../amap.map';\nimport { Pixel } from '../amap.pixel';\nimport { Icon } from '../amap.icon';\nimport { TextOptions } from '../../interface/overlays/text-options.interface';\n\nexport interface CText {\n  new (opts: TextOptions): Text;\n}\n\nexport interface Text {\n  getText(): string;\n  setText(text: string): void;\n  setStyle(obj: any): void;\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  setAnimation(animate: string): void;\n  getAnimation(): string;\n  setClickable(clickable: boolean): void;\n  getClickable(): boolean;\n  getPosition(): LngLat;\n  setPosition(lnglat: LngLat|number[]): void;\n  setAngle(angle: number): void;\n  getAngle(): number;\n  setzIndex(index: number): void;\n  getzIndex(): number;\n  setDraggable(draggable: boolean): void;\n  getDraggable(): boolean;\n  hide(): void;\n  show(): void;\n  setCursor(cursor: string): void;\n  moveAlong(path: number[][]|LngLat[], speed: number, f?: (k: any) => any, circlable?: boolean): void;\n  moveTo(lnglat: LngLat|number[], speed: number, f?: (k: any) => any): void;\n  stopMove(): void;\n  pauseMove(): void;\n  resumeMove(): void;\n  setMap(map: Map): void;\n  getMap(): Map;\n  setTitle(title: string): void;\n  getTitle(): string;\n  setTop(isTop: boolean): void;\n  getTop(): boolean;\n  setShadow(icon: Icon): void;\n  getShadow(): Icon;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CToolBar.html":{"url":"interfaces/CToolBar.html","title":"interface - CToolBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CToolBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.toolbar.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolbarOptions } from '../interface/toolbar-options.interface';\nimport { Pixel } from './amap.pixel';\nimport { LngLat } from './amap.lng-lat';\n\nexport interface CToolBar {\n  new (opts?: ToolbarOptions): ToolBar;\n}\n\nexport interface ToolBar {\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  hideRuler(): void;\n  showRuler(): void;\n  hideDirection(): void;\n  showDirection(): void;\n  hideLocation(): void;\n  showLocation(): void;\n  doLocation(): void;\n  getLocation(): LngLat;\n  hide(): void;\n  show(): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CTransfer.html":{"url":"interfaces/CTransfer.html","title":"interface - CTransfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CTransfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/amap.transfer.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TransferOptions } from '../../interface/transfer/transfer-options.interface';\nimport { TransferResult } from './transfer-result';\n\nexport interface CTransfer {\n  new (opts?: TransferOptions): Transfer;\n}\n\nexport interface Transfer {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setCity(city: string);\n  setCityd(city: string);\n  leaveAt(time: string, data: string);\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CTruckDriving.html":{"url":"interfaces/CTruckDriving.html","title":"interface - CTruckDriving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CTruckDriving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TruckDrivingOptions } from '../../interface/driving/truck-driving-options.interface';\n\nexport interface CTruckDriving {\n  new (opts?: TruckDrivingOptions): TruckDriving;\n}\n\nexport interface TruckDriving {\n  search(\n    path: any[],\n    callback: callbackFn\n  );\n  clear();\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CWalking.html":{"url":"interfaces/CWalking.html","title":"interface - CWalking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CWalking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/amap.walking.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { WalkingResult } from './walking-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { WalkingOptions } from '../../interface/walking/walking-options.interface';\n\nexport interface CWalking {\n  new (opts?: WalkingOptions): Walking;\n}\n\nexport interface Walking {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeFilter.html":{"url":"classes/ChangeFilter.html","title":"class - ChangeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/change-filter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                has\n                            \n                            \n                                notEmpty\n                            \n                            \n                                    Static\n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_changes: SimpleChanges)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/utils/change-filter.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _changes\n                                                  \n                                                        \n                                                                        SimpleChanges\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/change-filter.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            notEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nnotEmpty(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/change-filter.ts:11\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            of\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    of(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/change-filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ChangeFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SimpleChanges } from '@angular/core';\nimport { Observable, of, empty } from 'rxjs';\n\nexport class ChangeFilter {\n  constructor(private _changes: SimpleChanges) { }\n\n  static of(changes: SimpleChanges) {\n    return new ChangeFilter(changes);\n  }\n\n  notEmpty(key: string): Observable {\n    if (this._changes[key]) {\n      const value: T = this._changes[key].currentValue;\n\n      if (value !== undefined && value !== null) {\n        return of(value);\n      }\n    }\n    return empty();\n  }\n\n  has(key: string): Observable {\n    if (this._changes[key]) {\n      const value: T = this._changes[key].currentValue;\n      return of(value);\n    }\n    return empty();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cinema.html":{"url":"interfaces/Cinema.html","title":"interface - Cinema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cinema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/cinema.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deep_src\n                                \n                                \n                                        intro\n                                \n                                \n                                        openingtime\n                                \n                                \n                                        opentime_GDF\n                                \n                                \n                                        parking\n                                \n                                \n                                        photos\n                                \n                                \n                                        rating\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openingtime\n                                    \n                                \n                                \n                                    \n                                        openingtime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime_GDF\n                                    \n                                \n                                \n                                    \n                                        opentime_GDF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking\n                                    \n                                \n                                \n                                    \n                                        parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Cinema {\n  intro: string;\n  rating: string;\n  deep_src: string;\n  parking: string;\n  opentime_GDF: string;\n  openingtime: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Circle.html":{"url":"interfaces/Circle.html","title":"interface - Circle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Circle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getCenter\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getRadius\n                                \n                                \n                                    hide\n                                \n                                \n                                    setCenter\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setRadius\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CircleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { CircleOptions } from '../../interface/overlays/circle-options.interface';\n\nexport interface CCircle {\n  new (opts: CircleOptions): Circle;\n}\n\nexport interface Circle {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  getBounds(): Bounds;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleOptions): void;\n  getOptions(): CircleOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|number[]): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleMarker.html":{"url":"interfaces/CircleMarker.html","title":"interface - CircleMarker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CircleMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCenter\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getRadius\n                                \n                                \n                                    hide\n                                \n                                \n                                    setCenter\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setRadius\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CircleMarkerOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: CircleMarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                CircleMarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { CircleMarkerOptions } from '../../interface/overlays/circle-marker-options.interface';\n\nexport interface CCircleMarker {\n  new (opts: CircleMarkerOptions): CircleMarker;\n}\n\nexport interface CircleMarker {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleMarkerOptions): void;\n  getOptions(): CircleMarkerOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleMarkerOptions.html":{"url":"interfaces/CircleMarkerOptions.html","title":"interface - CircleMarkerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CircleMarkerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/circle-marker-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\n\nexport interface CircleMarkerOptions {\n  map?: Map;\n  zIndex?: number;\n  center?: LngLat;\n  bubble?: boolean;\n  cursor?: string;\n  radius?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  extData?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CircleMarkerService.html":{"url":"injectables/CircleMarkerService.html","title":"injectable - CircleMarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CircleMarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: CircleMarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleMarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(circle: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'circle-marker-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, CircleMarker, Map } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { CircleMarkerOptions } from '../../types/interface';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class CircleMarkerService extends EventBinder {\n  TAG = 'circle-marker-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private logger: LoggerService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: CircleMarkerOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.CircleMarker(options);\n    });\n  }\n\n  destroy(circle: Promise): Promise {\n    return circle.then(m => {\n      m.setMap(null);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleOptions.html":{"url":"interfaces/CircleOptions.html","title":"interface - CircleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CircleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/circle-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\n\nexport interface CircleOptions {\n  map?: Map;\n  zIndex?: number;\n  center?: LngLat;\n  bubble?: boolean;\n  cursor?: string;\n  radius?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  extData?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CircleService.html":{"url":"injectables/CircleService.html","title":"injectable - CircleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CircleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/circle/circle.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/circle/circle.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(c: Circle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Circle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(circle: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'circle-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Circle, Map, CircleEditor } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { CircleOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class CircleService extends EventBinder {\n  TAG = 'circle-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n    private logger: LoggerService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: CircleOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Circle(options);\n    });\n  }\n\n  destroy(circle: Promise): Promise {\n    return circle.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.CircleEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(c: Circle): Promise {\n    return this._map.then(map => new AMap.CircleEditor(map, c));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfo.html":{"url":"interfaces/CityInfo.html","title":"interface - CityInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/city-info.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        citycode\n                                \n                                \n                                        count\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfo {\n  name: string;\n  citycode: string;\n  adcode: string;\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterStyle.html":{"url":"interfaces/ClusterStyle.html","title":"interface - ClusterStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/cluster-style.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imageOffset\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                        size\n                                \n                                \n                                            Optional\n                                        textColor\n                                \n                                \n                                            Optional\n                                        textSize\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageOffset\n                                    \n                                \n                                \n                                    \n                                        imageOffset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         Size\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Size\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                    \n                                \n                                \n                                    \n                                        textColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textSize\n                                    \n                                \n                                \n                                    \n                                        textSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Size } from './amap.size';\nimport { Pixel } from './amap.pixel';\n\nexport interface ClusterStyle {\n  url: string;\n  size: Size;\n  offset?: Pixel;\n  imageOffset?: Pixel;\n  textColor?: string;\n  textSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cross.html":{"url":"interfaces/Cross.html","title":"interface - Cross","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cross\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/cross.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        direction\n                                \n                                \n                                        distance\n                                \n                                \n                                        first_id\n                                \n                                \n                                        first_name\n                                \n                                \n                                        location\n                                \n                                \n                                        second_id\n                                \n                                \n                                        second_name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_id\n                                    \n                                \n                                \n                                    \n                                        first_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_id\n                                    \n                                \n                                \n                                    \n                                        second_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_name\n                                    \n                                \n                                \n                                    \n                                        second_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface Cross {\n  distance: number;\n  direction: string;\n  location: LngLat;\n  first_id: string;\n  first_name: string;\n  second_id: string;\n  second_name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DebugLoggerService.html":{"url":"injectables/DebugLoggerService.html","title":"injectable - DebugLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DebugLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/logger/debug-logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                d\n                            \n                            \n                                e\n                            \n                            \n                                i\n                            \n                            \n                                w\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            d\n                        \n                        \n                    \n                \n            \n            \n                \nd(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            e\n                        \n                        \n                    \n                \n            \n            \n                \ne(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            i\n                        \n                        \n                    \n                \n            \n            \n                \ni(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            w\n                        \n                        \n                    \n                \n            \n            \n                \nw(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DebugLoggerService {\n\n  constructor() { }\n\n  i(tag: string, ...args: any[]) {\n    console.log(`[${tag}]`, ...args);\n  }\n\n  e(tag: string, ...args: any[]) {\n    console.error(`[${tag}]`, ...args);\n  }\n\n  w(tag: string, ...args: any[]) {\n    console.warn(`[${tag}]`, ...args);\n  }\n\n  d(tag: string, ...args: any[]) {\n    console.log(`[${tag}]`, ...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dining.html":{"url":"interfaces/Dining.html","title":"interface - Dining","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dining\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/dining.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addition\n                                \n                                \n                                        atmosphere\n                                \n                                \n                                        cost\n                                \n                                \n                                        cp_rating\n                                \n                                \n                                        cuisines\n                                \n                                \n                                        deep_src\n                                \n                                \n                                        environment_rating\n                                \n                                \n                                        intro\n                                \n                                \n                                        opentime\n                                \n                                \n                                        opentime_GDF\n                                \n                                \n                                        ordering_app_url\n                                \n                                \n                                        ordering_wap_url\n                                \n                                \n                                        ordering_web_url\n                                \n                                \n                                        photos\n                                \n                                \n                                        rating\n                                \n                                \n                                        recommend\n                                \n                                \n                                        service_rating\n                                \n                                \n                                        tag\n                                \n                                \n                                        taste_rating\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addition\n                                    \n                                \n                                \n                                    \n                                        addition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        atmosphere\n                                    \n                                \n                                \n                                    \n                                        atmosphere:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cp_rating\n                                    \n                                \n                                \n                                    \n                                        cp_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cuisines\n                                    \n                                \n                                \n                                    \n                                        cuisines:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_rating\n                                    \n                                \n                                \n                                    \n                                        environment_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime\n                                    \n                                \n                                \n                                    \n                                        opentime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime_GDF\n                                    \n                                \n                                \n                                    \n                                        opentime_GDF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_app_url\n                                    \n                                \n                                \n                                    \n                                        ordering_app_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_wap_url\n                                    \n                                \n                                \n                                    \n                                        ordering_wap_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_web_url\n                                    \n                                \n                                \n                                    \n                                        ordering_web_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommend\n                                    \n                                \n                                \n                                    \n                                        recommend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_rating\n                                    \n                                \n                                \n                                    \n                                        service_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taste_rating\n                                    \n                                \n                                \n                                    \n                                        taste_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Dining {\n  cuisines: string;\n  tag: string;\n  intro: string;\n  rating: string;\n  cp_rating: string;\n  deep_src: string;\n  taste_rating: string;\n  environment_rating: string;\n  service_rating: string;\n  cost: string;\n  recommend: string;\n  atmosphere: string;\n  ordering_wap_url: string;\n  ordering_web_url: string;\n  ordering_app_url: string;\n  opentime_GDF: string;\n  opentime: string;\n  addition: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Discount.html":{"url":"interfaces/Discount.html","title":"interface - Discount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/discount.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        detail\n                                \n                                \n                                        end_time\n                                \n                                \n                                        photos\n                                \n                                \n                                        provider\n                                \n                                \n                                        sold_num\n                                \n                                \n                                        start_time\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_time\n                                    \n                                \n                                \n                                    \n                                        end_time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold_num\n                                    \n                                \n                                \n                                    \n                                        sold_num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_time\n                                    \n                                \n                                \n                                    \n                                        start_time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Discount {\n  title: string;\n  detail: string;\n  start_time: string;\n  end_time: string;\n  sold_num: number;\n  photos: Photo[];\n  url: string;\n  provider: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/District.html":{"url":"interfaces/District.html","title":"interface - District","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  District\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/district.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        boundaries\n                                \n                                \n                                        center\n                                \n                                \n                                        citycode\n                                \n                                \n                                        districtList\n                                \n                                \n                                        level\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boundaries\n                                    \n                                \n                                \n                                    \n                                        boundaries:         LngLat[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        districtList\n                                    \n                                \n                                \n                                    \n                                        districtList:         District[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         District[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface District {\n  name: string;\n  center: LngLat;\n  citycode: string;\n  adcode: string;\n  level: string;\n  boundaries: LngLat[][];\n  districtList: District[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistrictSearch.html":{"url":"interfaces/DistrictSearch.html","title":"interface - DistrictSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DistrictSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/amap.district-search.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search\n                                \n                                \n                                    setLevel\n                                \n                                \n                                    setSubdistrict\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, callback: callbackFn, opts?: DistrictSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/district-search/amap.district-search.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                DistrictSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLevel\n                        \n                        \n                    \n                \n            \n            \n                \nsetLevel(level: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/district-search/amap.district-search.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubdistrict\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubdistrict(district: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/district-search/amap.district-search.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    district\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DistrictSearchOptions } from '../../interface/district-search-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { DistrictSearchResult } from './district-search-result';\n\nexport interface CDistrictSearch {\n  new (opts?: DistrictSearchOptions): DistrictSearch;\n}\n\nexport interface DistrictSearch {\n  search(\n    keyword: string,\n    callback: callbackFn,\n    opts?: DistrictSearchOptions\n  );\n  setLevel(level: string);\n  setSubdistrict(district: number);\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistrictSearchOptions.html":{"url":"interfaces/DistrictSearchOptions.html","title":"interface - DistrictSearchOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DistrictSearchOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/district-search-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        level\n                                \n                                \n                                            Optional\n                                        showbiz\n                                \n                                \n                                            Optional\n                                        subdistrict\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showbiz\n                                    \n                                \n                                \n                                    \n                                        showbiz:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subdistrict\n                                    \n                                \n                                \n                                    \n                                        subdistrict:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DistrictSearchOptions {\n  level?: string;\n  showbiz?: boolean;\n  extensions?: string;\n  subdistrict?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistrictSearchResult.html":{"url":"interfaces/DistrictSearchResult.html","title":"interface - DistrictSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DistrictSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/district-search-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        districtList\n                                \n                                \n                                        info\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        districtList\n                                    \n                                \n                                \n                                    \n                                        districtList:         District[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         District[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { District } from './district';\n\nexport interface DistrictSearchResult {\n  info: string;\n  districtList: District[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentRef.html":{"url":"injectables/DocumentRef.html","title":"injectable - DocumentRef","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DocumentRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/browser-globals.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNativeDocument\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeDocument\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeDocument()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/browser-globals.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n}\n\n@Injectable()\nexport class DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DriveRoute.html":{"url":"interfaces/DriveRoute.html","title":"interface - DriveRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DriveRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-route.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        policy\n                                \n                                \n                                        restriction\n                                \n                                \n                                        steps\n                                \n                                \n                                        time\n                                \n                                \n                                        tolls\n                                \n                                \n                                        tolls_distance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restriction\n                                    \n                                \n                                \n                                    \n                                        restriction:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         DriveStep[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DriveStep[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls\n                                    \n                                \n                                \n                                    \n                                        tolls:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls_distance\n                                    \n                                \n                                \n                                    \n                                        tolls_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveStep } from './drive-step';\n\nexport interface DriveRoute {\n  distance: number;\n  time: number;\n  policy: string;\n  tolls: number;\n  tolls_distance: number;\n  steps: DriveStep[];\n  restriction: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DriveStep.html":{"url":"interfaces/DriveStep.html","title":"interface - DriveStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DriveStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        assist_action\n                                \n                                \n                                        cities\n                                \n                                \n                                        distance\n                                \n                                \n                                        end_location\n                                \n                                \n                                        instruction\n                                \n                                \n                                        orientation\n                                \n                                \n                                        path\n                                \n                                \n                                        road\n                                \n                                \n                                        start_location\n                                \n                                \n                                        time\n                                \n                                \n                                        tmcs\n                                \n                                \n                                        toll_road\n                                \n                                \n                                        tolls\n                                \n                                \n                                        tolls_distance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assist_action\n                                    \n                                \n                                \n                                    \n                                        assist_action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         ViaCity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViaCity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_location\n                                    \n                                \n                                \n                                    \n                                        end_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_location\n                                    \n                                \n                                \n                                    \n                                        start_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmcs\n                                    \n                                \n                                \n                                    \n                                        tmcs:         TMC[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TMC[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toll_road\n                                    \n                                \n                                \n                                    \n                                        toll_road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls\n                                    \n                                \n                                \n                                    \n                                        tolls:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls_distance\n                                    \n                                \n                                \n                                    \n                                        tolls_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { District } from '../district-search/district';\n\nexport interface DriveStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n  distance: number;\n  tolls: number;\n  tolls_distance: number;\n  toll_road: string;\n  time: number;\n  path: LngLat[];\n  cities: ViaCity[];\n  tmcs: TMC[];\n}\n\nexport interface ViaCity {\n  name: string;\n  citycode: string;\n  adcode: string;\n  districts: District[];\n}\n\nexport interface TMC {\n  lcode: string;\n  distance: number;\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Driving.html":{"url":"interfaces/Driving.html","title":"interface - Driving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Driving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.driving.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    clearAvoidPolygons\n                                \n                                \n                                    clearAvoidRoad\n                                \n                                \n                                    getAvoidPolygons\n                                \n                                \n                                    getAvoidRoad\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                                \n                                    searchOnAMAP\n                                \n                                \n                                    setAvoidPolygons\n                                \n                                \n                                    setAvoidRoad\n                                \n                                \n                                    setPolicy\n                                \n                                \n                                    setProvinceAndNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, opts: any, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidPolygons(path: ILngLat[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidRoad(road: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    road\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { DrivingOptions } from '../../interface/driving/driving-options.interface';\n\nexport interface CDriving {\n  new (opts?: DrivingOptions): Driving;\n}\n\nexport interface Driving {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    opts: any,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setAvoidPolygons(path: ILngLat[]);\n  setAvoidRoad(road: string);\n  clearAvoidRoad();\n  clearAvoidPolygons();\n  getAvoidPolygons(): LngLat[];\n  getAvoidRoad(): string;\n  clear();\n  searchOnAMAP(obj: any);\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrivingOptions.html":{"url":"interfaces/DrivingOptions.html","title":"interface - DrivingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrivingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/driving/driving-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        ferry\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        number\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                                \n                                            Optional\n                                        province\n                                \n                                \n                                            Optional\n                                        showTraffic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ferry\n                                    \n                                \n                                \n                                    \n                                        ferry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTraffic\n                                    \n                                \n                                \n                                    \n                                        showTraffic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface DrivingOptions {\n  policy?: any;\n  extensions?: string;\n  ferry?: number;\n  map?: Map;\n  panel?: any;\n  hideMarkers?: boolean;\n  showTraffic?: boolean;\n  province?: string;\n  number?: string;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrivingResult.html":{"url":"interfaces/DrivingResult.html","title":"interface - DrivingResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrivingResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/driving-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        routes\n                                \n                                \n                                        start\n                                \n                                \n                                        taxi_cost\n                                \n                                \n                                        waypoints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:         DriveRoute[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DriveRoute[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxi_cost\n                                    \n                                \n                                \n                                    \n                                        taxi_cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waypoints\n                                    \n                                \n                                \n                                    \n                                        waypoints:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { DriveRoute } from './drive-route';\n\nexport interface DrivingResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  waypoints: Poi;\n  taxi_cost: number;\n  routes: DriveRoute[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Editor.html":{"url":"interfaces/Editor.html","title":"interface - Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Editor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    off\n                                \n                                \n                                    on\n                                \n                                \n                                    open\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            off\n                        \n                        \n                    \n                \n            \n            \n                \noff(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ellipse.html":{"url":"interfaces/Ellipse.html","title":"interface - Ellipse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Ellipse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getCenter\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    hide\n                                \n                                \n                                    setCenter\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EllipseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(center: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: EllipseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                EllipseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { EllipseOptions } from '../../interface/overlays/ellipse-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CEllipse {\n  new (opts: EllipseOptions): Ellipse;\n}\n\nexport interface Ellipse {\n  setOptions(opt: EllipseOptions);\n  getOptions(): EllipseOptions;\n  getCenter(): LngLat;\n  setCenter(center: LngLat|ILngLat): void;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EllipseOptions.html":{"url":"interfaces/EllipseOptions.html","title":"interface - EllipseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EllipseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/ellipse-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\n\nexport interface EllipseOptions {\n  map?: Map;\n  zIndex?: number;\n  center?: LngLat;\n  radius?: number[];\n  bubble?: boolean;\n  cursor?: string;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number;\n  extData?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EllipseService.html":{"url":"injectables/EllipseService.html","title":"injectable - EllipseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EllipseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/ellipse/ellipse.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: EllipseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EllipseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(e: Ellipse)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Ellipse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(ellipse: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ellipse\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ellipse-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Ellipse, Map, EllipseEditor } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { EllipseOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class EllipseService extends EventBinder {\n  TAG = 'ellipse-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n    private logger: LoggerService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: EllipseOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Ellipse(options);\n    });\n  }\n\n  destroy(ellipse: Promise): Promise {\n    return ellipse.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.EllipseEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(e: Ellipse): Promise {\n    return this._map.then(map => new AMap.EllipseEditor(map, e));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventBinder.html":{"url":"classes/EventBinder.html","title":"class - EventBinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventBinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/event-binder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/event-binder.ts:7\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { AMapClass } from '../types/class';\ndeclare const AMap: AMapClass;\n\nexport class EventBinder {\n\n  bindEvent(target: Promise | T, event: string): Observable {\n    if (target instanceof Promise) {\n      return Observable.create(observer => {\n        let listenerPromise = target.then(m => {\n          return AMap.event.addListener(m, event, e => {\n            setTimeout(() => observer.next(e));\n          }, this);\n        });\n\n        return () => {\n          listenerPromise.then(listener => {\n            AMap.event.removeListener(listener);\n            listenerPromise = null;\n          });\n        };\n      });\n    } else {\n      return Observable.create(observer => {\n        let listener = AMap.event.addListener(target, event, e => {\n          setTimeout(() => observer.next(e));\n        }, this);\n\n        return () => {\n          AMap.event.removeListener(listener);\n          listener = null;\n        };\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Geocode.html":{"url":"interfaces/Geocode.html","title":"interface - Geocode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Geocode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/geocode.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        addressComponent\n                                \n                                \n                                        formattedAddress\n                                \n                                \n                                        level\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addressComponent\n                                    \n                                \n                                \n                                    \n                                        addressComponent:         AddressComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AddressComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedAddress\n                                    \n                                \n                                \n                                    \n                                        formattedAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { AddressComponent } from './address-component';\n\nexport interface Geocode {\n  addressComponent: AddressComponent;\n  formattedAddress: string;\n  location: LngLat;\n  adcode: string;\n  level: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeocodeResult.html":{"url":"interfaces/GeocodeResult.html","title":"interface - GeocodeResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeocodeResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/geocode-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geocodes\n                                \n                                \n                                        info\n                                \n                                \n                                        resultNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geocodes\n                                    \n                                \n                                \n                                    \n                                        geocodes:         Geocode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Geocode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultNum\n                                    \n                                \n                                \n                                    \n                                        resultNum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Geocode } from './geocode';\n\nexport interface GeocodeResult {\n  info: string;\n  geocodes: Geocode[];\n  resultNum: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Geocoder.html":{"url":"interfaces/Geocoder.html","title":"interface - Geocoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Geocoder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAddress\n                                \n                                \n                                    getLocation\n                                \n                                \n                                    setCity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddress\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddress(location: ILngLat | ILngLat[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                ILngLat | ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation(address: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GeocoderOptions } from '../../interface/geocoder-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { GeocodeResult } from './geocode-result';\nimport { ReGeocodeResult } from './re-geocode-result';\n\nexport interface CGeocoder {\n  new (opts?: GeocoderOptions): Geocoder;\n}\n\nexport interface Geocoder {\n  getLocation(address: string, callback: callbackFn);\n  setCity(city: string);\n  getAddress(location: ILngLat|ILngLat[], callback: callbackFn);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeocoderOptions.html":{"url":"interfaces/GeocoderOptions.html","title":"interface - GeocoderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeocoderOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/geocoder-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        batch\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                        extensions\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        batch\n                                    \n                                \n                                \n                                    \n                                        batch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GeocoderOptions {\n  city?: string;\n  radius?: number;\n  batch?: boolean;\n  extensions: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeocoderResult.html":{"url":"interfaces/GeocoderResult.html","title":"interface - GeocoderResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeocoderResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/geocoder-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geocodes\n                                \n                                \n                                        info\n                                \n                                \n                                        regeocode\n                                \n                                \n                                        resultNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geocodes\n                                    \n                                \n                                \n                                    \n                                        geocodes:         Geocode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Geocode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        regeocode\n                                    \n                                \n                                \n                                    \n                                        regeocode:         ReGeocode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReGeocode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultNum\n                                    \n                                \n                                \n                                    \n                                        resultNum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Geocode } from './geocode';\nimport { ReGeocode } from './re-geocode';\n\nexport interface GeocoderResult {\n  info: string;\n  geocodes: Geocode[];\n  resultNum: number;\n  regeocode: ReGeocode;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Groupbuy.html":{"url":"interfaces/Groupbuy.html","title":"interface - Groupbuy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Groupbuy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/groupbuy.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        detail\n                                \n                                \n                                        discount\n                                \n                                \n                                        etime\n                                \n                                \n                                        groupbuy_price\n                                \n                                \n                                        original_price\n                                \n                                \n                                        photos\n                                \n                                \n                                        provider\n                                \n                                \n                                        sold_num\n                                \n                                \n                                        stime\n                                \n                                \n                                        ticket_address\n                                \n                                \n                                        ticket_tel\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        type_code\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                    \n                                \n                                \n                                    \n                                        discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etime\n                                    \n                                \n                                \n                                    \n                                        etime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupbuy_price\n                                    \n                                \n                                \n                                    \n                                        groupbuy_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_price\n                                    \n                                \n                                \n                                    \n                                        original_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold_num\n                                    \n                                \n                                \n                                    \n                                        sold_num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stime\n                                    \n                                \n                                \n                                    \n                                        stime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket_address\n                                    \n                                \n                                \n                                    \n                                        ticket_address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket_tel\n                                    \n                                \n                                \n                                    \n                                        ticket_tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type_code\n                                    \n                                \n                                \n                                    \n                                        type_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Groupbuy {\n  title: string;\n  type_code: string;\n  type: string;\n  detail: string;\n  stime: string;\n  etime: string;\n  count: number;\n  sold_num: number;\n  original_price: number;\n  groupbuy_price: number;\n  discount: number;\n  ticket_address: string;\n  ticket_tel: string;\n  photos: Photo[];\n  url: string;\n  provider: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Heatmap.html":{"url":"interfaces/Heatmap.html","title":"interface - Heatmap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Heatmap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addDataPoint\n                                \n                                \n                                    getDataSet\n                                \n                                \n                                    getMap\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    hide\n                                \n                                \n                                    setDataSet\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDataPoint\n                        \n                        \n                    \n                \n            \n            \n                \naddDataPoint(lng: number, lat: number, count?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lng\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lat\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataSet\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataSet()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HeatmapOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDataSet\n                        \n                        \n                    \n                \n            \n            \n                \nsetDataSet(dataset: HeatmapData)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataset\n                                    \n                                                HeatmapData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: HeatmapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                HeatmapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapDataSet.html":{"url":"interfaces/HeatmapDataSet.html","title":"interface - HeatmapDataSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapDataSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        max\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     HeatmapLngLatData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HeatmapLngLatData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapDataUrl.html":{"url":"interfaces/HeatmapDataUrl.html","title":"interface - HeatmapDataUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapDataUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        dataParser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataParser\n                                    \n                                \n                                \n                                    \n                                        dataParser:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapLngLatData.html":{"url":"interfaces/HeatmapLngLatData.html","title":"interface - HeatmapLngLatData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapLngLatData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        count\n                                \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapOptions.html":{"url":"interfaces/HeatmapOptions.html","title":"interface - HeatmapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/layers/heatmap-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        gradient\n                                \n                                \n                                            Optional\n                                        opacity\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        zooms\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gradient\n                                    \n                                \n                                \n                                    \n                                        gradient:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                    \n                                \n                                \n                                    \n                                        opacity:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zooms\n                                    \n                                \n                                \n                                    \n                                        zooms:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HeatmapOptions {\n  radius?: number;\n  gradient?: any;\n  opacity?: number[];\n  zooms?: number[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeatmapService.html":{"url":"injectables/HeatmapService.html","title":"injectable - HeatmapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HeatmapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/heatmap/heatmap.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, logger: LoggerService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: HeatmapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HeatmapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(heatmap: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    heatmap\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'heatmap-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Heatmap, Map } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { HeatmapOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class HeatmapService extends EventBinder {\n  TAG = 'heatmap-service';\n  private _map: Promise;\n  private _plugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private logger: LoggerService,\n    private plugins: PluginLoaderService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: HeatmapOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Heatmap');\n    }\n\n    return this._plugin.then(() => this._map)\n      .then(map => {\n        const heatmap = new AMap.Heatmap(map, options);\n        return heatmap;\n      });\n  }\n\n  destroy(heatmap: Promise): Promise {\n    return heatmap.then(hm => hm.setMap(null));\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotel.html":{"url":"interfaces/Hotel.html","title":"interface - Hotel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hotel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/hotel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addition\n                                \n                                \n                                        deep_src\n                                \n                                \n                                        environment_rating\n                                \n                                \n                                        faci_rating\n                                \n                                \n                                        health_rating\n                                \n                                \n                                        intro\n                                \n                                \n                                        lowest_price\n                                \n                                \n                                        photos\n                                \n                                \n                                        rating\n                                \n                                \n                                        service_rating\n                                \n                                \n                                        star\n                                \n                                \n                                        traffic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addition\n                                    \n                                \n                                \n                                    \n                                        addition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_rating\n                                    \n                                \n                                \n                                    \n                                        environment_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faci_rating\n                                    \n                                \n                                \n                                    \n                                        faci_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        health_rating\n                                    \n                                \n                                \n                                    \n                                        health_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lowest_price\n                                    \n                                \n                                \n                                    \n                                        lowest_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_rating\n                                    \n                                \n                                \n                                    \n                                        service_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                    \n                                \n                                \n                                    \n                                        star:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        traffic\n                                    \n                                \n                                \n                                    \n                                        traffic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Hotel {\n  rating: string;\n  star: string;\n  intro: string;\n  lowest_price: string;\n  faci_rating: string;\n  health_rating: string;\n  environment_rating: string;\n  service_rating: string;\n  traffic: string;\n  addition: string;\n  deep_src: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClusterStyle.html":{"url":"interfaces/IClusterStyle.html","title":"interface - IClusterStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IClusterStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/cluster-style.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imageOffset\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                        size\n                                \n                                \n                                            Optional\n                                        textColor\n                                \n                                \n                                            Optional\n                                        textSize\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageOffset\n                                    \n                                \n                                \n                                    \n                                        imageOffset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         ISize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                    \n                                \n                                \n                                    \n                                        textColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textSize\n                                    \n                                \n                                \n                                    \n                                        textSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISize } from './size.interface';\nimport { IPixel } from './pixel.interface';\n\nexport interface IClusterStyle {\n  url: string;\n  size: ISize;\n  offset?: IPixel;\n  imageOffset?: IPixel;\n  textColor?: string;\n  textSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIcon.html":{"url":"interfaces/IIcon.html","title":"interface - IIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/icon.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                            Optional\n                                        imageOffset\n                                \n                                \n                                            Optional\n                                        imageSize\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageOffset\n                                    \n                                \n                                \n                                    \n                                        imageOffset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageSize\n                                    \n                                \n                                \n                                    \n                                        imageSize:         ISize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         ISize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISize } from './size.interface';\nimport { IPixel } from './pixel.interface';\n\nexport interface IIcon {\n  size?: ISize;\n  imageOffset?: IPixel;\n  image?: string;\n  imageSize?: ISize;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyMap.html":{"url":"interfaces/IKeyMap.html","title":"interface - IKeyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/key-map.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/utils/key-map.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface IKeyMap {\n  [key: string]: T;\n}\n\nexport class KeyMap {\n  private _map: IKeyMap = Object.create(null);\n  private _size = 0;\n\n  get size() { return this._size; }\n\n  set(key: string, value: T): KeyMap {\n    if (this._map[key] === undefined && value !== undefined) {\n      this._size++;\n    }\n\n    this._map[key] = value;\n    return this;\n  }\n\n  get(key: string) {\n    return this._map[key];\n  }\n\n  delete(key: string) {\n    const value = this._map[key];\n\n    if (value !== undefined) {\n      this._size--;\n    }\n\n    delete this._map[key];\n    return value;\n  }\n\n  has(key: string) {\n    return (this._map[key] !== undefined);\n  }\n\n  clear() {\n    this._map = Object.create(null);\n    this._size = 0;\n  }\n\n  keys() {\n    return Object.keys(this._map);\n  }\n\n  values() {\n    return Object.keys(this._map).map(key => this._map[key]);\n  }\n\n  entries() {\n    return Object.keys(this._map).map(key => [key, this._map[key]]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabel.html":{"url":"interfaces/ILabel.html","title":"interface - ILabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/label.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        offset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPixel } from './pixel.interface';\n\nexport interface ILabel {\n  content: string;\n  offset: IPixel;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapAPILoaderConfig.html":{"url":"interfaces/IMapAPILoaderConfig.html","title":"interface - IMapAPILoaderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapAPILoaderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        apiVersion\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        urlPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlPath\n                                    \n                                \n                                \n                                    \n                                        urlPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\nimport { LoggerService } from '../logger/logger.service';\n\nexport interface IMapAPILoaderConfig {\n  apiKey?: string;\n  apiVersion?: string;\n  urlPath?: string;\n  debug?: boolean;\n}\n\nexport const MAP_API_CONFIG = new InjectionToken('ngx-amap MAP_API_CONFIG');\n\n@Injectable()\nexport class MapAPILoaderService {\n  TAG = 'map-api-loader';\n\n  private _defaultUrl = 'https://webapi.amap.com/maps';\n  private _defaultVersion = '1.4.11';\n  private _config: IMapAPILoaderConfig;\n  private _documentRef: DocumentRef;\n  private _windowRef: WindowRef;\n  private _mapLoaded: Promise;\n\n  constructor(@Inject(MAP_API_CONFIG) config: any,\n              d: DocumentRef,\n              w: WindowRef,\n              private logger: LoggerService) {\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n\n  load() {\n    if (this._mapLoaded) {\n      return this._mapLoaded;\n    }\n    this.logger.d(this.TAG, 'loading AMap api...');\n\n    const callbackName = `ngxAMapAPILoader`;\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.src = this.getSrcFromConfig(callbackName);\n\n    this._mapLoaded = new Promise((resolve: Function, reject: Function) => {\n      (this._windowRef.getNativeWindow())[callbackName] = () => {\n        this.logger.d(this.TAG, 'loading AMap api COMPLETE');\n        resolve();\n      };\n\n      script.onerror = (error: Event) => { reject(error); };\n    });\n\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._mapLoaded;\n  }\n\n  private getSrcFromConfig(callbackName: string) {\n    const urlBase = this._config.urlPath || this._defaultUrl;\n    const queryParams: {[key: string]: string | Array} = {\n      v: this._config.apiVersion || this._defaultVersion,\n      callback: callbackName,\n      key: this._config.apiKey\n    };\n    const params = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return !Array.isArray(queryParams[k]) ||\n            (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return {key: k, value: i.join(',')};\n        }\n        return {key: k, value: queryParams[k]};\n      })\n      .map((entry: {key: string, value: string}) => `${entry.key}=${entry.value}`)\n      .join('&');\n\n    return `${urlBase}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPixel.html":{"url":"interfaces/IPixel.html","title":"interface - IPixel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPixel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/pixel.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPixel {\n  x: number;\n  y: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPoiObject.html":{"url":"interfaces/IPoiObject.html","title":"interface - IPoiObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPoiObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/amap.place-search.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         ILngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlaceSearchOptions } from '../../interface/place-search-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { SearchResult } from './search-result';\nimport { Bounds } from '../amap.bounds';\nimport { Polygon } from '../overlays/amap.polygon';\n\nexport interface CPlaceSearch {\n  new (opts?: PlaceSearchOptions): PlaceSearch;\n}\n\nexport interface PlaceSearch {\n  search(keyword: string, callback: callbackFn);\n  searchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn);\n  searchInBounds(keyword: string, bounds: Bounds|Polygon, callback: callbackFn);\n  getDetails(POIID: string, callback: callbackFn);\n  setType(type: string);\n  setCityLimit(limit: boolean);\n  setPageIndex(pageIndex: number);\n  setPageSize(setPageSize: number);\n  setCity(city: string);\n  setLang(lang: string);\n  getLang(): string;\n  clear();\n  poiOnAMAP(obj: IPoiObject);\n  detailOnAMAP(obj: IPoiObject);\n}\n\nexport interface IPoiObject {\n  id: string;\n  name: string;\n  location: ILngLat;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/size.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  width: number;\n  height: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Icon.html":{"url":"interfaces/Icon.html","title":"interface - Icon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Icon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.icon.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getImageSize\n                                \n                                \n                                    setImageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.icon.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Size\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setImageSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetImageSize(size: Size)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.icon.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                Size\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Size } from './amap.size';\nimport { IIcon } from '../interface/icon.interface';\n\n// AMap.Icon\nexport interface Icon {\n  getImageSize(): Size;\n  setImageSize(size: Size): void;\n}\n\nexport interface CIcon {\n  new (opts: IIcon): Icon;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/icon/icon.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, pixel: PixelService, size: SizeService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/icon/icon.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: string | Icon | IIcon, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/icon/icon.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            string | Icon | IIcon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string | Icon\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'icon-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/icon/icon.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IIcon } from '../../types/interface';\nimport { AMapClass, Icon } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { SizeService } from '../size/size.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class IconService {\n  TAG = 'icon-service';\n\n  constructor(\n    private logger: LoggerService,\n    private pixel: PixelService,\n    private size: SizeService\n  ) {}\n\n  create(options: string|Icon|IIcon, name?: string): string|Icon {\n    if (typeof options === 'string') {\n      return options;\n    }\n\n    if (!options) {\n      return undefined;\n    }\n\n    if (!(options).size) {\n      return options;\n    }\n\n    let iconOption = options;\n    if (iconOption.size) {\n      iconOption.size = this.size.create(iconOption.size, `${name || 'icon'}.size`);\n    }\n\n    if (iconOption.imageSize) {\n      iconOption.imageSize = this.size.create(iconOption.size, `${name || 'icon'}.imageSize`);\n    }\n\n    if (iconOption.imageOffset) {\n      iconOption.imageOffset = this.pixel.create(iconOption.imageOffset, `${name || 'icon'}.imageOffset`);\n    }\n\n    if (!iconOption.size) {\n      delete iconOption.size;\n    }\n\n    if (!iconOption.imageSize) {\n      delete iconOption.imageSize;\n    }\n\n    if (!iconOption.imageOffset) {\n      delete iconOption.imageOffset;\n    }\n\n    return new AMap.Icon(iconOption);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoWindow.html":{"url":"interfaces/InfoWindow.html","title":"interface - InfoWindow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.info-window.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    getContent\n                                \n                                \n                                    getIsOpen\n                                \n                                \n                                    getPosition\n                                \n                                \n                                    getSize\n                                \n                                \n                                    open\n                                \n                                \n                                    setContent\n                                \n                                \n                                    setPosition\n                                \n                                \n                                    setSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsOpen\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsOpen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Size\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(map: Map, pos?: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContent\n                        \n                        \n                    \n                \n            \n            \n                \nsetContent(content: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetSize(size: Size)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                Size\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\nimport { Map } from './amap.map';\nimport { Size } from './amap.size';\nimport { InfoWindowOptions } from '../interface/info-window-options.interface';\n\nexport interface CInfoWindow {\n  new (opts: InfoWindowOptions): InfoWindow;\n}\n\nexport interface InfoWindow {\n  open(map: Map, pos?: LngLat|number[]): void;\n  close(): void;\n  getIsOpen(): boolean;\n  setContent(content: any): void;\n  getContent(): string;\n  setPosition(lnglat: LngLat|number[]): void;\n  getPosition(): LngLat;\n  setSize(size: Size): void;\n  getSize(): Size;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoWindowOptions.html":{"url":"interfaces/InfoWindowOptions.html","title":"interface - InfoWindowOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoWindowOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/info-window-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoMove\n                                \n                                \n                                            Optional\n                                        closeWhenClickMap\n                                \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        isCustom\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        showShadow\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoMove\n                                    \n                                \n                                \n                                    \n                                        autoMove:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeWhenClickMap\n                                    \n                                \n                                \n                                    \n                                        closeWhenClickMap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCustom\n                                    \n                                \n                                \n                                    \n                                        isCustom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showShadow\n                                    \n                                \n                                \n                                    \n                                        showShadow:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         Size\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Size\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../class/amap.lng-lat';\nimport { Pixel } from '../class/amap.pixel';\nimport { Size } from '../class/amap.size';\n\nexport interface InfoWindowOptions {\n  isCustom?: boolean;\n  autoMove?: boolean;\n  closeWhenClickMap?: boolean;\n  content?: any;\n  size?: Size;\n  offset?: Pixel;\n  position?: LngLat;\n  showShadow?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowService.html":{"url":"injectables/InfoWindowService.html","title":"injectable - InfoWindowService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/info-window/info-window.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                open\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, logger: LoggerService, pixel: PixelService, size: SizeService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(infoWindow: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(infoWindow: InfoWindow, position?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                InfoWindow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'info-window-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InfoWindowOptions, IPixel, ILngLat } from '../../types/interface';\nimport { AMapClass, InfoWindow, Map, Icon, LngLat } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { SizeService } from '../size/size.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class InfoWindowService extends EventBinder {\n  TAG = 'info-window-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private logger: LoggerService,\n    private pixel: PixelService,\n    private size: SizeService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: InfoWindowOptions): Promise {\n    return this._map.then(map => {\n      if (options.offset) {\n        options.offset = this.pixel.create(options.offset, 'offset');\n      }\n\n      if (options.size) {\n        options.size = this.size.create(options.size, 'size');\n      }\n\n      return new AMap.InfoWindow(options);\n    });\n  }\n\n  destroy(infoWindow: Promise): Promise {\n    return infoWindow.then(w => {\n      w.close();\n    });\n  }\n\n  open(infoWindow: InfoWindow, position?: ILngLat): Promise {\n    return this._map.then(map => {\n      infoWindow.open(map, position);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyMap.html":{"url":"classes/KeyMap.html","title":"class - KeyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/key-map.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                delete\n                            \n                            \n                                entries\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                keys\n                            \n                            \n                                set\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyMap\n\n                        \n                    \n                    \n                        \n                            Default value : Object.create(null)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/utils/key-map.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/utils/key-map.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entries\n                        \n                        \n                    \n                \n            \n            \n                \nentries()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            values\n                        \n                        \n                    \n                \n            \n            \n                \nvalues()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/utils/key-map.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        interface IKeyMap {\n  [key: string]: T;\n}\n\nexport class KeyMap {\n  private _map: IKeyMap = Object.create(null);\n  private _size = 0;\n\n  get size() { return this._size; }\n\n  set(key: string, value: T): KeyMap {\n    if (this._map[key] === undefined && value !== undefined) {\n      this._size++;\n    }\n\n    this._map[key] = value;\n    return this;\n  }\n\n  get(key: string) {\n    return this._map[key];\n  }\n\n  delete(key: string) {\n    const value = this._map[key];\n\n    if (value !== undefined) {\n      this._size--;\n    }\n\n    delete this._map[key];\n    return value;\n  }\n\n  has(key: string) {\n    return (this._map[key] !== undefined);\n  }\n\n  clear() {\n    this._map = Object.create(null);\n    this._size = 0;\n  }\n\n  keys() {\n    return Object.keys(this._map);\n  }\n\n  values() {\n    return Object.keys(this._map).map(key => this._map[key]);\n  }\n\n  entries() {\n    return Object.keys(this._map).map(key => [key, this._map[key]]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelService.html":{"url":"injectables/LabelService.html","title":"injectable - LabelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/label/label.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, pixel: PixelService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/label/label.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: ILabel, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/label/label.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ILabel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ILabel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'label-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/label/label.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ILabel } from '../../types/interface';\nimport { AMapClass } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { PixelService } from '../pixel/pixel.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class LabelService {\n  TAG = 'label-service';\n\n  constructor(private logger: LoggerService, private pixel: PixelService) {}\n\n  create(options: ILabel, name?: string): ILabel {\n    if (options) {\n      return {\n        content: options.content,\n        offset: this.pixel.create(options.offset, `${name || 'label'}.offset`)\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LngLat.html":{"url":"interfaces/LngLat.html","title":"interface - LngLat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LngLat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.lng-lat.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Array\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    distance\n                                \n                                \n                                    equals\n                                \n                                \n                                    getLat\n                                \n                                \n                                    getLng\n                                \n                                \n                                    offset\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            distance\n                        \n                        \n                    \n                \n            \n            \n                \ndistance(lnglat: LngLat | Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(lnglat: LngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLat\n                        \n                        \n                    \n                \n            \n            \n                \ngetLat()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLng\n                        \n                        \n                    \n                \n            \n            \n                \ngetLng()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            offset\n                        \n                        \n                    \n                \n            \n            \n                \noffset(w: number, s: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    w\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LngLat\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface LngLat extends Array {\n  offset(w: number, s: number): LngLat;\n  distance(lnglat: LngLat|Array): number;\n  getLng(): number;\n  getLat(): number;\n  equals(lnglat: LngLat): boolean;\n  toString(): string;\n}\n\nexport interface CLngLat {\n  new (lng: number, lat: number): LngLat;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/logger/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                d\n                            \n                            \n                                e\n                            \n                            \n                                i\n                            \n                            \n                                w\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/logger/logger.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            d\n                        \n                        \n                    \n                \n            \n            \n                \nd(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            e\n                        \n                        \n                    \n                \n            \n            \n                \ne(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            i\n                        \n                        \n                    \n                \n            \n            \n                \ni(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            w\n                        \n                        \n                    \n                \n            \n            \n                \nw(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n\n  constructor() { }\n\n  i(tag: string, ...args: any[]) {\n    console.log(`[${tag}]`, ...args);\n  }\n\n  e(tag: string, ...args: any[]) {\n    console.error(`[${tag}]`, ...args);\n  }\n\n  w(tag: string, ...args: any[]) {\n    console.warn(`[${tag}]`, ...args);\n  }\n\n  d(tag: string, ...args: any[]) {\n    // only stub;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapAPILoaderService.html":{"url":"injectables/MapAPILoaderService.html","title":"injectable - MapAPILoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapAPILoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                _defaultUrl\n                            \n                            \n                                    Private\n                                _defaultVersion\n                            \n                            \n                                    Private\n                                _documentRef\n                            \n                            \n                                    Private\n                                _mapLoaded\n                            \n                            \n                                    Private\n                                _windowRef\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSrcFromConfig\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: any, d: DocumentRef, w: WindowRef, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        d\n                                                  \n                                                        \n                                                                        DocumentRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        w\n                                                  \n                                                        \n                                                                        WindowRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSrcFromConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSrcFromConfig(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IMapAPILoaderConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://webapi.amap.com/maps'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.4.11'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _documentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mapLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _windowRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WindowRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'map-api-loader'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\nimport { LoggerService } from '../logger/logger.service';\n\nexport interface IMapAPILoaderConfig {\n  apiKey?: string;\n  apiVersion?: string;\n  urlPath?: string;\n  debug?: boolean;\n}\n\nexport const MAP_API_CONFIG = new InjectionToken('ngx-amap MAP_API_CONFIG');\n\n@Injectable()\nexport class MapAPILoaderService {\n  TAG = 'map-api-loader';\n\n  private _defaultUrl = 'https://webapi.amap.com/maps';\n  private _defaultVersion = '1.4.11';\n  private _config: IMapAPILoaderConfig;\n  private _documentRef: DocumentRef;\n  private _windowRef: WindowRef;\n  private _mapLoaded: Promise;\n\n  constructor(@Inject(MAP_API_CONFIG) config: any,\n              d: DocumentRef,\n              w: WindowRef,\n              private logger: LoggerService) {\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n\n  load() {\n    if (this._mapLoaded) {\n      return this._mapLoaded;\n    }\n    this.logger.d(this.TAG, 'loading AMap api...');\n\n    const callbackName = `ngxAMapAPILoader`;\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.src = this.getSrcFromConfig(callbackName);\n\n    this._mapLoaded = new Promise((resolve: Function, reject: Function) => {\n      (this._windowRef.getNativeWindow())[callbackName] = () => {\n        this.logger.d(this.TAG, 'loading AMap api COMPLETE');\n        resolve();\n      };\n\n      script.onerror = (error: Event) => { reject(error); };\n    });\n\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._mapLoaded;\n  }\n\n  private getSrcFromConfig(callbackName: string) {\n    const urlBase = this._config.urlPath || this._defaultUrl;\n    const queryParams: {[key: string]: string | Array} = {\n      v: this._config.apiVersion || this._defaultVersion,\n      callback: callbackName,\n      key: this._config.apiKey\n    };\n    const params = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return !Array.isArray(queryParams[k]) ||\n            (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return {key: k, value: i.join(',')};\n        }\n        return {key: k, value: queryParams[k]};\n      })\n      .map((entry: {key: string, value: string}) => `${entry.key}=${entry.value}`)\n      .join('&');\n\n    return `${urlBase}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapAPIService.html":{"url":"injectables/MapAPIService.html","title":"injectable - MapAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/map-api/map-api.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _mapPromise\n                            \n                            \n                                    Private\n                                _mapResolver\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindMapEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                destroyMap\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    map\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapAPILoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapAPILoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindMapEvents\n                        \n                        \n                    \n                \n            \n            \n                \nbindMapEvents(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap(el: HTMLDivElement, options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLDivElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyMap\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mapPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mapResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'map-api'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        map\n                    \n                \n\n                \n                    \n                        getmap()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:39\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MapAPILoaderService } from '../map-api-loader/map-api-loader.service';\nimport { MapOptions } from '../../types/interface';\nimport { AMapClass, Map } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class MapAPIService extends EventBinder {\n  TAG = 'map-api';\n  private _map: Map;\n  private _mapPromise: Promise;\n  private _mapResolver: (map?: Map) => void;\n\n  constructor(private loader: MapAPILoaderService, private logger: LoggerService) {\n    super();\n    this._mapPromise = new Promise(resolve => this._mapResolver = resolve);\n  }\n\n  createMap(el: HTMLDivElement, options: MapOptions): Promise {\n    return this.loader.load().then(() => {\n      this._map = new AMap.Map(el, options);\n      this._mapResolver(this._map);\n      this.logger.d(this.TAG, 'new map created');\n      return this._map;\n    });\n  }\n\n  destroyMap() {\n    this._mapPromise.then(map => {\n      map.clearMap();\n      map.destroy();\n    });\n  }\n\n  get map(): Promise {\n    return this._mapPromise;\n  }\n\n  bindMapEvents(event: string): Observable {\n    return this.bindEvent(this._mapPromise, event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapOptions.html":{"url":"interfaces/MapOptions.html","title":"interface - MapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/map-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        animateEnable\n                                \n                                \n                                            Optional\n                                        buildingAnimation\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        crs\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        defaultLayer\n                                \n                                \n                                            Optional\n                                        doubleClickZoom\n                                \n                                \n                                            Optional\n                                        dragEnable\n                                \n                                \n                                            Optional\n                                        expandZoomRange\n                                \n                                \n                                            Optional\n                                        features\n                                \n                                \n                                            Optional\n                                        gridMapForeign\n                                \n                                \n                                            Optional\n                                        indoorMap\n                                \n                                \n                                            Optional\n                                        isHotspot\n                                \n                                \n                                            Optional\n                                        jogEnable\n                                \n                                \n                                            Optional\n                                        keyboardEnable\n                                \n                                \n                                            Optional\n                                        labelzIndex\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        layers\n                                \n                                \n                                            Optional\n                                        mapStyle\n                                \n                                \n                                            Optional\n                                        pitch\n                                \n                                \n                                            Optional\n                                        pitchEnable\n                                \n                                \n                                            Optional\n                                        resizeEnable\n                                \n                                \n                                            Optional\n                                        rotateEnable\n                                \n                                \n                                            Optional\n                                        scrollWheel\n                                \n                                \n                                            Optional\n                                        showBuildingBlock\n                                \n                                \n                                            Optional\n                                        showIndoorMap\n                                \n                                \n                                            Optional\n                                        skyColor\n                                \n                                \n                                            Optional\n                                        touchZoom\n                                \n                                \n                                            Optional\n                                        view\n                                \n                                \n                                            Optional\n                                        viewMode\n                                \n                                \n                                            Optional\n                                        zoom\n                                \n                                \n                                            Optional\n                                        zoomEnable\n                                \n                                \n                                            Optional\n                                        zooms\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animateEnable\n                                    \n                                \n                                \n                                    \n                                        animateEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buildingAnimation\n                                    \n                                \n                                \n                                    \n                                        buildingAnimation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crs\n                                    \n                                \n                                \n                                    \n                                        crs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLayer\n                                    \n                                \n                                \n                                    \n                                        defaultLayer:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        doubleClickZoom\n                                    \n                                \n                                \n                                    \n                                        doubleClickZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dragEnable\n                                    \n                                \n                                \n                                    \n                                        dragEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expandZoomRange\n                                    \n                                \n                                \n                                    \n                                        expandZoomRange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gridMapForeign\n                                    \n                                \n                                \n                                    \n                                        gridMapForeign:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indoorMap\n                                    \n                                \n                                \n                                    \n                                        indoorMap:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isHotspot\n                                    \n                                \n                                \n                                    \n                                        isHotspot:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jogEnable\n                                    \n                                \n                                \n                                    \n                                        jogEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyboardEnable\n                                    \n                                \n                                \n                                    \n                                        keyboardEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelzIndex\n                                    \n                                \n                                \n                                    \n                                        labelzIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapStyle\n                                    \n                                \n                                \n                                    \n                                        mapStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitchEnable\n                                    \n                                \n                                \n                                    \n                                        pitchEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeEnable\n                                    \n                                \n                                \n                                    \n                                        resizeEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotateEnable\n                                    \n                                \n                                \n                                    \n                                        rotateEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollWheel\n                                    \n                                \n                                \n                                    \n                                        scrollWheel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showBuildingBlock\n                                    \n                                \n                                \n                                    \n                                        showBuildingBlock:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showIndoorMap\n                                    \n                                \n                                \n                                    \n                                        showIndoorMap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skyColor\n                                    \n                                \n                                \n                                    \n                                        skyColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touchZoom\n                                    \n                                \n                                \n                                    \n                                        touchZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                    \n                                \n                                \n                                    \n                                        view:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewMode\n                                    \n                                \n                                \n                                    \n                                        viewMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomEnable\n                                    \n                                \n                                \n                                    \n                                        zoomEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zooms\n                                    \n                                \n                                \n                                    \n                                        zooms:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../class/amap.lng-lat';\n\nexport interface MapOptions {\n  view?: any; // TODO: View2D\n  layers?: any[]; // TODO: TileLayer\n  zoom?: number;\n  center?: LngLat;\n  labelzIndex?: number;\n  zooms?: number[];\n  lang?: string;\n  cursor?: string;\n  crs?: string;\n  animateEnable?: boolean;\n  isHotspot?: boolean;\n  defaultLayer?: any; // TODO: TileLayer\n  rotateEnable?: boolean;\n  resizeEnable?: boolean;\n  showIndoorMap?: boolean;\n  indoorMap?: any; // TODO: IndoorMap\n  expandZoomRange?: boolean;\n  dragEnable?: boolean;\n  zoomEnable?: boolean;\n  doubleClickZoom?: boolean;\n  keyboardEnable?: boolean;\n  jogEnable?: boolean;\n  scrollWheel?: boolean;\n  touchZoom?: boolean;\n  mapStyle?: string;\n  features?: string[];\n  showBuildingBlock?: boolean;\n  viewMode?: string;\n  pitch?: number;\n  pitchEnable?: boolean;\n  buildingAnimation?: boolean;\n  skyColor?: string;\n  gridMapForeign?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClusterer.html":{"url":"interfaces/MarkerClusterer.html","title":"interface - MarkerClusterer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerClusterer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.marker-clusterer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addMarker\n                                \n                                \n                                    addMarkers\n                                \n                                \n                                    clearMarkers\n                                \n                                \n                                    getClustersCount\n                                \n                                \n                                    getGridSize\n                                \n                                \n                                    getMap\n                                \n                                \n                                    getMarkers\n                                \n                                \n                                    getMaxZoom\n                                \n                                \n                                    getMinClusterSize\n                                \n                                \n                                    getStyles\n                                \n                                \n                                    isAverageCenter\n                                \n                                \n                                    removeMarker\n                                \n                                \n                                    removeMarkers\n                                \n                                \n                                    setAverageCenter\n                                \n                                \n                                    setGridSize\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setMarkers\n                                \n                                \n                                    setMaxZoom\n                                \n                                \n                                    setMinClusterSize\n                                \n                                \n                                    setStyles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \naddMarker(marker: Marker)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMarkers\n                        \n                        \n                    \n                \n            \n            \n                \naddMarkers(markers: Marker[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    markers\n                                    \n                                                Marker[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nclearMarkers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClustersCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetClustersCount()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGridSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetGridSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMarkers\n                        \n                        \n                    \n                \n            \n            \n                \ngetMarkers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Marker[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMaxZoom\n                        \n                        \n                    \n                \n            \n            \n                \ngetMaxZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMinClusterSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetMinClusterSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStyles\n                        \n                        \n                    \n                \n            \n            \n                \ngetStyles()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ClusterStyle[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAverageCenter\n                        \n                        \n                    \n                \n            \n            \n                \nisAverageCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMarker\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMarker(marker: Marker)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMarkers(markers: Marker[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    markers\n                                    \n                                                Marker[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAverageCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetAverageCenter(averageCenter: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    averageCenter\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGridSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetGridSize(size: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nsetMarkers(markers: Marker[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    markers\n                                    \n                                                Marker[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMaxZoom\n                        \n                        \n                    \n                \n            \n            \n                \nsetMaxZoom(zoom: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoom\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMinClusterSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetMinClusterSize(size: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStyles\n                        \n                        \n                    \n                \n            \n            \n                \nsetStyles(styles: ClusterStyle[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    styles\n                                    \n                                                ClusterStyle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MarkerClustererOptions } from '../interface/marker-cluster-options.interface';\nimport { ClusterStyle } from './cluster-style';\nimport { Marker } from './overlays/amap.marker';\nimport { Map } from './amap.map';\n\nexport interface CMarkerClusterer {\n  new (map: Map, markers: Marker[], opts: MarkerClustererOptions): MarkerClusterer;\n}\n\nexport interface MarkerClusterer {\n  addMarker(marker: Marker);\n  removeMarker(marker: Marker);\n  getClustersCount(): number;\n  getGridSize(): number;\n  getMaxZoom(): number;\n  getMinClusterSize(): number;\n  getStyles(): ClusterStyle[];\n  setGridSize(size: number);\n  setMaxZoom(zoom: number);\n  setMinClusterSize(size: number);\n  setStyles(styles: ClusterStyle[]);\n  clearMarkers();\n  setMap(map: Map);\n  setMarkers(markers: Marker[]);\n  getMap(): Map;\n  getMarkers(): Marker[];\n  addMarkers(markers: Marker[]);\n  removeMarkers(markers: Marker[]);\n  isAverageCenter(): boolean;\n  setAverageCenter(averageCenter: boolean);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClustererOptions.html":{"url":"interfaces/MarkerClustererOptions.html","title":"interface - MarkerClustererOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerClustererOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/marker-cluster-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        averageCenter\n                                \n                                \n                                            Optional\n                                        gridSize\n                                \n                                \n                                            Optional\n                                        maxZoom\n                                \n                                \n                                            Optional\n                                        minClusterSize\n                                \n                                \n                                            Optional\n                                        renderCluserMarker\n                                \n                                \n                                            Optional\n                                        styles\n                                \n                                \n                                        zoomOnClick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageCenter\n                                    \n                                \n                                \n                                    \n                                        averageCenter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gridSize\n                                    \n                                \n                                \n                                    \n                                        gridSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxZoom\n                                    \n                                \n                                \n                                    \n                                        maxZoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minClusterSize\n                                    \n                                \n                                \n                                    \n                                        minClusterSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderCluserMarker\n                                    \n                                \n                                \n                                    \n                                        renderCluserMarker:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                    \n                                \n                                \n                                    \n                                        styles:     IClusterStyle[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IClusterStyle[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomOnClick\n                                    \n                                \n                                \n                                    \n                                        zoomOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Marker } from '../class/overlays/amap.marker';\nimport { IClusterStyle } from './cluster-style.interface';\n\nexport interface MarkerClustererOptions {\n  gridSize?: number;\n  minClusterSize?: number;\n  maxZoom?: number;\n  averageCenter?: boolean;\n  styles?: IClusterStyle[];\n  renderCluserMarker?: (object: RenderObject) => void;\n  zoomOnClick: boolean;\n}\n\nexport interface RenderObject {\n  count: number;\n  markers: Marker[];\n  marker: Marker;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerClustererService.html":{"url":"injectables/MarkerClustererService.html","title":"injectable - MarkerClustererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerClustererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createStyle\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, logger: LoggerService, pixel: PixelService, size: SizeService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: MarkerClustererOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerClustererOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStyle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStyle(style: IClusterStyle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    style\n                                    \n                                                IClusterStyle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ClusterStyle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(cluster: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cluster\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'marker-clusterer-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MarkerClustererOptions, IPixel, ISize, IClusterStyle } from '../../types/interface';\nimport { AMapClass, MarkerClusterer, Map, ClusterStyle } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { SizeService } from '../size/size.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class MarkerClustererService extends EventBinder {\n  TAG = 'marker-clusterer-service';\n  private _map: Promise;\n  private _plugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private logger: LoggerService,\n    private pixel: PixelService,\n    private size: SizeService,\n    private plugins: PluginLoaderService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: MarkerClustererOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.MarkerClusterer');\n    }\n\n    return this._plugin.then(() => this._map)\n      .then(map => {\n        if (options.styles) {\n          options.styles = options.styles.map(style => this.createStyle(style));\n        }\n        return new AMap.MarkerClusterer(map, [], options);\n      });\n  }\n\n  destroy(cluster: Promise) {\n    return cluster.then(c => {\n      c.clearMarkers();\n      c.setMap(null);\n    });\n  }\n\n  createStyle(style: IClusterStyle): ClusterStyle {\n    if (style.size) {\n      style.size = this.size.create(style.size, 'size');\n    }\n\n    if (style.offset) {\n      style.offset = this.pixel.create(style.offset, 'offset');\n      if (!style.offset) { delete style.offset; }\n    }\n\n    if (style.imageOffset) {\n      style.imageOffset = this.pixel.create(style.imageOffset, 'imageOffset');\n      if (!style.imageOffset) { delete style.imageOffset; }\n    }\n\n    return style;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerOptions.html":{"url":"interfaces/MarkerOptions.html","title":"interface - MarkerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/marker-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        angle\n                                \n                                \n                                            Optional\n                                        autoRotation\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        clickable\n                                \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        raiseOnDrag\n                                \n                                \n                                            Optional\n                                        shadow\n                                \n                                \n                                            Optional\n                                        shape\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        topWhenClick\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angle\n                                    \n                                \n                                \n                                    \n                                        angle:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoRotation\n                                    \n                                \n                                \n                                    \n                                        autoRotation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string | Icon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | Icon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         ILabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raiseOnDrag\n                                    \n                                \n                                \n                                    \n                                        raiseOnDrag:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shadow\n                                    \n                                \n                                \n                                    \n                                        shadow:         Icon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Icon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shape\n                                    \n                                \n                                \n                                    \n                                        shape:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topWhenClick\n                                    \n                                \n                                \n                                    \n                                        topWhenClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ILabel } from '../label.interface';\nimport { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\nimport { Icon } from '../../class/amap.icon';\nimport { Pixel } from '../../class/amap.pixel';\n\nexport interface MarkerOptions {\n  map?: Map;\n  position?: LngLat;\n  offset?: Pixel;\n  icon?: string|Icon;\n  content?: any;\n  topWhenClick?: boolean;\n  bubble?: boolean;\n  draggable?: boolean;\n  raiseOnDrag?: boolean;\n  cursor?: string;\n  visible?: boolean;\n  zIndex?: number;\n  angle?: number;\n  autoRotation?: boolean;\n  shadow?: Icon;\n  title?: string;\n  clickable?: boolean;\n  shape?: any;  // TODO: MarkerShape\n  extData?: any;\n  label?: ILabel;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerService.html":{"url":"injectables/MarkerService.html","title":"injectable - MarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/marker/marker.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, logger: LoggerService, pixel: PixelService, icon: IconService, label: LabelService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/marker/marker.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        LabelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: MarkerOptions, addToMap)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    addToMap\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(marker: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'marker-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MarkerOptions, IPixel } from '../../types/interface';\nimport { AMapClass, Marker, Map, Icon } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { IconService } from '../icon/icon.service';\nimport { LabelService } from '../label/label.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class MarkerService extends EventBinder {\n  TAG = 'marker-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private logger: LoggerService,\n    private pixel: PixelService,\n    private icon: IconService,\n    private label: LabelService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: MarkerOptions, addToMap = true): Promise {\n    return this._map.then(map => {\n      if (options.offset) {\n        options.offset = this.pixel.create(options.offset, 'offset');\n      }\n\n      if (options.icon) {\n        options.icon = this.icon.create(options.icon);\n      }\n\n      if (options.shadow) {\n        options.shadow = this.icon.create(options.shadow, 'shadow');\n      }\n\n      if (options.label) {\n        options.label = this.label.create(options.label);\n      }\n\n      if (!options.offset)  { delete options.offset; }\n      if (!options.icon)    { delete options.icon; }\n      if (!options.shadow)  { delete options.shadow; }\n      if (!options.label)   { delete options.label; }\n\n      if (addToMap) {\n        options.map = map;\n      }\n      return new AMap.Marker(options);\n    });\n  }\n\n  destroy(marker: Promise): Promise {\n    return marker.then(m => {\n      m.setMap(null);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseTool.html":{"url":"interfaces/MouseTool.html","title":"interface - MouseTool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseTool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.mouse-tool.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    circle\n                                \n                                \n                                    close\n                                \n                                \n                                    marker\n                                \n                                \n                                    measureArea\n                                \n                                \n                                    polygon\n                                \n                                \n                                    polyline\n                                \n                                \n                                    rectangle\n                                \n                                \n                                    rectZoomIn\n                                \n                                \n                                    rectZoomOut\n                                \n                                \n                                    rule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            circle\n                        \n                        \n                    \n                \n            \n            \n                \ncircle(options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(clear: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clear\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            marker\n                        \n                        \n                    \n                \n            \n            \n                \nmarker(options: MarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            measureArea\n                        \n                        \n                    \n                \n            \n            \n                \nmeasureArea(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polygon\n                        \n                        \n                    \n                \n            \n            \n                \npolygon(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polyline\n                        \n                        \n                    \n                \n            \n            \n                \npolyline(options: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectangle\n                        \n                        \n                    \n                \n            \n            \n                \nrectangle(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomIn\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomIn(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomOut\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomOut(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rule\n                        \n                        \n                    \n                \n            \n            \n                \nrule(options: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { CircleOptions } from '../interface/overlays/circle-options.interface';\nimport { MarkerOptions } from '../interface/overlays/marker-options.interface';\nimport { PolygonOptions } from '../interface/overlays/polygon-options.interface';\nimport { PolylineOptions } from '../interface/overlays/polyline-options.interface';\n\nexport interface CMouseTool {\n  new (map: Map): MouseTool;\n}\n\nexport interface MouseTool {\n  marker(options: MarkerOptions);\n  polyline(options: PolylineOptions);\n  polygon(options: PolygonOptions);\n  rectangle(options: PolygonOptions);\n  circle(options: CircleOptions);\n  rule(options: PolylineOptions);\n  measureArea(options: PolygonOptions);\n  rectZoomIn(options: PolygonOptions);\n  rectZoomOut(options: PolygonOptions);\n  close(clear: boolean);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxAmapModule.html":{"url":"modules/NgxAmapModule.html","title":"module - NgxAmapModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxAmapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxAmapModule\n\n\n\ncluster_NgxAmapModule_declarations\n\n\n\ncluster_NgxAmapModule_exports\n\n\n\n\nAmapAutocompleteDirective\n\nAmapAutocompleteDirective\n\n\n\nNgxAmapModule\n\nNgxAmapModule\n\nNgxAmapModule -->\n\nAmapAutocompleteDirective->NgxAmapModule\n\n\n\n\n\nAmapBezierCurveDirective\n\nAmapBezierCurveDirective\n\nNgxAmapModule -->\n\nAmapBezierCurveDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleDirective\n\nAmapCircleDirective\n\nNgxAmapModule -->\n\nAmapCircleDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleMarkerDirective\n\nAmapCircleMarkerDirective\n\nNgxAmapModule -->\n\nAmapCircleMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapEllipseDirective\n\nAmapEllipseDirective\n\nNgxAmapModule -->\n\nAmapEllipseDirective->NgxAmapModule\n\n\n\n\n\nAmapHeatmapDirective\n\nAmapHeatmapDirective\n\nNgxAmapModule -->\n\nAmapHeatmapDirective->NgxAmapModule\n\n\n\n\n\nAmapInfoWindowComponent\n\nAmapInfoWindowComponent\n\nNgxAmapModule -->\n\nAmapInfoWindowComponent->NgxAmapModule\n\n\n\n\n\nAmapMarkerClustererDirective\n\nAmapMarkerClustererDirective\n\nNgxAmapModule -->\n\nAmapMarkerClustererDirective->NgxAmapModule\n\n\n\n\n\nAmapMarkerDirective\n\nAmapMarkerDirective\n\nNgxAmapModule -->\n\nAmapMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapPolygonDirective\n\nAmapPolygonDirective\n\nNgxAmapModule -->\n\nAmapPolygonDirective->NgxAmapModule\n\n\n\n\n\nAmapPolylineDirective\n\nAmapPolylineDirective\n\nNgxAmapModule -->\n\nAmapPolylineDirective->NgxAmapModule\n\n\n\n\n\nAmapRectangleDirective\n\nAmapRectangleDirective\n\nNgxAmapModule -->\n\nAmapRectangleDirective->NgxAmapModule\n\n\n\n\n\nAmapTextDirective\n\nAmapTextDirective\n\nNgxAmapModule -->\n\nAmapTextDirective->NgxAmapModule\n\n\n\n\n\nAmapToolBarDirective\n\nAmapToolBarDirective\n\nNgxAmapModule -->\n\nAmapToolBarDirective->NgxAmapModule\n\n\n\n\n\nNgxAmapComponent\n\nNgxAmapComponent\n\nNgxAmapModule -->\n\nNgxAmapComponent->NgxAmapModule\n\n\n\n\n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective  -->\n\nNgxAmapModule->AmapAutocompleteDirective \n\n\n\n\n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective  -->\n\nNgxAmapModule->AmapBezierCurveDirective \n\n\n\n\n\nAmapCircleDirective \n\nAmapCircleDirective \n\nAmapCircleDirective  -->\n\nNgxAmapModule->AmapCircleDirective \n\n\n\n\n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective  -->\n\nNgxAmapModule->AmapCircleMarkerDirective \n\n\n\n\n\nAmapEllipseDirective \n\nAmapEllipseDirective \n\nAmapEllipseDirective  -->\n\nNgxAmapModule->AmapEllipseDirective \n\n\n\n\n\nAmapHeatmapDirective \n\nAmapHeatmapDirective \n\nAmapHeatmapDirective  -->\n\nNgxAmapModule->AmapHeatmapDirective \n\n\n\n\n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent  -->\n\nNgxAmapModule->AmapInfoWindowComponent \n\n\n\n\n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective  -->\n\nNgxAmapModule->AmapMarkerClustererDirective \n\n\n\n\n\nAmapMarkerDirective \n\nAmapMarkerDirective \n\nAmapMarkerDirective  -->\n\nNgxAmapModule->AmapMarkerDirective \n\n\n\n\n\nAmapPolygonDirective \n\nAmapPolygonDirective \n\nAmapPolygonDirective  -->\n\nNgxAmapModule->AmapPolygonDirective \n\n\n\n\n\nAmapPolylineDirective \n\nAmapPolylineDirective \n\nAmapPolylineDirective  -->\n\nNgxAmapModule->AmapPolylineDirective \n\n\n\n\n\nAmapRectangleDirective \n\nAmapRectangleDirective \n\nAmapRectangleDirective  -->\n\nNgxAmapModule->AmapRectangleDirective \n\n\n\n\n\nAmapTextDirective \n\nAmapTextDirective \n\nAmapTextDirective  -->\n\nNgxAmapModule->AmapTextDirective \n\n\n\n\n\nAmapToolBarDirective \n\nAmapToolBarDirective \n\nAmapToolBarDirective  -->\n\nNgxAmapModule->AmapToolBarDirective \n\n\n\n\n\nNgxAmapComponent \n\nNgxAmapComponent \n\nNgxAmapComponent  -->\n\nNgxAmapModule->NgxAmapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-amap/src/ngx-amap.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmapAutocompleteDirective\n                        \n                        \n                            AmapBezierCurveDirective\n                        \n                        \n                            AmapCircleDirective\n                        \n                        \n                            AmapCircleMarkerDirective\n                        \n                        \n                            AmapEllipseDirective\n                        \n                        \n                            AmapHeatmapDirective\n                        \n                        \n                            AmapInfoWindowComponent\n                        \n                        \n                            AmapMarkerClustererDirective\n                        \n                        \n                            AmapMarkerDirective\n                        \n                        \n                            AmapPolygonDirective\n                        \n                        \n                            AmapPolylineDirective\n                        \n                        \n                            AmapRectangleDirective\n                        \n                        \n                            AmapTextDirective\n                        \n                        \n                            AmapToolBarDirective\n                        \n                        \n                            NgxAmapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmapAutocompleteDirective\n                        \n                        \n                            AmapBezierCurveDirective\n                        \n                        \n                            AmapCircleDirective\n                        \n                        \n                            AmapCircleMarkerDirective\n                        \n                        \n                            AmapEllipseDirective\n                        \n                        \n                            AmapHeatmapDirective\n                        \n                        \n                            AmapInfoWindowComponent\n                        \n                        \n                            AmapMarkerClustererDirective\n                        \n                        \n                            AmapMarkerDirective\n                        \n                        \n                            AmapPolygonDirective\n                        \n                        \n                            AmapPolylineDirective\n                        \n                        \n                            AmapRectangleDirective\n                        \n                        \n                            AmapTextDirective\n                        \n                        \n                            AmapToolBarDirective\n                        \n                        \n                            NgxAmapComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(mapAPILoaderConfig?: IMapAPILoaderConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/ngx-amap.module.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapAPILoaderConfig\n                                    \n                                                IMapAPILoaderConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MapAPILoaderService, MAP_API_CONFIG, IMapAPILoaderConfig } from './services/map-api-loader/map-api-loader.service';\nimport { LoggerService } from './services/logger/logger.service';\nimport { DebugLoggerService } from './services/logger/debug-logger.service';\nimport { WindowRef, DocumentRef } from './utils/browser-globals';\nimport { NgxAmapComponent } from './components/ngx-amap/ngx-amap.component';\nimport { AmapMarkerDirective } from './directives/amap-marker/amap-marker.directive';\nimport { AmapInfoWindowComponent } from './components/amap-info-window/amap-info-window.component';\nimport { AmapPolylineDirective } from './directives/amap-polyline/amap-polyline.directive';\nimport { AmapPolygonDirective } from './directives/amap-polygon/amap-polygon.directive';\nimport { AmapToolBarDirective } from './directives/amap-toolbar/amap-toolbar.directive';\nimport { AmapMarkerClustererDirective } from './directives/amap-marker-clusterer/amap-marker-clusterer.directive';\nimport { PixelService } from './services/pixel/pixel.service';\nimport { SizeService } from './services/size/size.service';\nimport { IconService } from './services/icon/icon.service';\nimport { LabelService } from './services/label/label.service';\nimport { AmapGeocoderService, AmapGeocoderWrapper } from './services/amap-geocoder/amap-geocoder.service';\nimport { PluginLoaderService } from './services/plugin-loader/plugin-loader.service';\nimport { AmapAutocompleteService, AmapAutocompleteWrapper } from './services/amap-autocomplete/amap-autocomplete.service';\nimport { AmapAutocompleteDirective } from './directives/amap-autocomplete/amap-autocomplete.directive';\nimport { AmapPlaceSearchService, AmapPlaceSearchWrapper } from './services/amap-place-search/amap-place-search.service';\nimport { AmapDistrictSearchService, AmapDistrictSearchWrapper } from './services/amap-district-search/amap-district-search.service';\nimport { AmapCircleDirective } from './directives/amap-circle/amap-circle.directive';\nimport { AmapCircleMarkerDirective } from './directives/amap-circle-marker/amap-circle-marker.directive';\nimport { AmapMouseToolService, AmapMouseToolWrapper } from './services/amap-mouse-tool/amap-mouse-tool.service';\nimport { AmapTextDirective } from './directives/amap-text/amap-text.directive';\nimport { AmapBezierCurveDirective } from './directives/amap-bezier-curve/amap-bezier-curve.directive';\nimport { AmapEllipseDirective } from './directives/amap-ellipse/amap-ellipse.directive';\nimport { AmapRectangleDirective } from './directives/amap-rectangle/amap-rectangle.directive';\nimport { AmapHeatmapDirective } from './directives/amap-heatmap/amap-heatmap.directive';\nimport { AmapDrivingService, AmapDrivingWrapper } from './services/amap-driving/amap-driving.service';\nimport { AmapTruckDrivingService, AmapTruckDrivingWrapper } from './services/amap-truck-driving/amap-truck-driving.service';\nimport { AmapTransferService, AmapTransferWrapper } from './services/amap-transfer/amap-transfer.service';\nimport { AmapWalkingService, AmapWalkingWrapper } from './services/amap-walking/amap-walking.service';\nimport { AmapRidingService, AmapRidingWrapper } from './services/amap-riding/amap-riding.service';\n\n@NgModule({\n  declarations: [\n    NgxAmapComponent,\n    AmapMarkerDirective,\n    AmapInfoWindowComponent,\n    AmapPolylineDirective,\n    AmapToolBarDirective,\n    AmapMarkerClustererDirective,\n    AmapAutocompleteDirective,\n    AmapCircleDirective,\n    AmapCircleMarkerDirective,\n    AmapPolygonDirective,\n    AmapTextDirective,\n    AmapBezierCurveDirective,\n    AmapEllipseDirective,\n    AmapRectangleDirective,\n    AmapHeatmapDirective\n  ],\n  exports: [\n    NgxAmapComponent,\n    AmapMarkerDirective,\n    AmapInfoWindowComponent,\n    AmapPolylineDirective,\n    AmapToolBarDirective,\n    AmapMarkerClustererDirective,\n    AmapAutocompleteDirective,\n    AmapCircleDirective,\n    AmapCircleMarkerDirective,\n    AmapPolygonDirective,\n    AmapTextDirective,\n    AmapBezierCurveDirective,\n    AmapEllipseDirective,\n    AmapRectangleDirective,\n    AmapHeatmapDirective\n  ]\n})\nexport class NgxAmapModule {\n  static forRoot(mapAPILoaderConfig?: IMapAPILoaderConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxAmapModule,\n      providers: [\n        WindowRef,\n        DocumentRef,\n        MapAPILoaderService,\n        { provide: MAP_API_CONFIG, useValue: mapAPILoaderConfig },\n        { provide: LoggerService, useClass: mapAPILoaderConfig.debug ? DebugLoggerService : LoggerService },\n        PixelService,\n        SizeService,\n        IconService,\n        LabelService,\n        AmapGeocoderService,\n        PluginLoaderService,\n        AmapAutocompleteService,\n        AmapMouseToolService,\n        AmapPlaceSearchService,\n        AmapDistrictSearchService,\n        AmapDrivingService,\n        AmapTransferService,\n        AmapWalkingService,\n        AmapRidingService,\n        AmapTruckDrivingService\n      ]\n    };\n  }\n}\n\nexport {\n  NgxAmapComponent,\n  AmapMarkerDirective,\n  AmapInfoWindowComponent,\n  AmapPolylineDirective,\n  AmapToolBarDirective,\n  AmapMarkerClustererDirective,\n  AmapGeocoderService,\n  AmapGeocoderWrapper,\n  AmapAutocompleteService,\n  AmapAutocompleteWrapper,\n  AmapAutocompleteDirective,\n  AmapPlaceSearchService,\n  AmapPlaceSearchWrapper,\n  AmapDistrictSearchService,\n  AmapDistrictSearchWrapper,\n  AmapMouseToolService,\n  AmapMouseToolWrapper,\n  AmapCircleDirective,\n  AmapCircleMarkerDirective,\n  AmapPolygonDirective,\n  AmapTextDirective,\n  AmapBezierCurveDirective,\n  AmapEllipseDirective,\n  AmapRectangleDirective,\n  AmapHeatmapDirective,\n  AmapDrivingService,\n  AmapDrivingWrapper,\n  AmapTransferService,\n  AmapTransferWrapper,\n  AmapWalkingService,\n  AmapWalkingWrapper,\n  AmapRidingService,\n  AmapRidingWrapper,\n  AmapTruckDrivingService,\n  AmapTruckDrivingWrapper\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/photo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Photo {\n  title: string;\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pixel.html":{"url":"interfaces/Pixel.html","title":"interface - Pixel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pixel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.pixel.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IPixel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    equals\n                                \n                                \n                                    getX\n                                \n                                \n                                    getY\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(point: Pixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                Pixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getX\n                        \n                        \n                    \n                \n            \n            \n                \ngetX()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getY\n                        \n                        \n                    \n                \n            \n            \n                \ngetY()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPixel } from '../interface/pixel.interface';\n\n// AMap.Pixel\nexport interface Pixel extends IPixel {\n  getX(): number;\n  getY(): number;\n  equals(point: Pixel): boolean;\n  toString(): string;\n}\n\nexport interface CPixel {\n  new (x: number, y: number): Pixel;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PixelService.html":{"url":"injectables/PixelService.html","title":"injectable - PixelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PixelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/pixel/pixel.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: IPixel, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                IPixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Pixel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \nverify(pixel: IPixel, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pixel\n                                    \n                                                IPixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pixel-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPixel } from '../../types/interface';\nimport { AMapClass, Pixel } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PixelService {\n  TAG = 'pixel-service';\n\n  constructor(private logger: LoggerService) {}\n\n  create(options: IPixel, name?: string): Pixel {\n    if (this.verify(options, name)) {\n      return new AMap.Pixel(options.x, options.y);\n    } else {\n      return undefined;\n    }\n  }\n\n  verify(pixel: IPixel, name?: string) {\n    if (typeof pixel.x !== 'number' || typeof pixel.y !== 'number') {\n      this.logger.e(`${name || 'pixel'} should have type {x: number, y: number}`);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaceSearch.html":{"url":"interfaces/PlaceSearch.html","title":"interface - PlaceSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlaceSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/amap.place-search.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    detailOnAMAP\n                                \n                                \n                                    getDetails\n                                \n                                \n                                    getLang\n                                \n                                \n                                    poiOnAMAP\n                                \n                                \n                                    search\n                                \n                                \n                                    searchInBounds\n                                \n                                \n                                    searchNearBy\n                                \n                                \n                                    setCity\n                                \n                                \n                                    setCityLimit\n                                \n                                \n                                    setLang\n                                \n                                \n                                    setPageIndex\n                                \n                                \n                                    setPageSize\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detailOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \ndetailOnAMAP(obj: IPoiObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                IPoiObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetDetails(POIID: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    POIID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLang\n                        \n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            poiOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \npoiOnAMAP(obj: IPoiObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                IPoiObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchInBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsearchInBounds(keyword: string, bounds: Bounds | Polygon, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bounds\n                                    \n                                            Bounds | Polygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchNearBy\n                        \n                        \n                    \n                \n            \n            \n                \nsearchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    center\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLang\n                        \n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageIndex(pageIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageSize(setPageSize: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    setPageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PlaceSearchOptions } from '../../interface/place-search-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { SearchResult } from './search-result';\nimport { Bounds } from '../amap.bounds';\nimport { Polygon } from '../overlays/amap.polygon';\n\nexport interface CPlaceSearch {\n  new (opts?: PlaceSearchOptions): PlaceSearch;\n}\n\nexport interface PlaceSearch {\n  search(keyword: string, callback: callbackFn);\n  searchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn);\n  searchInBounds(keyword: string, bounds: Bounds|Polygon, callback: callbackFn);\n  getDetails(POIID: string, callback: callbackFn);\n  setType(type: string);\n  setCityLimit(limit: boolean);\n  setPageIndex(pageIndex: number);\n  setPageSize(setPageSize: number);\n  setCity(city: string);\n  setLang(lang: string);\n  getLang(): string;\n  clear();\n  poiOnAMAP(obj: IPoiObject);\n  detailOnAMAP(obj: IPoiObject);\n}\n\nexport interface IPoiObject {\n  id: string;\n  name: string;\n  location: ILngLat;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaceSearchOptions.html":{"url":"interfaces/PlaceSearchOptions.html","title":"interface - PlaceSearchOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlaceSearchOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/place-search-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        citylimit\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        pageIndex\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        renderStyle\n                                \n                                \n                                            Optional\n                                        showCover\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citylimit\n                                    \n                                \n                                \n                                    \n                                        citylimit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageIndex\n                                    \n                                \n                                \n                                    \n                                        pageIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:     string | HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderStyle\n                                    \n                                \n                                \n                                    \n                                        renderStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCover\n                                    \n                                \n                                \n                                    \n                                        showCover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../class/amap.map';\n\nexport interface PlaceSearchOptions {\n  city?: string;\n  citylimit?: boolean;\n  children?: number;\n  type?: string;\n  lang?: string;\n  pageSize?: number;\n  pageIndex?: number;\n  extensions?: string;\n  map?: Map;\n  panel?: string|HTMLElement;\n  showCover?: boolean;\n  renderStyle?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLoaderService.html":{"url":"injectables/PluginLoaderService.html","title":"injectable - PluginLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapAPILoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapAPILoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'plugin-loader'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPILoaderService } from '../map-api-loader/map-api-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PluginLoaderService {\n  TAG = 'plugin-loader';\n\n  constructor(private loader: MapAPILoaderService, private logger: LoggerService) {}\n\n  load(name: string): Promise {\n    this.logger.d(this.TAG, 'loading plugin:', name);\n\n    return this.loader.load().then(() => {\n      return new Promise(resolve => {\n        this.logger.d(this.TAG, 'loading plugin:', name, 'COMPLETE');\n        AMap.plugin(name, () => resolve());\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/poi.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        address\n                                \n                                \n                                        adname\n                                \n                                \n                                        cinema\n                                \n                                \n                                        citycode\n                                \n                                \n                                        cityname\n                                \n                                \n                                        deep_type\n                                \n                                \n                                        dining\n                                \n                                \n                                        discount\n                                \n                                \n                                        discounts\n                                \n                                \n                                        distance\n                                \n                                \n                                        email\n                                \n                                \n                                        entr_location\n                                \n                                \n                                        exit_location\n                                \n                                \n                                        groupbuy\n                                \n                                \n                                        groupbuys\n                                \n                                \n                                        hotel\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                                \n                                        pcode\n                                \n                                \n                                        pname\n                                \n                                \n                                        postcode\n                                \n                                \n                                        scenic\n                                \n                                \n                                        tel\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adname\n                                    \n                                \n                                \n                                    \n                                        adname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cinema\n                                    \n                                \n                                \n                                    \n                                        cinema:         Cinema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cinema\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cityname\n                                    \n                                \n                                \n                                    \n                                        cityname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deep_type\n                                    \n                                \n                                \n                                    \n                                        deep_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dining\n                                    \n                                \n                                \n                                    \n                                        dining:         Dining\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Dining\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                    \n                                \n                                \n                                    \n                                        discount:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discounts\n                                    \n                                \n                                \n                                    \n                                        discounts:         Discount[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Discount[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entr_location\n                                    \n                                \n                                \n                                    \n                                        entr_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exit_location\n                                    \n                                \n                                \n                                    \n                                        exit_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupbuy\n                                    \n                                \n                                \n                                    \n                                        groupbuy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupbuys\n                                    \n                                \n                                \n                                    \n                                        groupbuys:         Groupbuy[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Groupbuy[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hotel\n                                    \n                                \n                                \n                                    \n                                        hotel:         Hotel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Hotel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pcode\n                                    \n                                \n                                \n                                    \n                                        pcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pname\n                                    \n                                \n                                \n                                    \n                                        pname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                    \n                                \n                                \n                                    \n                                        postcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenic\n                                    \n                                \n                                \n                                    \n                                        scenic:         Scenic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Scenic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tel\n                                    \n                                \n                                \n                                    \n                                        tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Discount } from './discount';\nimport { Groupbuy } from './groupbuy';\nimport { Dining } from './dining';\nimport { Hotel } from './hotel';\nimport { Cinema } from './cinema';\nimport { Scenic } from './scenic';\n\nexport interface Poi {\n  // basic:\n  id: string;\n  name: string;\n  type: string;\n  location: LngLat;\n  address: string;\n  distance: number;\n  tel: string;\n\n  // detail:\n  website: string;\n  pcode: string;\n  citycode: string;\n  adcode: string;\n  postcode: string;\n  pname: string;\n  cityname: string;\n  adname: string;\n  email: string;\n  entr_location: LngLat;\n  exit_location: LngLat;\n  groupbuy: boolean;\n  discount: boolean;\n\n  // deep:\n  groupbuys: Groupbuy[];\n  discounts: Discount[];\n  deep_type: string;\n  dining: Dining;\n  hotel: Hotel;\n  cinema: Cinema;\n  scenic: Scenic;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PoiList.html":{"url":"interfaces/PoiList.html","title":"interface - PoiList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PoiList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/poi-list.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        pageIndex\n                                \n                                \n                                        pageSize\n                                \n                                \n                                        pois\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageIndex\n                                    \n                                \n                                \n                                    \n                                        pageIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Poi } from './poi';\n\nexport interface PoiList {\n  pois: Poi[];\n  pageIndex: number;\n  pageSize: number;\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Polygon.html":{"url":"interfaces/Polygon.html","title":"interface - Polygon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Polygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polygon.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getArea\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getPath\n                                \n                                \n                                    hide\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setPath\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArea\n                        \n                        \n                    \n                \n            \n            \n                \ngetArea()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PolygonOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetPath()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(path: PolygonPath)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                PolygonPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { PolygonOptions, ILngLat } from '../../interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\n\nexport interface CPolygon {\n  new (opts: PolygonOptions): Polygon;\n}\n\nexport type PolygonPath = Array|Array>|Array|Array>;\n\nexport interface Polygon {\n  setPath(path: PolygonPath): void;\n  getPath(): number[][];\n  setOptions(opt: PolygonOptions): void;\n  getOptions(): PolygonOptions;\n  getBounds(): Bounds;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PolygonOptions.html":{"url":"interfaces/PolygonOptions.html","title":"interface - PolygonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PolygonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/polygon-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         PolygonPath\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PolygonPath\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { PolygonPath } from '../../class/overlays/amap.polygon';\n\nexport interface PolygonOptions {\n  map?: Map;\n  zIndex?: number;\n  path?: PolygonPath;\n  bubble?: boolean;\n  cursor?: string;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  extData?: any;\n  draggable?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolygonService.html":{"url":"injectables/PolygonService.html","title":"injectable - PolygonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolygonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/polygon/polygon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(p: Polygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Polygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(polygon: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'polygon-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Polygon, Map, PolyEditor} from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { PolygonOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PolygonService extends EventBinder {\n  TAG = 'polygon-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n    private logger: LoggerService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: PolygonOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Polygon(options);\n    });\n  }\n\n  destroy(polygon: Promise): Promise {\n    return polygon.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.PolyEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(p: Polygon): Promise {\n    return this._map.then(map => new AMap.PolyEditor(map, p));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Polyline.html":{"url":"interfaces/Polyline.html","title":"interface - Polyline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Polyline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polyline.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getLength\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getPath\n                                \n                                \n                                    hide\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setPath\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetLength()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PolylineOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetPath()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(path: number[][])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { PolylineOptions } from '../../interface/overlays/polyline-options.interface';\n\nexport interface CPolyline {\n  new (opts: PolylineOptions): Polyline;\n}\n\nexport interface Polyline {\n  setPath(path: number[][]): void;\n  getPath(): number[][];\n  setOptions(opt: PolylineOptions): void;\n  getOptions(): PolylineOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PolylineOptions.html":{"url":"interfaces/PolylineOptions.html","title":"interface - PolylineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PolylineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/polyline-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        borderWeight\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        geodesic\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        lineJoin\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        showDir\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        borderWeight\n                                    \n                                \n                                \n                                    \n                                        borderWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geodesic\n                                    \n                                \n                                \n                                    \n                                        geodesic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineJoin\n                                    \n                                \n                                \n                                    \n                                        lineJoin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDir\n                                    \n                                \n                                \n                                    \n                                        showDir:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface PolylineOptions {\n  map?: Map;\n  zIndex?: number;\n  bubble?: boolean;\n  geodesic?: boolean;\n  isOutline?: boolean;\n  borderWeight?: number;\n  outlineColor?: string;\n  path?: number[][];\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  lineJoin?: string;\n  extData?: any;\n  showDir?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolylineService.html":{"url":"injectables/PolylineService.html","title":"injectable - PolylineService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolylineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/polyline/polyline.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(p: Polyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Polyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(polyline: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polyline\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'polyline-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Polyline, Map, PolyEditor } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { PolylineOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PolylineService extends EventBinder {\n  TAG = 'polyline-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n    private logger: LoggerService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: PolylineOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Polyline(options);\n    });\n  }\n\n  destroy(polyline: Promise): Promise {\n    return polyline.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.PolyEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(p: Polyline): Promise {\n    return this._map.then(map => new AMap.PolyEditor(map, p));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReGeocode.html":{"url":"interfaces/ReGeocode.html","title":"interface - ReGeocode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReGeocode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/re-geocode.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addressComponent\n                                \n                                \n                                        crosses\n                                \n                                \n                                        formattedAddress\n                                \n                                \n                                        pois\n                                \n                                \n                                        roads\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addressComponent\n                                    \n                                \n                                \n                                    \n                                        addressComponent:         AddressComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AddressComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crosses\n                                    \n                                \n                                \n                                    \n                                        crosses:         Cross[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cross[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedAddress\n                                    \n                                \n                                \n                                    \n                                        formattedAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:     ReGeocodePoi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReGeocodePoi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roads\n                                    \n                                \n                                \n                                    \n                                        roads:         Road[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Road[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { AddressComponent } from './address-component';\nimport { ReGeocodePoi } from './re-geocode-poi';\nimport { Road } from './road';\nimport { Cross } from './cross';\n\nexport interface ReGeocode {\n  addressComponent: AddressComponent;\n  formattedAddress: string;\n  roads: Road[];\n  crosses: Cross[];\n  pois: ReGeocodePoi[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReGeocodePoi.html":{"url":"interfaces/ReGeocodePoi.html","title":"interface - ReGeocodePoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReGeocodePoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/re-geocode-poi.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        businessArea\n                                \n                                \n                                        direction\n                                \n                                \n                                        distance\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                                \n                                        tel\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        businessArea\n                                    \n                                \n                                \n                                    \n                                        businessArea:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tel\n                                    \n                                \n                                \n                                    \n                                        tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface ReGeocodePoi {\n  id: string;\n  name: string;\n  type: string;\n  tel: string;\n  distance: number;\n  direction: string;\n  address: string;\n  location: LngLat;\n  businessArea: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReGeocodeResult.html":{"url":"interfaces/ReGeocodeResult.html","title":"interface - ReGeocodeResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReGeocodeResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/re-geocode-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                                \n                                        regeocode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        regeocode\n                                    \n                                \n                                \n                                    \n                                        regeocode:         ReGeocode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReGeocode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReGeocode } from './re-geocode';\n\nexport interface ReGeocodeResult {\n  info: string;\n  regeocode: ReGeocode;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rectangle.html":{"url":"interfaces/Rectangle.html","title":"interface - Rectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getArea\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    hide\n                                \n                                \n                                    setBounds\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArea\n                        \n                        \n                    \n                \n            \n            \n                \ngetArea()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         RectangleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsetBounds(bounds: Bounds)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                Bounds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { RectangleOptions } from '../../interface/overlays/rectangle-options.interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CRectangle {\n  new (opts: RectangleOptions): Rectangle;\n}\n\nexport interface Rectangle {\n  setOptions(opt: RectangleOptions): void;\n  getOptions(): RectangleOptions;\n  getBounds(): Bounds;\n  setBounds(bounds: Bounds): void;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RectangleOptions.html":{"url":"interfaces/RectangleOptions.html","title":"interface - RectangleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RectangleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/rectangle-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bounds\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bounds\n                                    \n                                \n                                \n                                    \n                                        bounds:         Bounds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Bounds\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\nimport { Bounds } from '../../class/amap.bounds';\n\nexport interface RectangleOptions {\n  map?: Map;\n  zIndex?: number;\n  bounds?: Bounds;\n  bubble?: boolean;\n  cursor?: string;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  extData?: any;\n  draggable?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RectangleService.html":{"url":"injectables/RectangleService.html","title":"injectable - RectangleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RectangleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/rectangle/rectangle.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(r: Rectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                                Rectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(rectangle: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rectangle-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Rectangle, Map, RectangleEditor } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { RectangleOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class RectangleService extends EventBinder {\n  TAG = 'rectangle-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n    private logger: LoggerService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: RectangleOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Rectangle(options);\n    });\n  }\n\n  destroy(rectangle: Promise): Promise {\n    return rectangle.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.RectangleEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(r: Rectangle): Promise {\n    return this._map.then(map => new AMap.RectangleEditor(map, r));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderObject.html":{"url":"interfaces/RenderObject.html","title":"interface - RenderObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenderObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/marker-cluster-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        marker\n                                \n                                \n                                        markers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marker\n                                    \n                                \n                                \n                                    \n                                        marker:         Marker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Marker\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markers\n                                    \n                                \n                                \n                                    \n                                        markers:         Marker[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Marker[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Marker } from '../class/overlays/amap.marker';\nimport { IClusterStyle } from './cluster-style.interface';\n\nexport interface MarkerClustererOptions {\n  gridSize?: number;\n  minClusterSize?: number;\n  maxZoom?: number;\n  averageCenter?: boolean;\n  styles?: IClusterStyle[];\n  renderCluserMarker?: (object: RenderObject) => void;\n  zoomOnClick: boolean;\n}\n\nexport interface RenderObject {\n  count: number;\n  markers: Marker[];\n  marker: Marker;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RideRoute.html":{"url":"interfaces/RideRoute.html","title":"interface - RideRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RideRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/ride-route.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        steps\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         RideStep[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RideStep[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RideStep } from './ride-step';\n\nexport interface RideRoute {\n  distance: number;\n  time: number;\n  steps: RideStep[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RideStep.html":{"url":"interfaces/RideStep.html","title":"interface - RideStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RideStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/ride-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        assist_action\n                                \n                                \n                                        distance\n                                \n                                \n                                        end_location\n                                \n                                \n                                        instruction\n                                \n                                \n                                        orientation\n                                \n                                \n                                        path\n                                \n                                \n                                        road\n                                \n                                \n                                        start_location\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assist_action\n                                    \n                                \n                                \n                                    \n                                        assist_action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_location\n                                    \n                                \n                                \n                                    \n                                        end_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_location\n                                    \n                                \n                                \n                                    \n                                        start_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface RideStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  distance: number;\n  time: number;\n  path: LngLat[];\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Riding.html":{"url":"interfaces/Riding.html","title":"interface - Riding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Riding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/amap.riding.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/riding/amap.riding.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/riding/amap.riding.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/riding/amap.riding.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { RidingResult } from './riding-result';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { RidingOptions } from '../../interface/riding/riding-options.interface';\n\nexport interface CRiding {\n  new (opts?: RidingOptions): Riding;\n}\n\nexport interface Riding {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RidingOptions.html":{"url":"interfaces/RidingOptions.html","title":"interface - RidingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RidingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/riding/riding-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface RidingOptions {\n  map?: Map;\n  policy?: any;\n  panel?: any;\n  hideMarkers?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RidingResult.html":{"url":"interfaces/RidingResult.html","title":"interface - RidingResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RidingResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/riding-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        routes\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:         RideRoute\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RideRoute\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { RideRoute } from './ride-route';\n\nexport interface RidingResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  count: number;\n  routes: RideRoute;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Road.html":{"url":"interfaces/Road.html","title":"interface - Road","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Road\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/road.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        direction\n                                \n                                \n                                        distance\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface Road {\n  id: string;\n  name: string;\n  distance: number;\n  location: LngLat;\n  direction: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenic.html":{"url":"interfaces/Scenic.html","title":"interface - Scenic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/scenic.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deep_src\n                                \n                                \n                                        intro\n                                \n                                \n                                        level\n                                \n                                \n                                        opentime\n                                \n                                \n                                        opentime_GDF\n                                \n                                \n                                        ordering_wap_url\n                                \n                                \n                                        ordering_web_url\n                                \n                                \n                                        photos\n                                \n                                \n                                        price\n                                \n                                \n                                        rating\n                                \n                                \n                                        recommened\n                                \n                                \n                                        season\n                                \n                                \n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime\n                                    \n                                \n                                \n                                    \n                                        opentime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime_GDF\n                                    \n                                \n                                \n                                    \n                                        opentime_GDF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_wap_url\n                                    \n                                \n                                \n                                    \n                                        ordering_wap_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_web_url\n                                    \n                                \n                                \n                                    \n                                        ordering_web_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommened\n                                    \n                                \n                                \n                                    \n                                        recommened:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                    \n                                \n                                \n                                    \n                                        season:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Scenic {\n  intro: string;\n  rating: string;\n  deep_src: string;\n  level: string;\n  price: string;\n  season: string;\n  recommened: string;\n  theme: string;\n  ordering_wap_url: string;\n  ordering_web_url: string;\n  opentime_GDF: string;\n  opentime: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/search-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cityList\n                                \n                                \n                                        info\n                                \n                                \n                                        keywordList\n                                \n                                \n                                        poiList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cityList\n                                    \n                                \n                                \n                                    \n                                        cityList:         CityInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywordList\n                                    \n                                \n                                \n                                    \n                                        keywordList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        poiList\n                                    \n                                \n                                \n                                    \n                                        poiList:         PoiList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PoiList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PoiList } from './poi-list';\nimport { CityInfo } from './city-info';\n\nexport interface SearchResult {\n  info: string;\n  poiList: PoiList;\n  keywordList: string[];\n  cityList: CityInfo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/segment.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        instruction\n                                \n                                \n                                        time\n                                \n                                \n                                        transit\n                                \n                                \n                                        transit_mode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transit\n                                    \n                                \n                                \n                                    \n                                        transit:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transit_mode\n                                    \n                                \n                                \n                                    \n                                        transit_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Segment {\n  instruction: string;\n  transit_mode: string;\n  time: number;\n  transit: any; // TODO: TransitDetail | WalkDetails\n  distance: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Size.html":{"url":"interfaces/Size.html","title":"interface - Size","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Size\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.size.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ISize\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHeight\n                                \n                                \n                                    getWidth\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeight\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.size.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetWidth()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.size.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.size.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../interface/size.interface';\n\n// AMap.Size\nexport interface Size extends ISize {\n  getWidth(): number;\n  getHeight(): number;\n  toString(): string;\n}\n\nexport interface CSize {\n  new (width: number, height: number): Size;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SizeService.html":{"url":"injectables/SizeService.html","title":"injectable - SizeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/size/size.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/size/size.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: ISize, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/size/size.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Size\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \nverify(size: ISize, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/size/size.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'size-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/size/size.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISize } from '../../types/interface';\nimport { AMapClass, Size } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class SizeService {\n  TAG = 'size-service';\n\n  constructor(private logger: LoggerService) {}\n\n  create(options: ISize, name?: string): Size {\n    if (this.verify(options, name)) {\n      return new AMap.Size(options.width, options.height);\n    } else {\n      return undefined;\n    }\n  }\n\n  verify(size: ISize, name?: string) {\n    if (typeof size.width !== 'number' || typeof size.height !== 'number') {\n      this.logger.e(`${name || 'size'} should have type {width: number, height: number}`);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TMC.html":{"url":"interfaces/TMC.html","title":"interface - TMC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TMC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        lcode\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lcode\n                                    \n                                \n                                \n                                    \n                                        lcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { District } from '../district-search/district';\n\nexport interface DriveStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n  distance: number;\n  tolls: number;\n  tolls_distance: number;\n  toll_road: string;\n  time: number;\n  path: LngLat[];\n  cities: ViaCity[];\n  tmcs: TMC[];\n}\n\nexport interface ViaCity {\n  name: string;\n  citycode: string;\n  adcode: string;\n  districts: District[];\n}\n\nexport interface TMC {\n  lcode: string;\n  distance: number;\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Text.html":{"url":"interfaces/Text.html","title":"interface - Text","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Text\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.text.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAngle\n                                \n                                \n                                    getAnimation\n                                \n                                \n                                    getClickable\n                                \n                                \n                                    getDraggable\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getMap\n                                \n                                \n                                    getOffset\n                                \n                                \n                                    getPosition\n                                \n                                \n                                    getShadow\n                                \n                                \n                                    getText\n                                \n                                \n                                    getTitle\n                                \n                                \n                                    getTop\n                                \n                                \n                                    getzIndex\n                                \n                                \n                                    hide\n                                \n                                \n                                    moveAlong\n                                \n                                \n                                    moveTo\n                                \n                                \n                                    pauseMove\n                                \n                                \n                                    resumeMove\n                                \n                                \n                                    setAngle\n                                \n                                \n                                    setAnimation\n                                \n                                \n                                    setClickable\n                                \n                                \n                                    setCursor\n                                \n                                \n                                    setDraggable\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOffset\n                                \n                                \n                                    setPosition\n                                \n                                \n                                    setShadow\n                                \n                                \n                                    setStyle\n                                \n                                \n                                    setText\n                                \n                                \n                                    setTitle\n                                \n                                \n                                    setTop\n                                \n                                \n                                    setzIndex\n                                \n                                \n                                    show\n                                \n                                \n                                    stopMove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAngle\n                        \n                        \n                    \n                \n            \n            \n                \ngetAngle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAnimation\n                        \n                        \n                    \n                \n            \n            \n                \ngetAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClickable\n                        \n                        \n                    \n                \n            \n            \n                \ngetClickable()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDraggable\n                        \n                        \n                    \n                \n            \n            \n                \ngetDraggable()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Pixel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getShadow\n                        \n                        \n                    \n                \n            \n            \n                \ngetShadow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Icon\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTop\n                        \n                        \n                    \n                \n            \n            \n                \ngetTop()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getzIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetzIndex()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveAlong\n                        \n                        \n                    \n                \n            \n            \n                \nmoveAlong(path: number[][] | LngLat[], speed: number, f?: (k?: any) => void, circlable?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                number[][] | LngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    f\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    circlable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveTo\n                        \n                        \n                    \n                \n            \n            \n                \nmoveTo(lnglat: LngLat | number[], speed: number, f?: (k?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    f\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pauseMove\n                        \n                        \n                    \n                \n            \n            \n                \npauseMove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resumeMove\n                        \n                        \n                    \n                \n            \n            \n                \nresumeMove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAngle\n                        \n                        \n                    \n                \n            \n            \n                \nsetAngle(angle: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    angle\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nsetAnimation(animate: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    animate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setClickable\n                        \n                        \n                    \n                \n            \n            \n                \nsetClickable(clickable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCursor\n                        \n                        \n                    \n                \n            \n            \n                \nsetCursor(cursor: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cursor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nsetDraggable(draggable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    draggable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOffset\n                        \n                        \n                    \n                \n            \n            \n                \nsetOffset(offset: Pixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                Pixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setShadow\n                        \n                        \n                    \n                \n            \n            \n                \nsetShadow(icon: Icon)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                Icon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStyle\n                        \n                        \n                    \n                \n            \n            \n                \nsetStyle(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setText\n                        \n                        \n                    \n                \n            \n            \n                \nsetText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTop\n                        \n                        \n                    \n                \n            \n            \n                \nsetTop(isTop: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTop\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setzIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetzIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopMove\n                        \n                        \n                    \n                \n            \n            \n                \nstopMove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Map } from '../amap.map';\nimport { Pixel } from '../amap.pixel';\nimport { Icon } from '../amap.icon';\nimport { TextOptions } from '../../interface/overlays/text-options.interface';\n\nexport interface CText {\n  new (opts: TextOptions): Text;\n}\n\nexport interface Text {\n  getText(): string;\n  setText(text: string): void;\n  setStyle(obj: any): void;\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  setAnimation(animate: string): void;\n  getAnimation(): string;\n  setClickable(clickable: boolean): void;\n  getClickable(): boolean;\n  getPosition(): LngLat;\n  setPosition(lnglat: LngLat|number[]): void;\n  setAngle(angle: number): void;\n  getAngle(): number;\n  setzIndex(index: number): void;\n  getzIndex(): number;\n  setDraggable(draggable: boolean): void;\n  getDraggable(): boolean;\n  hide(): void;\n  show(): void;\n  setCursor(cursor: string): void;\n  moveAlong(path: number[][]|LngLat[], speed: number, f?: (k: any) => any, circlable?: boolean): void;\n  moveTo(lnglat: LngLat|number[], speed: number, f?: (k: any) => any): void;\n  stopMove(): void;\n  pauseMove(): void;\n  resumeMove(): void;\n  setMap(map: Map): void;\n  getMap(): Map;\n  setTitle(title: string): void;\n  getTitle(): string;\n  setTop(isTop: boolean): void;\n  getTop(): boolean;\n  setShadow(icon: Icon): void;\n  getShadow(): Icon;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextOptions.html":{"url":"interfaces/TextOptions.html","title":"interface - TextOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TextOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/text-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        angle\n                                \n                                \n                                            Optional\n                                        animation\n                                \n                                \n                                            Optional\n                                        autoRotation\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        clickable\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        raiseOnDrag\n                                \n                                \n                                            Optional\n                                        shadow\n                                \n                                \n                                            Optional\n                                        style\n                                \n                                \n                                            Optional\n                                        text\n                                \n                                \n                                            Optional\n                                        textAlign\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        topWhenClick\n                                \n                                \n                                            Optional\n                                        verticalAlign\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angle\n                                    \n                                \n                                \n                                    \n                                        angle:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        animation\n                                    \n                                \n                                \n                                    \n                                        animation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoRotation\n                                    \n                                \n                                \n                                    \n                                        autoRotation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raiseOnDrag\n                                    \n                                \n                                \n                                    \n                                        raiseOnDrag:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shadow\n                                    \n                                \n                                \n                                    \n                                        shadow:         Icon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Icon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textAlign\n                                    \n                                \n                                \n                                    \n                                        textAlign:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topWhenClick\n                                    \n                                \n                                \n                                    \n                                        topWhenClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verticalAlign\n                                    \n                                \n                                \n                                    \n                                        verticalAlign:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\nimport { Icon } from '../../class/amap.icon';\nimport { Pixel } from '../../class/amap.pixel';\n\nexport interface TextOptions {\n  text?: string;\n  textAlign?: string;\n  verticalAlign?: string;\n  map?: Map;\n  position?: LngLat;\n  offset?: Pixel;\n  topWhenClick?: boolean;\n  bubble?: boolean;\n  draggable?: boolean;\n  raiseOnDrag?: boolean;\n  cursor?: string;\n  visible?: boolean;\n  zIndex?: number;\n  angle?: number;\n  autoRotation?: boolean;\n  animation?: string;\n  shadow?: Icon;\n  title?: string;\n  clickable?: boolean;\n  extData?: any;\n  style?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TextService.html":{"url":"injectables/TextService.html","title":"injectable - TextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/text/text.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, logger: LoggerService, pixel: PixelService, icon: IconService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/text/text.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: TextOptions, addToMap)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/text/text.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                TextOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    addToMap\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(text: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/text/text.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/text/text.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'text-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/text/text.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TextOptions, IPixel } from '../../types/interface';\nimport { AMapClass, Text, Map, Icon } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { IconService } from '../icon/icon.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class TextService extends EventBinder {\n  TAG = 'text-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private logger: LoggerService,\n    private pixel: PixelService,\n    private icon: IconService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: TextOptions, addToMap = true): Promise {\n    return this._map.then(map => {\n      if (options.offset) {\n        options.offset = this.pixel.create(options.offset, 'offset');\n      }\n\n      if (options.shadow) {\n        options.shadow = this.icon.create(options.shadow, 'shadow');\n      }\n\n      if (!options.offset)  { delete options.offset; }\n      if (!options.shadow)  { delete options.shadow; }\n\n      if (addToMap) {\n        options.map = map;\n      }\n      return new AMap.Text(options);\n    });\n  }\n\n  destroy(text: Promise): Promise {\n    return text.then(m => {\n      m.setMap(null);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tip.html":{"url":"interfaces/Tip.html","title":"interface - Tip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/tip.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        district\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        district\n                                    \n                                \n                                \n                                    \n                                        district:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tip {\n  name: string;\n  district: string;\n  adcode: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolBar.html":{"url":"interfaces/ToolBar.html","title":"interface - ToolBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.toolbar.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    doLocation\n                                \n                                \n                                    getLocation\n                                \n                                \n                                    getOffset\n                                \n                                \n                                    hide\n                                \n                                \n                                    hideDirection\n                                \n                                \n                                    hideLocation\n                                \n                                \n                                    hideRuler\n                                \n                                \n                                    setOffset\n                                \n                                \n                                    show\n                                \n                                \n                                    showDirection\n                                \n                                \n                                    showLocation\n                                \n                                \n                                    showRuler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLocation\n                        \n                        \n                    \n                \n            \n            \n                \ndoLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Pixel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDirection\n                        \n                        \n                    \n                \n            \n            \n                \nhideDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideLocation\n                        \n                        \n                    \n                \n            \n            \n                \nhideLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideRuler\n                        \n                        \n                    \n                \n            \n            \n                \nhideRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOffset\n                        \n                        \n                    \n                \n            \n            \n                \nsetOffset(offset: Pixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                Pixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDirection\n                        \n                        \n                    \n                \n            \n            \n                \nshowDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocation\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRuler\n                        \n                        \n                    \n                \n            \n            \n                \nshowRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ToolbarOptions } from '../interface/toolbar-options.interface';\nimport { Pixel } from './amap.pixel';\nimport { LngLat } from './amap.lng-lat';\n\nexport interface CToolBar {\n  new (opts?: ToolbarOptions): ToolBar;\n}\n\nexport interface ToolBar {\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  hideRuler(): void;\n  showRuler(): void;\n  hideDirection(): void;\n  showDirection(): void;\n  hideLocation(): void;\n  showLocation(): void;\n  doLocation(): void;\n  getLocation(): LngLat;\n  hide(): void;\n  show(): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/toolbar/toolbar.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, logger: LoggerService, pixels: PixelService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixels\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: ToolbarOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ToolbarOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(toolbar: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toolbar\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tool-bar-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, ToolBar, Map } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { ToolbarOptions } from '../../types/interface';\nimport { PixelService } from '../pixel/pixel.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class ToolBarService extends EventBinder {\n  TAG = 'tool-bar-service';\n  private _map: Promise;\n  private _plugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private logger: LoggerService,\n    private pixels: PixelService,\n    private plugins: PluginLoaderService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: ToolbarOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.ToolBar');\n    }\n\n    return this._plugin.then(() => this._map)\n      .then(map => {\n        if (options.offset) {\n          options.offset = this.pixels.create(options.offset, 'offset');\n        }\n\n        if (!options.offset) { delete options.offset; }\n        const toolbar = new AMap.ToolBar(options);\n        map.addControl(toolbar);\n        return toolbar;\n      });\n  }\n\n  destroy(toolbar: Promise): Promise {\n    return this._map.then(map => toolbar.then(t => map.removeControl(t)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolbarOptions.html":{"url":"interfaces/ToolbarOptions.html","title":"interface - ToolbarOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolbarOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/toolbar-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoPosition\n                                \n                                \n                                            Optional\n                                        direction\n                                \n                                \n                                            Optional\n                                        liteStyle\n                                \n                                \n                                            Optional\n                                        locate\n                                \n                                \n                                            Optional\n                                        locationMarker\n                                \n                                \n                                            Optional\n                                        noIpLocate\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        ruler\n                                \n                                \n                                            Optional\n                                        useNative\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoPosition\n                                    \n                                \n                                \n                                    \n                                        autoPosition:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        liteStyle\n                                    \n                                \n                                \n                                    \n                                        liteStyle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locate\n                                    \n                                \n                                \n                                    \n                                        locate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationMarker\n                                    \n                                \n                                \n                                    \n                                        locationMarker:         Marker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Marker\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noIpLocate\n                                    \n                                \n                                \n                                    \n                                        noIpLocate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruler\n                                    \n                                \n                                \n                                    \n                                        ruler:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useNative\n                                    \n                                \n                                \n                                    \n                                        useNative:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../class/amap.map';\nimport { Marker } from '../class/overlays/amap.marker';\nimport { IPixel } from '../interface/pixel.interface';\n\nexport interface ToolbarOptions {\n  offset?: IPixel;\n  position?: string;\n  ruler?: boolean;\n  noIpLocate?: boolean;\n  locate?: boolean;\n  liteStyle?: boolean;\n  direction?: boolean;\n  autoPosition?: boolean;\n  locationMarker?: Marker;\n  useNative?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/amap.transfer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    leaveAt\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                                \n                                    searchOnAMAP\n                                \n                                \n                                    setCity\n                                \n                                \n                                    setCityd\n                                \n                                \n                                    setPolicy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            leaveAt\n                        \n                        \n                    \n                \n            \n            \n                \nleaveAt(time: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityd\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityd(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TransferOptions } from '../../interface/transfer/transfer-options.interface';\nimport { TransferResult } from './transfer-result';\n\nexport interface CTransfer {\n  new (opts?: TransferOptions): Transfer;\n}\n\nexport interface Transfer {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setCity(city: string);\n  setCityd(city: string);\n  leaveAt(time: string, data: string);\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOptions.html":{"url":"interfaces/TransferOptions.html","title":"interface - TransferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/transfer/transfer-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        cityd\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        nightflag\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cityd\n                                    \n                                \n                                \n                                    \n                                        cityd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nightflag\n                                    \n                                \n                                \n                                    \n                                        nightflag:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface TransferOptions {\n  city?: string;\n  nightflag?: boolean;\n  policy?: any;\n  cityd?: string;\n  map?: Map;\n  panel?: any;\n  extensions?: string;\n  hideMarkers?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferPlan.html":{"url":"interfaces/TransferPlan.html","title":"interface - TransferPlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransferPlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/transfer-plan.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        distance\n                                \n                                \n                                        nightLine\n                                \n                                \n                                        path\n                                \n                                \n                                        railway_distance\n                                \n                                \n                                        segments\n                                \n                                \n                                        taxi_distance\n                                \n                                \n                                        time\n                                \n                                \n                                        transit_distance\n                                \n                                \n                                        walking_distance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nightLine\n                                    \n                                \n                                \n                                    \n                                        nightLine:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        railway_distance\n                                    \n                                \n                                \n                                    \n                                        railway_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segments\n                                    \n                                \n                                \n                                    \n                                        segments:         Segment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Segment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxi_distance\n                                    \n                                \n                                \n                                    \n                                        taxi_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transit_distance\n                                    \n                                \n                                \n                                    \n                                        transit_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walking_distance\n                                    \n                                \n                                \n                                    \n                                        walking_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Segment } from './segment';\n\nexport interface TransferPlan {\n  cost: number;\n  time: number;\n  distance: number;\n  nightLine: boolean;\n  walking_distance: number;\n  transit_distance: number;\n  railway_distance: number;\n  taxi_distance: number;\n  path: LngLat[];\n  segments: Segment[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferResult.html":{"url":"interfaces/TransferResult.html","title":"interface - TransferResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransferResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/transfer-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        plans\n                                \n                                \n                                        start\n                                \n                                \n                                        taxi_cost\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plans\n                                    \n                                \n                                \n                                    \n                                        plans:     TransferPlan[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TransferPlan[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxi_cost\n                                    \n                                \n                                \n                                    \n                                        taxi_cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { TransferPlan } from './transfer-plan';\n\nexport interface TransferResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  taxi_cost: number;\n  plans: TransferPlan[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckDriving.html":{"url":"interfaces/TruckDriving.html","title":"interface - TruckDriving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TruckDriving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    search\n                                \n                                \n                                    setProvinceAndNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(path: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TruckDrivingOptions } from '../../interface/driving/truck-driving-options.interface';\n\nexport interface CTruckDriving {\n  new (opts?: TruckDrivingOptions): TruckDriving;\n}\n\nexport interface TruckDriving {\n  search(\n    path: any[],\n    callback: callbackFn\n  );\n  clear();\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckDrivingOptions.html":{"url":"interfaces/TruckDrivingOptions.html","title":"interface - TruckDrivingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TruckDrivingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/driving/truck-driving-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        axlesNum\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        load\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        number\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                                \n                                            Optional\n                                        province\n                                \n                                \n                                            Optional\n                                        showTraffic\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        weight\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        axlesNum\n                                    \n                                \n                                \n                                    \n                                        axlesNum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        load\n                                    \n                                \n                                \n                                    \n                                        load:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTraffic\n                                    \n                                \n                                \n                                    \n                                        showTraffic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface TruckDrivingOptions {\n  policy?: any;\n  size?: number;\n  width?: number;\n  height?: number;\n  load?: number;\n  weight?: number;\n  axlesNum?: number;\n  extensions?: string;\n  map?: Map;\n  panel?: any;\n  hideMarkers?: boolean;\n  showTraffic?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n  province?: string;\n  number?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getOptionsFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getOptionsFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsFor(component: any, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/utils.ts:2\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  static getOptionsFor(component: any, keys: string[]): T {\n    const options: any = {};\n\n    keys.forEach(key => {\n      if (component[key] !== undefined && component[key] !== null) {\n        options[key] = component[key];\n      }\n    });\n\n    return options;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViaCity.html":{"url":"interfaces/ViaCity.html","title":"interface - ViaCity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViaCity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        citycode\n                                \n                                \n                                        districts\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        districts\n                                    \n                                \n                                \n                                    \n                                        districts:         District[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         District[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { District } from '../district-search/district';\n\nexport interface DriveStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n  distance: number;\n  tolls: number;\n  tolls_distance: number;\n  toll_road: string;\n  time: number;\n  path: LngLat[];\n  cities: ViaCity[];\n  tmcs: TMC[];\n}\n\nexport interface ViaCity {\n  name: string;\n  citycode: string;\n  adcode: string;\n  districts: District[];\n}\n\nexport interface TMC {\n  lcode: string;\n  distance: number;\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkRoute.html":{"url":"interfaces/WalkRoute.html","title":"interface - WalkRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/walk-route.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        steps\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         WalkStep[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WalkStep[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WalkStep } from './walk-step';\n\nexport interface WalkRoute {\n  distance: number;\n  time: number;\n  steps: WalkStep[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkStep.html":{"url":"interfaces/WalkStep.html","title":"interface - WalkStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/walk-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        assist_action\n                                \n                                \n                                        distance\n                                \n                                \n                                        end_location\n                                \n                                \n                                        instruction\n                                \n                                \n                                        orientation\n                                \n                                \n                                        path\n                                \n                                \n                                        road\n                                \n                                \n                                        start_location\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assist_action\n                                    \n                                \n                                \n                                    \n                                        assist_action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_location\n                                    \n                                \n                                \n                                    \n                                        end_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_location\n                                    \n                                \n                                \n                                    \n                                        start_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface WalkStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  distance: number;\n  time: number;\n  path: LngLat[];\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Walking.html":{"url":"interfaces/Walking.html","title":"interface - Walking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Walking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/amap.walking.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                                \n                                    searchOnAMAP\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { WalkingResult } from './walking-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { WalkingOptions } from '../../interface/walking/walking-options.interface';\n\nexport interface CWalking {\n  new (opts?: WalkingOptions): Walking;\n}\n\nexport interface Walking {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkingOptions.html":{"url":"interfaces/WalkingOptions.html","title":"interface - WalkingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/walking/walking-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface WalkingOptions {\n  map?: Map;\n  panel?: any;\n  hideMarkers?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkingResult.html":{"url":"interfaces/WalkingResult.html","title":"interface - WalkingResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkingResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/walking-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        routes\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:         WalkRoute\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WalkRoute\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { WalkRoute } from './walk-route';\n\nexport interface WalkingResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  count: number;\n  routes: WalkRoute;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowRef.html":{"url":"injectables/WindowRef.html","title":"injectable - WindowRef","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/browser-globals.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNativeWindow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeWindow\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeWindow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/browser-globals.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n}\n\n@Injectable()\nexport class DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n2.2.0 & 1.4.0 (2018-11-29)\nNew\n\n支持路径规划：\nAMap.Driving 驾车路线规划服务：AmapDrivingService\nAMap.TruckDriving 货车路线规划服务：AmapTruckDrivingService\nAMap.Transfer 公交换乘路线规划服务：AmapTransferService\nAMap.Walking 步行路线规划服务：AmapWalkingService\nAMap.Riding 骑行路线规划服务：AmapRidingService\n\n\n\n\n2.1.1 & 1.3.3 (2018-06-22)\nBugfix\n\n[amapAutocomplete] 切换city时不起作用 issue#23\n\n\n2.1.0 (2018-05-24)\nNew\n\n新增支持图层AMap.Heatmap指令：amap-heatmap\n\n\n2.0.0 (2018-05-11)\nNew\n\n支持Angular 6\n\n\n1.3.2 (2018-04-17)\nNew\n\n新增支持AMap.DistrictSearch行政区查询服务：AmapDistrictSearchService (感谢: noob9527)\n\n\n1.3.1 (2018-03-27)\nNew\n\ndemo AMap.CircleEditor编辑功能：amap-circle [editor]=\"true\"\ndemo AMap.PolyEditor编辑功能：amap-polyline, amap-polygon [editor]=\"true\"\ndemo AMap.BezierCurveEditor编辑功能：amap-bezier-curve [editor]=\"true\" [editorOptions]=\"editorOptions\"\ndemo AMap.EllipseEditor编辑功能：amap-ellipse [editor]=\"true\"\ndemo AMap.RectangleEditor编辑功能：amap-rectangle [editor]=\"true\"\n添加editor相关事件emitter，例如：(editorAddnode), (editorAdjust)等，详见各demo\n\n\n1.3.0 (2018-03-26)\nNew\n\n新增支持覆盖物AMap.Polygon指令：amap-polygon\n新增支持覆盖物AMap.Text指令：amap-text\n新增支持覆盖物AMap.BezierCurve指令：amap-bezier-curve\n新增支持覆盖物AMap.Ellipse指令：amap-ellipse\n新增支持覆盖物AMap.Rectangle指令：amap-rectangle\n\nChanges\n\n对大部分指令和组件增加exportAs，方便在模板中引用指令实例\n\n\n1.2.0 (2018-03-21)\nNew\n\n新增支持AMap.MouseTool鼠标工具插件：AmapMouseToolService (感谢: noob9527)\n\n\n1.1.2 (2018-02-28)\nNew\n\nngx-amap支持gridMapForeign选项，以显示国外的地图细节\n\n\n1.1.1 (2018-02-05)\nNew\n\n新增支持覆盖物AMap.CircleMarker的指令：amap-circle-marker (需要高德API-v1.4.3支持)\n\n\n1.1.0 (2018-02-05)\nNew\n\n新增支持覆盖物AMap.Circle的指令：amap-circle\n\nChanges\n\n默认高德API的baseUrl调整为https协议\n默认高德API的版本调整为1.4.3\n\n\n1.0.1 (2017-11-29)\nBugfix\n\n修复 input[Autocomplete] 指令事件错误的问题\n\n\n1.0.0 (2017-11-29)\nNew\n\n新增支持AMap.PlaceSearch的搜索服务：AmapPlaceSearchService\n\n\n1.0.0-beta.4 (2017-11-28)\nNew\n\n新增支持AMap.Geocoder的地理服务：AmapGeocoderService\n新增支持AMap.Autocomplete的搜索服务和指令：AmapAutocompleteService, AmapAutocompleteDirective\n\nChanges\n\n逻辑变更：marker在没有position的时候不再绘制于默认位置\n逻辑变更：info-window现在会跟随它的hostMarker改变位置\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.0.0\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ~7.0.0\n        \n            bootstrap : ^4.1.1\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.4\n        \n            font-awesome : ^4.7.0\n        \n            html-loader : ^0.5.5\n        \n            ngx-bootstrap : ^2.0.5\n        \n            ngx-markdown : ^7.0.0\n        \n            raw-loader : ^0.5.1\n        \n            rxjs : ~6.3.3\n        \n            rxjs-compat : ^6.1.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-amap\n\n\n\n\n在线演示\n模块文档\n\nngx-amap 是为在Angular(ver >= 2.x)项目中便捷、高效地使用高德地图Javascript API而构建的组件集合\n目录\n\n版本信息\n最新进度\n安装\n使用\n配置\n指令和服务\n类型声明\n本地演示\n\n版本信息\n@npm:\n+ v2.x for Angular >= 6\n+ v1.4.0 for Angular \nGithub branches:\n+ master for Angular >= 6\n+ v1.x for Angular \n最新进度\n2018.11.29: v2.2.0 & v1.4.0\n  + 新增支持路径规划：\n    + AMap.Driving 驾车路线规划服务：AmapDrivingService\n    + AMap.TruckDriving 货车路线规划服务：AmapTruckDrivingService\n    + AMap.Transfer 公交换乘路线规划服务：AmapTransferService\n    + AMap.Walking 步行路线规划服务：AmapWalkingService\n    + AMap.Riding 骑行路线规划服务：AmapRidingService\n2018.06.22: v2.1.1 & v1.3.3\n  + Bugfix：[amapAutocomplete] 切换city时不起作用 issue#23\n2018.05.24: v2.1.0\n  + 新增支持图层AMap.Heatmap指令：amap-heatmap\n2018.05.11: v2.0.0: 支持 Angular 6\n2018.04.17: v1.3.2：行政区查询\n  + 新增支持AMap.DistrictSearch行政区查询服务：AmapDistrictSearchService (感谢: noob9527)\n2018.03.27: v1.3.1：覆盖物编辑功能 (传送门：高德开放平台API)\n  + demo AMap.CircleEditor编辑功能：amap-circle [editor]=\"true\"\n  + demo AMap.PolyEditor编辑功能：amap-polyline, amap-polygon [editor]=\"true\"\n  + demo AMap.BezierCurveEditor编辑功能：amap-bezier-curve [editor]=\"true\" [editorOptions]=\"editorOptions\"\n  + demo AMap.EllipseEditor编辑功能：amap-ellipse [editor]=\"true\"\n  + demo AMap.RectangleEditor编辑功能：amap-rectangle [editor]=\"true\"\n  + 添加editor相关事件emitter，例如：(editorAddnode), (editorAdjust)等，详见示例\n安装\n```bash\n$ npm install ngx-amap --save\nor\n$ yarn add ngx-amap\n```\n使用\n\nimport NgxAmapModule\n\nExample:\n```typescript\nimport { NgxAmapModule } from 'ngx-amap';\n@NgModule({\n  imports: [\n...,\nNgxAmapModule.forRoot({\n  apiKey: '你申请的key'\n})  ],\n  ...\n})\nexport class AppModule { }\n```\n\n\n\n使用 ngx-amap 组件时必须给定高度.\n\n简单示例:\n\nhtml:\nhtml\n\n\ncss:\ncss\n.demo-map {\nheight: 400px;\n}\n\n\n\n\n\n可以配合使用其他指令和组件。例如 amap-marker 可以在地图中画覆盖物：点标记。\n\n简单示例:\n\nhtml:\n```html\n\n\n```\n\n\n\n\n\n加入地图控件的方法也很简单，例如：amap-tool-bar\n\n简单示例:\n\nhtml:\n```html\n\n\n```\n\n\n\n\n\n\n\n更多用法和事件，请参看演示和文档。\n配置\n你可以通过NgxAmapModule的forRoot()方法设置ngx-amap. 它可以接受以下参数传入：\ntypescript\n{\n  apiKey: string;   // *必须， 高德地图的开发者license key\n  apiVersion: string;  // [可选]，默认是'1.4.11'\n  urlPath: string;  // [可选]， 默认是 'https://webapi.amap.com/maps', 可以用它设置HTTPS或者HTTP协议\n}\n指令和服务\n| NGX-AMAP | 类型 | 高德地图 | 类 | 演示示例 |\n| -------- | --- |------- | -- | -------- |\n|ngx-amap                 | Component | 地图 | AMap.Map | demo |\n|amap-marker              | Directive | 覆盖物：点标记 | AMap.Marker | demo |\n|amap-text                | Directive | 覆盖物：文本标记 | AMap.Text | demo |\n|amap-polyline            | Directive | 覆盖物：折线 | AMap.Polyline | demo |\n|amap-polygon             | Directive | 覆盖物：多边线 | AMap.Polygon | demo |\n|amap-bezier-curve        | Directive | 覆盖物：贝塞尔曲线 | AMap.BezierCurve | demo |\n|amap-ellipse             | Directive | 覆盖物：椭圆 | AMap.Ellipse | demo |\n|amap-circle              | Directive | 覆盖物：圆 | AMap.Circle | demo |\n|amap-circle-marker       | Directive | 覆盖物：圆点标记 | AMap.CircleMarker | demo |\n|amap-rectangle           | Directive | 覆盖物：矩形 | AMap.Rectangle | demo |\n|amap-info-window         | Component | 信息窗体 | AMap.InfoWindow | demo |\n|amap-tool-bar            | Directive | 工具条插件 | AMap.ToolBar | demo |\n|amap-marker-clusterer    | Directive | 点聚合插件 | AMap.MarkerClusterer | demo |\n|AmapGeocoderService      | Service   | 地理编码服务 | AMap.Geocoder | demo |\n|AmapAutocompleteService  | Service   | 关键字提示服务 | AMap.Autocomplete | demo |\n|AmapPlaceSearchService   | Service   | 地点搜索服务 | AMap.PlaceSearch | demo |\n|AmapDistrictSearchService| Service   | 行政区搜索服务 | AMap.DistrictSearch | demo |\n|AmapMouseToolService     | Service   | 鼠标工具插件 | AMap.MouseTool | demo |\n|amap-heatmap             | Directive | 图层：热力图 | AMap.Heatmap | demo |\n|AmapDrivingService       | Service   | 驾车路线规划服务 | AMap.Driving | demo |\n|AmapTruckDrivingService  | Service   | 货车路线规划服务 | AMap.TruckDriving | demo |\n|AmapTransferService      | Service   | 换乘路线规划服务 | AMap.Transfer | demo |\n|AmapWalkingService       | Service   | 步行路线规划服务 | AMap.Walking | demo |\n|AmapRidingService        | Service   | 骑行路线规划服务 | AMap.Riding | demo |\n类型声明\n可以从ngx-amap/types/class中import对AMap类的声明：\ntypescript\n  import { Map, Marker, LngLat, Icon } from 'ngx-amap/types/class';\n可以从ngx-amap/types/interface中import对ngx-amap所使用的Input类型需要的声明：\ntypescript\n  import { MarkerOptions, IPixel, IIcon } from 'ngx-amap/types/interface';\n更多类型，请参看在线文档\n本地演示\n\nclone 当前 repo 到本地\n修改 src/app/app.module.ts 以使用自己的的高德API key\n启动demo，浏览器打开: localhost:8080\n```bash\nnpm install\nnpm run demoor\nyarn\nyarn demo\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Xie, Ziyu\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxAmapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxAmapModule\n\n\n\ncluster_NgxAmapModule_declarations\n\n\n\ncluster_NgxAmapModule_exports\n\n\n\n\nAmapAutocompleteDirective\n\nAmapAutocompleteDirective\n\n\n\nNgxAmapModule\n\nNgxAmapModule\n\nNgxAmapModule -->\n\nAmapAutocompleteDirective->NgxAmapModule\n\n\n\n\n\nAmapBezierCurveDirective\n\nAmapBezierCurveDirective\n\nNgxAmapModule -->\n\nAmapBezierCurveDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleDirective\n\nAmapCircleDirective\n\nNgxAmapModule -->\n\nAmapCircleDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleMarkerDirective\n\nAmapCircleMarkerDirective\n\nNgxAmapModule -->\n\nAmapCircleMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapEllipseDirective\n\nAmapEllipseDirective\n\nNgxAmapModule -->\n\nAmapEllipseDirective->NgxAmapModule\n\n\n\n\n\nAmapHeatmapDirective\n\nAmapHeatmapDirective\n\nNgxAmapModule -->\n\nAmapHeatmapDirective->NgxAmapModule\n\n\n\n\n\nAmapInfoWindowComponent\n\nAmapInfoWindowComponent\n\nNgxAmapModule -->\n\nAmapInfoWindowComponent->NgxAmapModule\n\n\n\n\n\nAmapMarkerClustererDirective\n\nAmapMarkerClustererDirective\n\nNgxAmapModule -->\n\nAmapMarkerClustererDirective->NgxAmapModule\n\n\n\n\n\nAmapMarkerDirective\n\nAmapMarkerDirective\n\nNgxAmapModule -->\n\nAmapMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapPolygonDirective\n\nAmapPolygonDirective\n\nNgxAmapModule -->\n\nAmapPolygonDirective->NgxAmapModule\n\n\n\n\n\nAmapPolylineDirective\n\nAmapPolylineDirective\n\nNgxAmapModule -->\n\nAmapPolylineDirective->NgxAmapModule\n\n\n\n\n\nAmapRectangleDirective\n\nAmapRectangleDirective\n\nNgxAmapModule -->\n\nAmapRectangleDirective->NgxAmapModule\n\n\n\n\n\nAmapTextDirective\n\nAmapTextDirective\n\nNgxAmapModule -->\n\nAmapTextDirective->NgxAmapModule\n\n\n\n\n\nAmapToolBarDirective\n\nAmapToolBarDirective\n\nNgxAmapModule -->\n\nAmapToolBarDirective->NgxAmapModule\n\n\n\n\n\nNgxAmapComponent\n\nNgxAmapComponent\n\nNgxAmapModule -->\n\nNgxAmapComponent->NgxAmapModule\n\n\n\n\n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective  -->\n\nNgxAmapModule->AmapAutocompleteDirective \n\n\n\n\n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective  -->\n\nNgxAmapModule->AmapBezierCurveDirective \n\n\n\n\n\nAmapCircleDirective \n\nAmapCircleDirective \n\nAmapCircleDirective  -->\n\nNgxAmapModule->AmapCircleDirective \n\n\n\n\n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective  -->\n\nNgxAmapModule->AmapCircleMarkerDirective \n\n\n\n\n\nAmapEllipseDirective \n\nAmapEllipseDirective \n\nAmapEllipseDirective  -->\n\nNgxAmapModule->AmapEllipseDirective \n\n\n\n\n\nAmapHeatmapDirective \n\nAmapHeatmapDirective \n\nAmapHeatmapDirective  -->\n\nNgxAmapModule->AmapHeatmapDirective \n\n\n\n\n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent  -->\n\nNgxAmapModule->AmapInfoWindowComponent \n\n\n\n\n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective  -->\n\nNgxAmapModule->AmapMarkerClustererDirective \n\n\n\n\n\nAmapMarkerDirective \n\nAmapMarkerDirective \n\nAmapMarkerDirective  -->\n\nNgxAmapModule->AmapMarkerDirective \n\n\n\n\n\nAmapPolygonDirective \n\nAmapPolygonDirective \n\nAmapPolygonDirective  -->\n\nNgxAmapModule->AmapPolygonDirective \n\n\n\n\n\nAmapPolylineDirective \n\nAmapPolylineDirective \n\nAmapPolylineDirective  -->\n\nNgxAmapModule->AmapPolylineDirective \n\n\n\n\n\nAmapRectangleDirective \n\nAmapRectangleDirective \n\nAmapRectangleDirective  -->\n\nNgxAmapModule->AmapRectangleDirective \n\n\n\n\n\nAmapTextDirective \n\nAmapTextDirective \n\nAmapTextDirective  -->\n\nNgxAmapModule->AmapTextDirective \n\n\n\n\n\nAmapToolBarDirective \n\nAmapToolBarDirective \n\nAmapToolBarDirective  -->\n\nNgxAmapModule->AmapToolBarDirective \n\n\n\n\n\nNgxAmapComponent \n\nNgxAmapComponent \n\nNgxAmapComponent  -->\n\nNgxAmapModule->NgxAmapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    34 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    140 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            callbackFn   (projects/.../callback.type.ts)\n                        \n                        \n                            CCircleEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CEllipseEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CircleEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CPolyEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CRectangleEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CurvePath   (projects/.../bezier-curve-options.interface.ts)\n                        \n                        \n                            EllipseEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            HeatmapData   (projects/.../amap.heatmap.ts)\n                        \n                        \n                            ILngLat   (projects/.../lng-lat.interface.ts)\n                        \n                        \n                            PolyEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            PolygonPath   (projects/.../amap.polygon.ts)\n                        \n                        \n                            RectangleEditor   (projects/.../amap.editor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-amap/src/types/interface/callback.type.ts\n    \n    \n        \n            \n                \n                    \n                    callbackFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/class/amap.editor.ts\n    \n    \n        \n            \n                \n                    \n                    CCircleEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CEllipseEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CircleEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CPolyEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CRectangleEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EllipseEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolyEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RectangleEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/interface/overlays/bezier-curve-options.interface.ts\n    \n    \n        \n            \n                \n                    \n                    CurvePath\n                \n            \n            \n                \n                        Array> | Array>>\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n    \n    \n        \n            \n                \n                    \n                    HeatmapData\n                \n            \n            \n                \n                            HeatmapDataSet | HeatmapDataUrl\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/interface/lng-lat.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ILngLat\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/class/overlays/amap.polygon.ts\n    \n    \n        \n            \n                \n                    \n                    PolygonPath\n                \n            \n            \n                \n                            Array | Array> | Array | Array>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_OPTIONS   (projects/.../amap-marker.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../ngx-amap.component.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-info-window.component.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-bezier-curve.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-circle.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-circle-marker.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-ellipse.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-heatmap.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-autocomplete.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-marker-clusterer.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-polygon.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-polyline.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-rectangle.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-text.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-toolbar.directive.ts)\n                        \n                        \n                            AMap   (projects/.../amap-transfer.service.ts)\n                        \n                        \n                            AMap   (projects/.../event-binder.ts)\n                        \n                        \n                            AMap   (projects/.../amap-district-search.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-driving.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-geocoder.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-mouse-tool.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-place-search.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-riding.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-autocomplete.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-truck-driving.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-walking.service.ts)\n                        \n                        \n                            AMap   (projects/.../bezier-curve.service.ts)\n                        \n                        \n                            AMap   (projects/.../circle.service.ts)\n                        \n                        \n                            AMap   (projects/.../circle-marker.service.ts)\n                        \n                        \n                            AMap   (projects/.../ellipse.service.ts)\n                        \n                        \n                            AMap   (projects/.../heatmap.service.ts)\n                        \n                        \n                            AMap   (projects/.../icon.service.ts)\n                        \n                        \n                            AMap   (projects/.../info-window.service.ts)\n                        \n                        \n                            AMap   (projects/.../label.service.ts)\n                        \n                        \n                            AMap   (projects/.../map-api.service.ts)\n                        \n                        \n                            AMap   (projects/.../toolbar.service.ts)\n                        \n                        \n                            AMap   (projects/.../marker.service.ts)\n                        \n                        \n                            AMap   (projects/.../marker-clusterer.service.ts)\n                        \n                        \n                            AMap   (projects/.../pixel.service.ts)\n                        \n                        \n                            AMap   (projects/.../plugin-loader.service.ts)\n                        \n                        \n                            AMap   (projects/.../polygon.service.ts)\n                        \n                        \n                            AMap   (projects/.../polyline.service.ts)\n                        \n                        \n                            AMap   (projects/.../rectangle.service.ts)\n                        \n                        \n                            AMap   (projects/.../text.service.ts)\n                        \n                        \n                            AMap   (projects/.../size.service.ts)\n                        \n                        \n                            MAP_API_CONFIG   (projects/.../map-api-loader.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-amap/src/directives/amap-marker/amap-marker.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'position',\n  'offset',\n  'icon',\n  'content',\n  'topWhenClick',\n  'bubble',\n  'draggable',\n  'raiseOnDrag',\n  'cursor',\n  'visible',\n  'zIndex',\n  'angle',\n  'autoRotation',\n  'shadow',\n  'title',\n  'clickable',\n  'shape',\n  'extData',\n  'label'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/components/ngx-amap/ngx-amap.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'view',\n  'layers',\n  'zoom',\n  'center',\n  'labelzIndex',\n  'zooms',\n  'lang',\n  'cursor',\n  'crs',\n  'animateEnable',\n  'isHotspot',\n  'defaultLayer',\n  'rotateEnable',\n  'resizeEnable',\n  'showIndoorMap',\n  'indoorMap',\n  'expandZoomRange',\n  'dragEnable',\n  'zoomEnable',\n  'doubleClickZoom',\n  'keyboardEnable',\n  'jogEnable',\n  'scrollWheel',\n  'touchZoom',\n  'mapStyle',\n  'features',\n  'showBuildingBlock',\n  'viewMode',\n  'pitch',\n  'pitchEnable',\n  'buildingAnimation',\n  'skyColor',\n  'gridMapForeign'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'isCustom',\n  'autoMove',\n  'closeWhenClickMap',\n  'content',\n  'size',\n  'offset',\n  'position',\n  'showShadow'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-bezier-curve/amap-bezier-curve.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'path',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'strokeStyle',\n  'strokeDasharray',\n  'zIndex',\n  'showDir',\n  'bubble',\n  'cursor',\n  'isOutline',\n  'outlineColor',\n  'borderWeight',\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-circle/amap-circle.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'extData'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-ellipse/amap-ellipse.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'radius',\n  'gradient',\n  'opacity',\n  'zooms'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'type',\n  'city',\n  'datatype',\n  'citylimit'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-marker-clusterer/amap-marker-clusterer.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'gridSize',\n  'minClusterSize',\n  'maxZoom',\n  'averageCenter',\n  'styles',\n  'renderCluserMarker',\n  'zoomOnClick'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-polygon/amap-polygon.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'path',\n  'bubble',\n  'cursor',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData',\n  'draggable'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-polyline/amap-polyline.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'bubble',\n  'geodesic',\n  'isOutline',\n  'borderWeight',\n  'outlineColor',\n  'path',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'strokeStyle',\n  'strokeDasharray',\n  'lineJoin',\n  'extData',\n  'showDir'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-rectangle/amap-rectangle.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'bounds',\n  'bubble',\n  'cursor',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData',\n  'draggable'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-text/amap-text.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'text',\n  'textAlign',\n  'verticalAlign',\n  'position',\n  'offset',\n  'topWhenClick',\n  'bubble',\n  'draggable',\n  'raiseOnDrag',\n  'cursor',\n  'visible',\n  'zIndex',\n  'angle',\n  'autoRotation',\n  'animation',\n  'shadow',\n  'title',\n  'clickable',\n  'extData',\n  'style'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'offset',\n  'position',\n  'ruler',\n  'noIpLocate',\n  'locate',\n  'liteStyle',\n  'direction',\n  'autoPosition',\n  'locationMarker',\n  'useNative'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/utils/event-binder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/circle/circle.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/ellipse/ellipse.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/heatmap/heatmap.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/icon/icon.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/info-window/info-window.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/label/label.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/map-api/map-api.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/toolbar/toolbar.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/marker/marker.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/pixel/pixel.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/polygon/polygon.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/polyline/polyline.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/rectangle/rectangle.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/text/text.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/size/size.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_API_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('ngx-amap MAP_API_CONFIG')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
